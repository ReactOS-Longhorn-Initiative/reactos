# 1 "mshtml.idl" 1




















# 1 "C:/Users/darkfire/Desktop/WineSync/longhorn/reactos/sdk/include/psdk/mshtmdid.h" 1 3
















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































 



 









































































































































































































































































































































































































# 21 "mshtml.idl" 2

# 1 "C:/Users/darkfire/Desktop/WineSync/longhorn/reactos/sdk/include/psdk/mshtmcid.h" 1 3









































































































































































































































































































































































































































# 22 "mshtml.idl" 2

# 1 "C:/Users/darkfire/Desktop/WineSync/longhorn/reactos/sdk/include/psdk/olectl.h" 1 3





























































































































































































































































































































































































































































# 23 "mshtml.idl" 2

import "ocidl.idl";
import "dimm.idl";
import "shtypes.idl";
import "dispex.idl";






cpp_quote("#include <olectl.h>")

cpp_quote("DEFINE_GUID(SID_SEditCommandTarget,  0x3050f4b5,0x98b5,0x11cf,0xbb,0x82,0x00,0xaa,0x00,0xbd,0xce,0x0b);")
cpp_quote("DEFINE_GUID(SID_SHTMLEditHost,       0x3050f6a0,0x98b5,0x11cf,0xbb,0x82,0x00,0xaa,0x00,0xbd,0xce,0x0b);")
cpp_quote("DEFINE_GUID(SID_SHTMLEditServices,   0x3050f7f9,0x98b5,0x11cf,0xbb,0x82,0x00,0xaa,0x00,0xbd,0xce,0x0b);")
cpp_quote("#define SID_SHTMLWindow IID_IHTMLWindow2")
cpp_quote("#define SID_SElementBehaviorFactory IID_IElementBehaviorFactory")

cpp_quote("#ifdef WINE_NO_UNICODE_MACROS")
cpp_quote("#undef FindText")
cpp_quote("#endif")

typedef enum {
    POINTER_GRAVITY_Left,
    POINTER_GRAVITY_Right,
    POINTER_GRAVITY_Max = 2147483647
} POINTER_GRAVITY;

typedef enum {
    CONTEXT_TYPE_None,
    CONTEXT_TYPE_Text,
    CONTEXT_TYPE_EnterScope,
    CONTEXT_TYPE_ExitScope,
    CONTEXT_TYPE_NoScope,
    MARKUP_CONTEXT_TYPE_Max = 2147483647
} MARKUP_CONTEXT_TYPE;

typedef enum {
    ELEM_ADJ_BeforeBegin,
    ELEM_ADJ_AfterBegin,
    ELEM_ADJ_BeforeEnd,
    ELEM_ADJ_AfterEnd,
    ELEMENT_ADJACENCY_Max = 2147483647
} ELEMENT_ADJACENCY;

typedef enum {
    MOVEUNIT_PREVCHAR,
    MOVEUNIT_NEXTCHAR,
    MOVEUNIT_PREVCLUSTERBEG,
    MOVEUNIT_NEXTCLUSTERBEG,
    MOVEUNIT_PREVCLUSTEREND,
    MOVEUNIT_NEXTCLUSTEREND,
    MOVEUNIT_PREVWORDBEG,
    MOVEUNIT_NEXTWORDBEG,
    MOVEUNIT_PREVWORDEND,
    MOVEUNIT_NEXTWORDEND,
    MOVEUNIT_PREVPROOFWORD,
    MOVEUNIT_NEXTPROOFWORD,
    MOVEUNIT_NEXTURLBEG,
    MOVEUNIT_PREVURLBEG,
    MOVEUNIT_NEXTURLEND,
    MOVEUNIT_PREVURLEND,
    MOVEUNIT_PREVSENTENCE,
    MOVEUNIT_NEXTSENTENCE,
    MOVEUNIT_PREVBLOCK,
    MOVEUNIT_NEXTBLOCK,
    MOVEUNIT_ACTION_Max = 2147483647
} MOVEUNIT_ACTION;

typedef enum _SELECTION_TYPE {
    SELECTION_TYPE_None,
    SELECTION_TYPE_Caret,
    SELECTION_TYPE_Text,
    SELECTION_TYPE_Control,
    SELECTION_TYPE_Max = 2147483647
} SELECTION_TYPE;

[
    version(4.0),
    uuid(3050F1C5-98B5-11CF-BB82-00AA00BDCE0B)
]
library MSHTML
{

importlib("stdole2.tlb");

typedef enum _DomConstructor {
    DomConstructorObject                      = 0,
    DomConstructorAttr                        = 1,
    DomConstructorBehaviorUrnsCollection      = 2,
    DomConstructorBookmarkCollection          = 3,
    DomConstructorCompatibleInfo              = 4,
    DomConstructorCompatibleInfoCollection    = 5,
    DomConstructorControlRangeCollection      = 6,
    DomConstructorCSSCurrentStyleDeclaration  = 7,
    DomConstructorCSSRuleList                 = 8,
    DomConstructorCSSRuleStyleDeclaration     = 9,
    DomConstructorCSSStyleDeclaration         = 10,
    DomConstructorCSSStyleRule                = 11,
    DomConstructorCSSStyleSheet               = 12,
    DomConstructorDataTransfer                = 13,
    DomConstructorDOMImplementation           = 14,
    DomConstructorElement                     = 15,
    DomConstructorEvent                       = 16,
    DomConstructorHistory                     = 17,
    DomConstructorHTCElementBehaviorDefaults  = 18,
    DomConstructorHTMLAnchorElement           = 19,
    DomConstructorHTMLAreaElement             = 20,
    DomConstructorHTMLAreasCollection         = 21,
    DomConstructorHTMLBaseElement             = 22,
    DomConstructorHTMLBaseFontElement         = 23,
    DomConstructorHTMLBGSoundElement          = 24,
    DomConstructorHTMLBlockElement            = 25,
    DomConstructorHTMLBodyElement             = 26,
    DomConstructorHTMLBRElement               = 27,
    DomConstructorHTMLButtonElement           = 28,
    DomConstructorHTMLCollection              = 29,
    DomConstructorHTMLCommentElement          = 30,
    DomConstructorHTMLDDElement               = 31,
    DomConstructorHTMLDivElement              = 32,
    DomConstructorHTMLDocument                = 33,
    DomConstructorHTMLDListElement            = 34,
    DomConstructorHTMLDTElement               = 35,
    DomConstructorHTMLEmbedElement            = 36,
    DomConstructorHTMLFieldSetElement         = 37,
    DomConstructorHTMLFontElement             = 38,
    DomConstructorHTMLFormElement             = 39,
    DomConstructorHTMLFrameElement            = 40,
    DomConstructorHTMLFrameSetElement         = 41,
    DomConstructorHTMLGenericElement          = 42,
    DomConstructorHTMLHeadElement             = 43,
    DomConstructorHTMLHeadingElement          = 44,
    DomConstructorHTMLHRElement               = 45,
    DomConstructorHTMLHtmlElement             = 46,
    DomConstructorHTMLIFrameElement           = 47,
    DomConstructorHTMLImageElement            = 48,
    DomConstructorHTMLInputElement            = 49,
    DomConstructorHTMLIsIndexElement          = 50,
    DomConstructorHTMLLabelElement            = 51,
    DomConstructorHTMLLegendElement           = 52,
    DomConstructorHTMLLIElement               = 53,
    DomConstructorHTMLLinkElement             = 54,
    DomConstructorHTMLMapElement              = 55,
    DomConstructorHTMLMarqueeElement          = 56,
    DomConstructorHTMLMetaElement             = 57,
    DomConstructorHTMLModelessDialog          = 58,
    DomConstructorHTMLNamespaceInfo           = 59,
    DomConstructorHTMLNamespaceInfoCollection = 60,
    DomConstructorHTMLNextIdElement           = 61,
    DomConstructorHTMLNoShowElement           = 62,
    DomConstructorHTMLObjectElement           = 63,
    DomConstructorHTMLOListElement            = 64,
    DomConstructorHTMLOptionElement           = 65,
    DomConstructorHTMLParagraphElement        = 66,
    DomConstructorHTMLParamElement            = 67,
    DomConstructorHTMLPhraseElement           = 68,
    DomConstructorHTMLPluginsCollection       = 69,
    DomConstructorHTMLPopup                   = 70,
    DomConstructorHTMLScriptElement           = 71,
    DomConstructorHTMLSelectElement           = 72,
    DomConstructorHTMLSpanElement             = 73,
    DomConstructorHTMLStyleElement            = 74,
    DomConstructorHTMLTableCaptionElement     = 75,
    DomConstructorHTMLTableCellElement        = 76,
    DomConstructorHTMLTableColElement         = 77,
    DomConstructorHTMLTableElement            = 78,
    DomConstructorHTMLTableRowElement         = 79,
    DomConstructorHTMLTableSectionElement     = 80,
    DomConstructorHTMLTextAreaElement         = 81,
    DomConstructorHTMLTextElement             = 82,
    DomConstructorHTMLTitleElement            = 83,
    DomConstructorHTMLUListElement            = 84,
    DomConstructorHTMLUnknownElement          = 85,
    DomConstructorImage                       = 86,
    DomConstructorLocation                    = 87,
    DomConstructorNamedNodeMap                = 88,
    DomConstructorNavigator                   = 89,
    DomConstructorNodeList                    = 90,
    DomConstructorOption                      = 91,
    DomConstructorScreen                      = 92,
    DomConstructorSelection                   = 93,
    DomConstructorStaticNodeList              = 94,
    DomConstructorStorage                     = 95,
    DomConstructorStyleSheetList              = 96,
    DomConstructorStyleSheetPage              = 97,
    DomConstructorStyleSheetPageList          = 98,
    DomConstructorText                        = 99,
    DomConstructorTextRange                   = 100,
    DomConstructorTextRangeCollection         = 101,
    DomConstructorTextRectangle               = 102,
    DomConstructorTextRectangleList           = 103,
    DomConstructorWindow                      = 104,
    DomConstructorXDomainRequest              = 105,
    DomConstructorXMLHttpRequest              = 106,
    DomConstructorMax                         = 107,
    DomConstructor_Max                        = 2147483647L
} DomConstructor;

[
    odl,
    oleautomation,
    dual,
    uuid(3051049b-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLDOMConstructor : IDispatch
{
    [propget, id((0x80010000+500)+9), hidden]
    HRESULT constructor([retval, out] IDispatch* * p);

    HRESULT LookupGetter([in] BSTR propname, [retval, out] VARIANT* ppDispHandler);

    HRESULT LookupSetter([in] BSTR propname, [retval, out] VARIANT* ppDispHandler);

    HRESULT DefineGetter([in] BSTR propname, [in] VARIANT* pdispHandler);

    HRESULT DefineSetter([in] BSTR propname, [in] VARIANT* pdispHandler);
}





interface IHTMLDocument2;
interface IHTMLElement2;
interface IHTMLStyleSheetsCollection;
interface IHTMLFrameBase;
interface IHTMLStorage;
interface IDOMEvent;




[
    odl,
    oleautomation,
    dual,
    uuid(3050F3EE-98B5-11Cf-BB82-00AA00BDCE0B)
]
interface IHTMLFiltersCollection : IDispatch
{
    [propget, id((1000+1))]
    HRESULT length([retval, out] LONG *p);

    [propget, id(DISPID_NEWENUM)]
    HRESULT _newEnum([retval, out] IUnknown **p);

    [id(DISPID_VALUE)]
    HRESULT item(
        [in] VARIANT *pvarIndex,
        [retval, out] VARIANT *pvarResult);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050F25E-98B5-11CF-BB82-00AA00BDCE0B)
]
interface IHTMLStyle : IDispatch
{
    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+18)), bindable, displaybind]
    HRESULT fontFamily([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+18)), bindable, displaybind]
    HRESULT fontFamily([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+24)), bindable, displaybind]
    HRESULT fontStyle([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+24)), bindable, displaybind]
    HRESULT fontStyle([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+25)), bindable, displaybind]
    HRESULT fontVariant([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+25)), bindable, displaybind]
    HRESULT fontVariant([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+27)), bindable, displaybind]
    HRESULT fontWeight([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+27)), bindable, displaybind]
    HRESULT fontWeight([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+19)), bindable, displaybind]
    HRESULT fontSize([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+19)), bindable, displaybind]
    HRESULT fontSize([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+41)), bindable, displaybind]
    HRESULT font([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+41)), bindable, displaybind]
    HRESULT font([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+2)), bindable, displaybind]
    HRESULT color([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+2)), bindable, displaybind]
    HRESULT color([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+32)), bindable, displaybind]
    HRESULT background([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+32)), bindable, displaybind]
    HRESULT background([retval, out] BSTR *p);

    [propput, id((-501)), bindable, displaybind]
    HRESULT backgroundColor([in] VARIANT v);

    [propget, id((-501)), bindable, displaybind]
    HRESULT backgroundColor([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1)), bindable, displaybind]
    HRESULT backgroundImage([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1)), bindable, displaybind]
    HRESULT backgroundImage([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+44)), bindable, displaybind]
    HRESULT backgroundRepeat([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+44)), bindable, displaybind]
    HRESULT backgroundRepeat([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+45)), bindable, displaybind]
    HRESULT backgroundAttachment([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+45)), bindable, displaybind]
    HRESULT backgroundAttachment([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+46)), bindable, displaybind]
    HRESULT backgroundPosition([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+46)), bindable, displaybind]
    HRESULT backgroundPosition([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+33)), bindable, displaybind]
    HRESULT backgroundPositionX([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+33)), bindable, displaybind]
    HRESULT backgroundPositionX([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+34)), bindable, displaybind]
    HRESULT backgroundPositionY([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+34)), bindable, displaybind]
    HRESULT backgroundPositionY([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+47)), bindable, displaybind]
    HRESULT wordSpacing([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+47)), bindable, displaybind]
    HRESULT wordSpacing([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+8)), bindable, displaybind]
    HRESULT letterSpacing([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+8)), bindable, displaybind]
    HRESULT letterSpacing([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+35)), bindable, displaybind]
    HRESULT textDecoration([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+35)), bindable, displaybind]
    HRESULT textDecoration([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+23)), bindable, displaybind]
    HRESULT textDecorationNone([in] VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+23)), bindable, displaybind]
    HRESULT textDecorationNone([retval, out] VARIANT_BOOL *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+21)), bindable, displaybind]
    HRESULT textDecorationUnderline([in] VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+21)), bindable, displaybind]
    HRESULT textDecorationUnderline([retval, out] VARIANT_BOOL *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+69)), bindable, displaybind]
    HRESULT textDecorationOverline([in] VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+69)), bindable, displaybind]
    HRESULT textDecorationOverline([retval, out] VARIANT_BOOL *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+20)), bindable, displaybind]
    HRESULT textDecorationLineThrough([in] VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+20)), bindable, displaybind]
    HRESULT textDecorationLineThrough([retval, out] VARIANT_BOOL *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+22)), bindable, displaybind]
    HRESULT textDecorationBlink([in] VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+22)), bindable, displaybind]
    HRESULT textDecorationBlink([retval, out] VARIANT_BOOL *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+48)), bindable, displaybind]
    HRESULT verticalAlign([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+48)), bindable, displaybind]
    HRESULT verticalAlign([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+4)), bindable, displaybind]
    HRESULT textTransform([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+4)), bindable, displaybind]
    HRESULT textTransform([retval, out] BSTR *p);

    [propput, id((0x80010000+72)), bindable, displaybind]
    HRESULT textAlign([in] BSTR v);

    [propget, id((0x80010000+72)), bindable, displaybind]
    HRESULT textAlign([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+7)), bindable, displaybind]
    HRESULT textIndent([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+7)), bindable, displaybind]
    HRESULT textIndent([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+6)), bindable, displaybind]
    HRESULT lineHeight([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+6)), bindable, displaybind]
    HRESULT lineHeight([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+37)), bindable, displaybind]
    HRESULT marginTop([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+37)), bindable, displaybind]
    HRESULT marginTop([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+38)), bindable, displaybind]
    HRESULT marginRight([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+38)), bindable, displaybind]
    HRESULT marginRight([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+39)), bindable, displaybind]
    HRESULT marginBottom([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+39)), bindable, displaybind]
    HRESULT marginBottom([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+40)), bindable, displaybind]
    HRESULT marginLeft([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+40)), bindable, displaybind]
    HRESULT marginLeft([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+36)), bindable, displaybind]
    HRESULT margin([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+36)), bindable, displaybind]
    HRESULT margin([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+12)), bindable, displaybind]
    HRESULT paddingTop([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+12)), bindable, displaybind]
    HRESULT paddingTop([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+13)), bindable, displaybind]
    HRESULT paddingRight([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+13)), bindable, displaybind]
    HRESULT paddingRight([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+14)), bindable, displaybind]
    HRESULT paddingBottom([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+14)), bindable, displaybind]
    HRESULT paddingBottom([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+15)), bindable, displaybind]
    HRESULT paddingLeft([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+15)), bindable, displaybind]
    HRESULT paddingLeft([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+11)), bindable, displaybind]
    HRESULT padding([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+11)), bindable, displaybind]
    HRESULT padding([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+49)), bindable, displaybind]
    HRESULT border([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+49)), bindable, displaybind]
    HRESULT border([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+50)), bindable, displaybind]
    HRESULT borderTop([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+50)), bindable, displaybind]
    HRESULT borderTop([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+51)), bindable, displaybind]
    HRESULT borderRight([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+51)), bindable, displaybind]
    HRESULT borderRight([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+52)), bindable, displaybind]
    HRESULT borderBottom([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+52)), bindable, displaybind]
    HRESULT borderBottom([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+53)), bindable, displaybind]
    HRESULT borderLeft([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+53)), bindable, displaybind]
    HRESULT borderLeft([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+54)), bindable, displaybind]
    HRESULT borderColor([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+54)), bindable, displaybind]
    HRESULT borderColor([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+55)), bindable, displaybind]
    HRESULT borderTopColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+55)), bindable, displaybind]
    HRESULT borderTopColor([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+56)), bindable, displaybind]
    HRESULT borderRightColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+56)), bindable, displaybind]
    HRESULT borderRightColor([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+57)), bindable, displaybind]
    HRESULT borderBottomColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+57)), bindable, displaybind]
    HRESULT borderBottomColor([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+58)), bindable, displaybind]
    HRESULT borderLeftColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+58)), bindable, displaybind]
    HRESULT borderLeftColor([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+59)), bindable, displaybind]
    HRESULT borderWidth([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+59)), bindable, displaybind]
    HRESULT borderWidth([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+60)), bindable, displaybind]
    HRESULT borderTopWidth([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+60)), bindable, displaybind]
    HRESULT borderTopWidth([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+61)), bindable, displaybind]
    HRESULT borderRightWidth([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+61)), bindable, displaybind]
    HRESULT borderRightWidth([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+62)), bindable, displaybind]
    HRESULT borderBottomWidth([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+62)), bindable, displaybind]
    HRESULT borderBottomWidth([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+63)), bindable, displaybind]
    HRESULT borderLeftWidth([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+63)), bindable, displaybind]
    HRESULT borderLeftWidth([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+64)), bindable, displaybind]
    HRESULT borderStyle([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+64)), bindable, displaybind]
    HRESULT borderStyle([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+65)), bindable, displaybind]
    HRESULT borderTopStyle([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+65)), bindable, displaybind]
    HRESULT borderTopStyle([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+66)), bindable, displaybind]
    HRESULT borderRightStyle([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+66)), bindable, displaybind]
    HRESULT borderRightStyle([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+67)), bindable, displaybind]
    HRESULT borderBottomStyle([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+67)), bindable, displaybind]
    HRESULT borderBottomStyle([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+68)), bindable, displaybind]
    HRESULT borderLeftStyle([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+68)), bindable, displaybind]
    HRESULT borderLeftStyle([retval, out] BSTR *p);

    [propput, id((0x80010000+5)), bindable, displaybind]
    HRESULT width([in] VARIANT v);

    [propget, id((0x80010000+5)), bindable, displaybind]
    HRESULT width([retval, out] VARIANT *p);

    [propput, id((0x80010000+6)), bindable, displaybind]
    HRESULT height([in] VARIANT v);

    [propget, id((0x80010000+6)), bindable, displaybind]
    HRESULT height([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+70)), bindable, displaybind]
    HRESULT styleFloat([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+70)), bindable, displaybind]
    HRESULT styleFloat([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+16)), bindable, displaybind]
    HRESULT clear([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+16)), bindable, displaybind]
    HRESULT clear([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+71)), bindable, displaybind]
    HRESULT display([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+71)), bindable, displaybind]
    HRESULT display([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+80)), bindable, displaybind]
    HRESULT visibility([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+80)), bindable, displaybind]
    HRESULT visibility([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+72)), bindable, displaybind]
    HRESULT listStyleType([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+72)), bindable, displaybind]
    HRESULT listStyleType([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+73)), bindable, displaybind]
    HRESULT listStylePosition([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+73)), bindable, displaybind]
    HRESULT listStylePosition([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+74)), bindable, displaybind]
    HRESULT listStyleImage([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+74)), bindable, displaybind]
    HRESULT listStyleImage([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+75)), bindable, displaybind]
    HRESULT listStyle([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+75)), bindable, displaybind]
    HRESULT listStyle([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+76)), bindable, displaybind]
    HRESULT whiteSpace([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+76)), bindable, displaybind]
    HRESULT whiteSpace([retval, out] BSTR *p);

    [propput, id((0x80010000+4)), bindable, displaybind]
    HRESULT top([in] VARIANT v);

    [propget, id((0x80010000+4)), bindable, displaybind]
    HRESULT top([retval, out] VARIANT *p);

    [propput, id((0x80010000+3)), bindable, displaybind]
    HRESULT left([in] VARIANT v);

    [propget, id((0x80010000+3)), bindable, displaybind]
    HRESULT left([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+90)), bindable, displaybind]
    HRESULT position([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+91)), bindable, displaybind]
    HRESULT zIndex([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+91)), bindable, displaybind]
    HRESULT zIndex([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+10)), bindable, displaybind]
    HRESULT overflow([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+10)), bindable, displaybind]
    HRESULT overflow([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+77)), bindable, displaybind]
    HRESULT pageBreakBefore([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+77)), bindable, displaybind]
    HRESULT pageBreakBefore([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+78)), bindable, displaybind]
    HRESULT pageBreakAfter([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+78)), bindable, displaybind]
    HRESULT pageBreakAfter([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+99)), bindable, displaybind]
    HRESULT cssText([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+99)), bindable, displaybind]
    HRESULT cssText([retval, out] BSTR *p);

    [propput, id((((((0x80010000+500)+500)+1000)+1000)+1000)), bindable, displaybind, hidden]
    HRESULT pixelTop([in] LONG v);

    [propget, id((((((0x80010000+500)+500)+1000)+1000)+1000)), bindable, displaybind, hidden]
    HRESULT pixelTop([retval, out] LONG *p);

    [propput, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+1)), bindable, displaybind, hidden]
    HRESULT pixelLeft([in] LONG v);

    [propget, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+1)), bindable, displaybind, hidden]
    HRESULT pixelLeft([retval, out] LONG *p);

    [propput, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+2)), bindable, displaybind, hidden]
    HRESULT pixelWidth([in] LONG v);

    [propget, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+2)), bindable, displaybind, hidden]
    HRESULT pixelWidth([retval, out] LONG *p);

    [propput, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+3)), bindable, displaybind, hidden]
    HRESULT pixelHeight([in] LONG v);

    [propget, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+3)), bindable, displaybind, hidden]
    HRESULT pixelHeight([retval, out] LONG *p);

    [propput, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+4)), bindable, displaybind]
    HRESULT posTop([in] float v);

    [propget, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+4)), bindable, displaybind]
    HRESULT posTop([retval, out] float *p);

    [propput, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+5)), bindable, displaybind]
    HRESULT posLeft([in] float v);

    [propget, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+5)), bindable, displaybind]
    HRESULT posLeft([retval, out] float *p);

    [propput, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+6)), bindable, displaybind]
    HRESULT posWidth([in] float v);

    [propget, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+6)), bindable, displaybind]
    HRESULT posWidth([retval, out] float *p);

    [propput, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+7)), bindable, displaybind]
    HRESULT posHeight([in] float v);

    [propget, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+7)), bindable, displaybind]
    HRESULT posHeight([retval, out] float *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+102)), bindable, displaybind]
    HRESULT cursor([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+102)), bindable, displaybind]
    HRESULT cursor([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+92)), bindable, displaybind]
    HRESULT clip([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+92)), bindable, displaybind]
    HRESULT clip([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+82)), bindable, displaybind]
    HRESULT filter([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+82)), bindable, displaybind]
    HRESULT filter([retval, out] BSTR *p);

    [id(((0x80010000+500)+1))]
    HRESULT setAttribute(
        [in] BSTR strAttributeName,
        [in] VARIANT AttributeValue,
        [defaultvalue(1), in] LONG lFlags);

    [id(((0x80010000+500)+2))]
    HRESULT getAttribute(
        [in] BSTR strAttributeName,
        [defaultvalue(0), in] LONG lFlags,
        [retval, out] VARIANT *AttributeValue);

    [id(((0x80010000+500)+3))]
    HRESULT removeAttribute(
        [in] BSTR strAttributeName,
        [defaultvalue(1), in]
        LONG lFlags,
        [retval, out] VARIANT_BOOL *pfSuccess);

    [id(((((((0x80010000+500)+500)+1000)+1000)+1000)+8))]
    HRESULT toString([retval, out] BSTR *String);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f4a2-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLStyle2 : IDispatch
{
    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+98)), displaybind, bindable]
    HRESULT tableLayout([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+98)), displaybind, bindable]
    HRESULT tableLayout([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]
    HRESULT borderCollapse([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]
    HRESULT borderCollapse([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+119)), displaybind, bindable]
    HRESULT direction([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+119)), displaybind, bindable]
    HRESULT direction([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+115)), displaybind, bindable]
    HRESULT behavior([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+115)), displaybind, bindable]
    HRESULT behavior([out, retval] BSTR *p);

    [id((0x80010000+500)+4)]
    HRESULT setExpression(
            [in] BSTR propname,
            [in] BSTR expression,
            [in, defaultvalue("")] BSTR language);

    [id((0x80010000+500)+5)]
    HRESULT getExpression(
            [in] BSTR propname,
            [out, retval] VARIANT *expression);

    [id((0x80010000+500)+6)]
    HRESULT removeExpression(
            [in] BSTR propname,
            [out, retval] VARIANT_BOOL *pfSuccess);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]
    HRESULT position([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]
    HRESULT position([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+118)), displaybind, bindable]
    HRESULT unicodeBidi([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+118)), displaybind, bindable]
    HRESULT unicodeBidi([out, retval] BSTR *p);

    [propput, id((0x80010000+78)), displaybind, bindable]
    HRESULT bottom([in] VARIANT v);

    [propget, id((0x80010000+78)), displaybind, bindable]
    HRESULT bottom([out, retval] VARIANT *p);

    [propput, id((0x80010000+77)), displaybind, bindable]
    HRESULT right([in] VARIANT v);

    [propget, id((0x80010000+77)), displaybind, bindable]
    HRESULT right([out, retval] VARIANT *p);

    [propput, id((((((0x80010000+500)+500)+1000)+1000)+1000)+9), displaybind, bindable, hidden]
    HRESULT pixelBottom([in] LONG v);

    [propget, id((((((0x80010000+500)+500)+1000)+1000)+1000)+9), displaybind, bindable, hidden]
    HRESULT pixelBottom([out, retval] LONG *p);

    [propput, id((((((0x80010000+500)+500)+1000)+1000)+1000)+10), displaybind, bindable, hidden]
    HRESULT pixelRight([in] LONG v);

    [propget, id((((((0x80010000+500)+500)+1000)+1000)+1000)+10), displaybind, bindable, hidden]
    HRESULT pixelRight([out, retval] LONG *p);

    [propput, id((((((0x80010000+500)+500)+1000)+1000)+1000)+11), displaybind, bindable]
    HRESULT posBottom([in] float v);

    [propget, id((((((0x80010000+500)+500)+1000)+1000)+1000)+11), displaybind, bindable]
    HRESULT posBottom([out, retval] float *p);

    [propput, id((((((0x80010000+500)+500)+1000)+1000)+1000)+12), displaybind, bindable]
    HRESULT posRight([in] float v);

    [propget, id((((((0x80010000+500)+500)+1000)+1000)+1000)+12), displaybind, bindable]
    HRESULT posRight([out, retval] float *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+120)), displaybind, bindable]
    HRESULT imeMode([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+120)), displaybind, bindable]
    HRESULT imeMode([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+121)), displaybind, bindable]
    HRESULT rubyAlign([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+121)), displaybind, bindable]
    HRESULT rubyAlign([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+122)), displaybind, bindable]
    HRESULT rubyPosition([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+122)), displaybind, bindable]
    HRESULT rubyPosition([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+123)), displaybind, bindable]
    HRESULT rubyOverhang([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+123)), displaybind, bindable]
    HRESULT rubyOverhang([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+127)), displaybind, bindable]
    HRESULT layoutGridChar([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+127)), displaybind, bindable]
    HRESULT layoutGridChar([out, retval] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+128)), displaybind, bindable]
    HRESULT layoutGridLine([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+128)), displaybind, bindable]
    HRESULT layoutGridLine([out, retval] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+129)), displaybind, bindable]
    HRESULT layoutGridMode([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+129)), displaybind, bindable]
    HRESULT layoutGridMode([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+130)), displaybind, bindable]
    HRESULT layoutGridType([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+130)), displaybind, bindable]
    HRESULT layoutGridType([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+131)), displaybind, bindable, nonbrowsable]
    HRESULT layoutGrid([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+131)), displaybind, bindable, nonbrowsable]
    HRESULT layoutGrid([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+134)), displaybind, bindable]
    HRESULT wordBreak([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+134)), displaybind, bindable]
    HRESULT wordBreak([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+133)), displaybind, bindable]
    HRESULT lineBreak([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+133)), displaybind, bindable]
    HRESULT lineBreak([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+135)), displaybind, bindable]
    HRESULT textJustify([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+135)), displaybind, bindable]
    HRESULT textJustify([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+136)), displaybind, bindable]
    HRESULT textJustifyTrim([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+136)), displaybind, bindable]
    HRESULT textJustifyTrim([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+137)), displaybind, bindable]
    HRESULT textKashida([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+137)), displaybind, bindable]
    HRESULT textKashida([out, retval] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+132)), displaybind, bindable]
    HRESULT textAutospace([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+132)), displaybind, bindable]
    HRESULT textAutospace([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+139)), displaybind, bindable]
    HRESULT overflowX([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+139)), displaybind, bindable]
    HRESULT overflowX([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+140)), displaybind, bindable]
    HRESULT overflowY([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+140)), displaybind, bindable]
    HRESULT overflowY([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+147)), displaybind, bindable]
    HRESULT accelerator([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+147)), displaybind, bindable]
    HRESULT accelerator([out, retval] BSTR *p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050F3CF-98B5-11CF-BB82-00AA00BDCE0B)
]
interface IHTMLRuleStyle : IDispatch
{
    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+18)), bindable, displaybind]
    HRESULT fontFamily([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+18)), bindable, displaybind]
    HRESULT fontFamily([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+24)), bindable, displaybind]
    HRESULT fontStyle([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+24)), bindable, displaybind]
    HRESULT fontStyle([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+25)), bindable, displaybind]
    HRESULT fontVariant([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+25)), bindable, displaybind]
    HRESULT fontVariant([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+27)), bindable, displaybind]
    HRESULT fontWeight([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+27)), bindable, displaybind]
    HRESULT fontWeight([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+19)), bindable, displaybind]
    HRESULT fontSize([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+19)), bindable, displaybind]
    HRESULT fontSize([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+41)), bindable, displaybind]
    HRESULT font([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+41)), bindable, displaybind]
    HRESULT font([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+2)), bindable, displaybind]
    HRESULT color([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+2)), bindable, displaybind]
    HRESULT color([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+32)), bindable, displaybind]
    HRESULT background([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+32)), bindable, displaybind]
    HRESULT background([retval, out] BSTR *p);

    [propput, id((-501)), bindable, displaybind]
    HRESULT backgroundColor([in] VARIANT v);

    [propget, id((-501)), bindable, displaybind]
    HRESULT backgroundColor([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1)), bindable, displaybind]
    HRESULT backgroundImage([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1)), bindable, displaybind]
    HRESULT backgroundImage([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+44)), bindable, displaybind]
    HRESULT backgroundRepeat([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+44)), bindable, displaybind]
    HRESULT backgroundRepeat([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+45)), bindable, displaybind]
    HRESULT backgroundAttachment([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+45)), bindable, displaybind]
    HRESULT backgroundAttachment([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+46)), bindable, displaybind]
    HRESULT backgroundPosition([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+46)), bindable, displaybind]
    HRESULT backgroundPosition([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+33)), bindable, displaybind]
    HRESULT backgroundPositionX([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+33)), bindable, displaybind]
    HRESULT backgroundPositionX([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+34)), bindable, displaybind]
    HRESULT backgroundPositionY([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+34)), bindable, displaybind]
    HRESULT backgroundPositionY([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+47)), bindable, displaybind]
    HRESULT wordSpacing([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+47)), bindable, displaybind]
    HRESULT wordSpacing([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+8)), bindable, displaybind]
    HRESULT letterSpacing([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+8)), bindable, displaybind]
    HRESULT letterSpacing([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+35)), bindable, displaybind]
    HRESULT textDecoration([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+35)), bindable, displaybind]
    HRESULT textDecoration([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+23)), bindable, displaybind]
    HRESULT textDecorationNone([in] VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+23)), bindable, displaybind]
    HRESULT textDecorationNone([retval, out] VARIANT_BOOL *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+21)), bindable, displaybind]
    HRESULT textDecorationUnderline([in] VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+21)), bindable, displaybind]
    HRESULT textDecorationUnderline([retval, out] VARIANT_BOOL *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+69)), bindable, displaybind]
    HRESULT textDecorationOverline([in] VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+69)), bindable, displaybind]
    HRESULT textDecorationOverline([retval, out] VARIANT_BOOL *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+20)), bindable, displaybind]
    HRESULT textDecorationLineThrough([in] VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+20)), bindable, displaybind]
    HRESULT textDecorationLineThrough([retval, out] VARIANT_BOOL *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+22)), bindable, displaybind]
    HRESULT textDecorationBlink([in] VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+22)), bindable, displaybind]
    HRESULT textDecorationBlink([retval, out] VARIANT_BOOL *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+48)), bindable, displaybind]
    HRESULT verticalAlign([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+48)), bindable, displaybind]
    HRESULT verticalAlign([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+4)), bindable, displaybind]
    HRESULT textTransform([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+4)), bindable, displaybind]
    HRESULT textTransform([retval, out] BSTR *p);

    [propput, id((0x80010000+72)), bindable, displaybind]
    HRESULT textAlign([in] BSTR v);

    [propget, id((0x80010000+72)), bindable, displaybind]
    HRESULT textAlign([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+7)), bindable, displaybind]
    HRESULT textIndent([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+7)), bindable, displaybind]
    HRESULT textIndent([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+6)), bindable, displaybind]
    HRESULT lineHeight([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+6)), bindable, displaybind]
    HRESULT lineHeight([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+37)), bindable, displaybind]
    HRESULT marginTop([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+37)), bindable, displaybind]
    HRESULT marginTop([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+38)), bindable, displaybind]
    HRESULT marginRight([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+38)), bindable, displaybind]
    HRESULT marginRight([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+39)), bindable, displaybind]
    HRESULT marginBottom([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+39)), bindable, displaybind]
    HRESULT marginBottom([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+40)), bindable, displaybind]
    HRESULT marginLeft([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+40)), bindable, displaybind]
    HRESULT marginLeft([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+36)), bindable, displaybind]
    HRESULT margin([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+36)), bindable, displaybind]
    HRESULT margin([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+12)), bindable, displaybind]
    HRESULT paddingTop([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+12)), bindable, displaybind]
    HRESULT paddingTop([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+13)), bindable, displaybind]
    HRESULT paddingRight([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+13)), bindable, displaybind]
    HRESULT paddingRight([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+14)), bindable, displaybind]
    HRESULT paddingBottom([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+14)), bindable, displaybind]
    HRESULT paddingBottom([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+15)), bindable, displaybind]
    HRESULT paddingLeft([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+15)), bindable, displaybind]
    HRESULT paddingLeft([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+11)), bindable, displaybind]
    HRESULT padding([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+11)), bindable, displaybind]
    HRESULT padding([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+49)), bindable, displaybind]
    HRESULT border([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+49)), bindable, displaybind]
    HRESULT border([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+50)), bindable, displaybind]
    HRESULT borderTop([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+50)), bindable, displaybind]
    HRESULT borderTop([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+51)), bindable, displaybind]
    HRESULT borderRight([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+51)), bindable, displaybind]
    HRESULT borderRight([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+52)), bindable, displaybind]
    HRESULT borderBottom([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+52)), bindable, displaybind]
    HRESULT borderBottom([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+53)), bindable, displaybind]
    HRESULT borderLeft([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+53)), bindable, displaybind]
    HRESULT borderLeft([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+54)), bindable, displaybind]
    HRESULT borderColor([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+54)), bindable, displaybind]
    HRESULT borderColor([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+55)), bindable, displaybind]
    HRESULT borderTopColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+55)), bindable, displaybind]
    HRESULT borderTopColor([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+56)), bindable, displaybind]
    HRESULT borderRightColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+56)), bindable, displaybind]
    HRESULT borderRightColor([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+57)), bindable, displaybind]
    HRESULT borderBottomColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+57)), bindable, displaybind]
    HRESULT borderBottomColor([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+58)), bindable, displaybind]
    HRESULT borderLeftColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+58)), bindable, displaybind]
    HRESULT borderLeftColor([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+59)), bindable, displaybind]
    HRESULT borderWidth([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+59)), bindable, displaybind]
    HRESULT borderWidth([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+60)), bindable, displaybind]
    HRESULT borderTopWidth([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+60)), bindable, displaybind]
    HRESULT borderTopWidth([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+61)), bindable, displaybind]
    HRESULT borderRightWidth([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+61)), bindable, displaybind]
    HRESULT borderRightWidth([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+62)), bindable, displaybind]
    HRESULT borderBottomWidth([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+62)), bindable, displaybind]
    HRESULT borderBottomWidth([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+63)), bindable, displaybind]
    HRESULT borderLeftWidth([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+63)), bindable, displaybind]
    HRESULT borderLeftWidth([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+64)), bindable, displaybind]
    HRESULT borderStyle([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+64)), bindable, displaybind]
    HRESULT borderStyle([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+65)), bindable, displaybind]
    HRESULT borderTopStyle([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+65)), bindable, displaybind]
    HRESULT borderTopStyle([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+66)), bindable, displaybind]
    HRESULT borderRightStyle([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+66)), bindable, displaybind]
    HRESULT borderRightStyle([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+67)), bindable, displaybind]
    HRESULT borderBottomStyle([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+67)), bindable, displaybind]
    HRESULT borderBottomStyle([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+68)), bindable, displaybind]
    HRESULT borderLeftStyle([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+68)), bindable, displaybind]
    HRESULT borderLeftStyle([retval, out] BSTR *p);

    [propput, id((0x80010000+5)), bindable, displaybind]
    HRESULT width([in] VARIANT v);

    [propget, id((0x80010000+5)), bindable, displaybind]
    HRESULT width([retval, out] VARIANT *p);

    [propput, id((0x80010000+6)), bindable, displaybind]
    HRESULT height([in] VARIANT v);

    [propget, id((0x80010000+6)), bindable, displaybind]
    HRESULT height([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+70)), bindable, displaybind]
    HRESULT styleFloat([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+70)), bindable, displaybind]
    HRESULT styleFloat([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+16)), bindable, displaybind]
    HRESULT clear([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+16)), bindable, displaybind]
    HRESULT clear([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+71)), bindable, displaybind]
    HRESULT display([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+71)), bindable, displaybind]
    HRESULT display([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+80)), bindable, displaybind]
    HRESULT visibility([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+80)), bindable, displaybind]
    HRESULT visibility([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+72)), bindable, displaybind]
    HRESULT listStyleType([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+72)), bindable, displaybind]
    HRESULT listStyleType([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+73)), bindable, displaybind]
    HRESULT listStylePosition([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+73)), bindable, displaybind]
    HRESULT listStylePosition([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+74)), bindable, displaybind]
    HRESULT listStyleImage([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+74)), bindable, displaybind]
    HRESULT listStyleImage([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+75)), bindable, displaybind]
    HRESULT listStyle([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+75)), bindable, displaybind]
    HRESULT listStyle([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+76)), bindable, displaybind]
    HRESULT whiteSpace([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+76)), bindable, displaybind]
    HRESULT whiteSpace([retval, out] BSTR *p);

    [propput, id((0x80010000+4)), bindable, displaybind]
    HRESULT top([in] VARIANT v);

    [propget, id((0x80010000+4)), bindable, displaybind]
    HRESULT top([retval, out] VARIANT *p);

    [propput, id((0x80010000+3)), bindable, displaybind]
    HRESULT left([in] VARIANT v);

    [propget, id((0x80010000+3)), bindable, displaybind]
    HRESULT left([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+90)), bindable, displaybind]
    HRESULT position([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+91)), bindable, displaybind]
    HRESULT zIndex([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+91)), bindable, displaybind]
    HRESULT zIndex([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+10)), bindable, displaybind]
    HRESULT overflow([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+10)), bindable, displaybind]
    HRESULT overflow([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+77)), bindable, displaybind]
    HRESULT pageBreakBefore([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+77)), bindable, displaybind]
    HRESULT pageBreakBefore([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+78)), bindable, displaybind]
    HRESULT pageBreakAfter([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+78)), bindable, displaybind]
    HRESULT pageBreakAfter([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+99)), bindable, displaybind]
    HRESULT cssText([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+99)), bindable, displaybind]
    HRESULT cssText([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+102)), bindable, displaybind]
    HRESULT cursor([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+102)), bindable, displaybind]
    HRESULT cursor([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+92)), bindable, displaybind]
    HRESULT clip([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+92)), bindable, displaybind]
    HRESULT clip([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+82)), bindable, displaybind]
    HRESULT filter([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+82)), bindable, displaybind]
    HRESULT filter([retval, out] BSTR *p);

    [id(((0x80010000+500)+1))]
    HRESULT setAttribute(
        [in] BSTR strAttributeName,
        [in] VARIANT AttributeValue,
        [defaultvalue(1), in] LONG lFlags);

    [id(((0x80010000+500)+2))]
    HRESULT getAttribute(
        [in] BSTR strAttributeName,
        [defaultvalue(0), in] LONG lFlags,
        [retval, out] VARIANT *AttributeValue);

    [id(((0x80010000+500)+3))]
    HRESULT removeAttribute(
        [in] BSTR strAttributeName,
        [defaultvalue(1), in] LONG lFlags,
        [retval, out] VARIANT_BOOL *pfSuccess);
}




[
    hidden,
    uuid(3050f55a-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLStyle
{
properties:
methods:
    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]
    void fontFamily(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]
    BSTR fontFamily();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+24)), displaybind, bindable]
    void fontStyle(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+24)), displaybind, bindable]
    BSTR fontStyle();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]
    void fontVariant(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]
    BSTR fontVariant();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+27)), displaybind, bindable]
    void fontWeight(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+27)), displaybind, bindable]
    BSTR fontWeight();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]
    void fontSize(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]
    VARIANT fontSize();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+41)), displaybind, bindable, nonbrowsable]
    void font(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+41)), displaybind, bindable, nonbrowsable]
    BSTR font();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]
    void color(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]
    VARIANT color();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+32)), displaybind, bindable, nonbrowsable]
    void background(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+32)), displaybind, bindable, nonbrowsable]
    BSTR background();

    [propput, id((-501)), displaybind, bindable]
    void backgroundColor(VARIANT v);

    [propget, id((-501)), displaybind, bindable]
    VARIANT backgroundColor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1)), displaybind, bindable]
    void backgroundImage(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1)), displaybind, bindable]
    BSTR backgroundImage();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+44)), displaybind, bindable]
    void backgroundRepeat(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+44)), displaybind, bindable]
    BSTR backgroundRepeat();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+45)), displaybind, bindable]
    void backgroundAttachment(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+45)), displaybind, bindable]
    BSTR backgroundAttachment();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+46)), displaybind, bindable, nonbrowsable]
    void backgroundPosition(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+46)), displaybind, bindable, nonbrowsable]
    BSTR backgroundPosition();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+33)), displaybind, bindable]
    void backgroundPositionX(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+33)), displaybind, bindable]
    VARIANT backgroundPositionX();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+34)), displaybind, bindable]
    void backgroundPositionY(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+34)), displaybind, bindable]
    VARIANT backgroundPositionY();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]
    void wordSpacing(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]
    VARIANT wordSpacing();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]
    void letterSpacing(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]
    VARIANT letterSpacing();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]
    void textDecoration(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]
    BSTR textDecoration();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+23)), displaybind, bindable]
    void textDecorationNone(VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+23)), displaybind, bindable]
    VARIANT_BOOL textDecorationNone();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]
    void textDecorationUnderline(VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]
    VARIANT_BOOL textDecorationUnderline();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]
    void textDecorationOverline(VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]
    VARIANT_BOOL textDecorationOverline();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+20)), displaybind, bindable]
    void textDecorationLineThrough(VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+20)), displaybind, bindable]
    VARIANT_BOOL textDecorationLineThrough();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]
    void textDecorationBlink(VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]
    VARIANT_BOOL textDecorationBlink();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+48)), displaybind, bindable]
    void verticalAlign(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+48)), displaybind, bindable]
    VARIANT verticalAlign();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]
    void textTransform(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]
    BSTR textTransform();

    [propput, id((0x80010000+72)), displaybind, bindable]
    void textAlign(BSTR v);

    [propget, id((0x80010000+72)), displaybind, bindable]
    BSTR textAlign();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+7)), displaybind, bindable]
    void textIndent(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+7)), displaybind, bindable]
    VARIANT textIndent();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]
    void lineHeight(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]
    VARIANT lineHeight();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]
    void marginTop(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]
    VARIANT marginTop();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]
    void marginRight(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]
    VARIANT marginRight();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+39)), displaybind, bindable]
    void marginBottom(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+39)), displaybind, bindable]
    VARIANT marginBottom();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]
    void marginLeft(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]
    VARIANT marginLeft();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+36)), displaybind, bindable, nonbrowsable]
    void margin(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+36)), displaybind, bindable, nonbrowsable]
    BSTR margin();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+12)), displaybind, bindable]
    void paddingTop(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+12)), displaybind, bindable]
    VARIANT paddingTop();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]
    void paddingRight(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]
    VARIANT paddingRight();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]
    void paddingBottom(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]
    VARIANT paddingBottom();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]
    void paddingLeft(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]
    VARIANT paddingLeft();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+11)), displaybind, bindable, nonbrowsable]
    void padding(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+11)), displaybind, bindable, nonbrowsable]
    BSTR padding();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+49)), displaybind, bindable, nonbrowsable]
    void border(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+49)), displaybind, bindable, nonbrowsable]
    BSTR border();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]
    void borderTop(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]
    BSTR borderTop();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]
    void borderRight(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]
    BSTR borderRight();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]
    void borderBottom(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]
    BSTR borderBottom();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]
    void borderLeft(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]
    BSTR borderLeft();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]
    void borderColor(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]
    BSTR borderColor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]
    void borderTopColor(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]
    VARIANT borderTopColor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]
    void borderRightColor(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]
    VARIANT borderRightColor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]
    void borderBottomColor(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]
    VARIANT borderBottomColor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]
    void borderLeftColor(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]
    VARIANT borderLeftColor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]
    void borderWidth(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]
    BSTR borderWidth();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]
    void borderTopWidth(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]
    VARIANT borderTopWidth();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+61)), displaybind, bindable]
    void borderRightWidth(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+61)), displaybind, bindable]
    VARIANT borderRightWidth();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]
    void borderBottomWidth(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]
    VARIANT borderBottomWidth();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]
    void borderLeftWidth(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]
    VARIANT borderLeftWidth();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]
    void borderStyle(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]
    BSTR borderStyle();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]
    void borderTopStyle(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]
    BSTR borderTopStyle();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+66)), displaybind, bindable]
    void borderRightStyle(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+66)), displaybind, bindable]
    BSTR borderRightStyle();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+67)), displaybind, bindable]
    void borderBottomStyle(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+67)), displaybind, bindable]
    BSTR borderBottomStyle();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+68)), displaybind, bindable]
    void borderLeftStyle(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+68)), displaybind, bindable]
    BSTR borderLeftStyle();

    [propput, id((0x80010000+5)), displaybind, bindable]
    void width(VARIANT v);

    [propget, id((0x80010000+5)), displaybind, bindable]
    VARIANT width();

    [propput, id((0x80010000+6)), displaybind, bindable]
    void height(VARIANT v);

    [propget, id((0x80010000+6)), displaybind, bindable]
    VARIANT height();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+70)), displaybind, bindable]
    void styleFloat(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+70)), displaybind, bindable]
    BSTR styleFloat();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+16)), displaybind, bindable]
    void clear(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+16)), displaybind, bindable]
    BSTR clear();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+71)), displaybind, bindable]
    void display(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+71)), displaybind, bindable]
    BSTR display();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+80)), displaybind, bindable]
    void visibility(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+80)), displaybind, bindable]
    BSTR visibility();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+72)), displaybind, bindable]
    void listStyleType(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+72)), displaybind, bindable]
    BSTR listStyleType();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]
    void listStylePosition(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]
    BSTR listStylePosition();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]
    void listStyleImage(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]
    BSTR listStyleImage();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+75)), displaybind, bindable, nonbrowsable]
    void listStyle(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+75)), displaybind, bindable, nonbrowsable]
    BSTR listStyle();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]
    void whiteSpace(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]
    BSTR whiteSpace();

    [propput, id((0x80010000+4)), displaybind, bindable]
    void top(VARIANT v);

    [propget, id((0x80010000+4)), displaybind, bindable]
    VARIANT top();

    [propput, id((0x80010000+3)), displaybind, bindable]
    void left(VARIANT v);

    [propget, id((0x80010000+3)), displaybind, bindable]
    VARIANT left();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+91)), displaybind, bindable]
    void zIndex(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+91)), displaybind, bindable]
    VARIANT zIndex();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+10)), displaybind, bindable]
    void overflow(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+10)), displaybind, bindable]
    BSTR overflow();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]
    void pageBreakBefore(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]
    BSTR pageBreakBefore();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]
    void pageBreakAfter(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]
    BSTR pageBreakAfter();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+99)), displaybind, bindable, nonbrowsable]
    void cssText(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+99)), displaybind, bindable, nonbrowsable]
    BSTR cssText();

    [propput, id((((((0x80010000+500)+500)+1000)+1000)+1000)), displaybind, bindable, hidden]
    void pixelTop(LONG v);

    [propget, id((((((0x80010000+500)+500)+1000)+1000)+1000)), displaybind, bindable, hidden]
    LONG pixelTop();

    [propput, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+1)), displaybind, bindable, hidden]
    void pixelLeft(LONG v);

    [propget, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+1)), displaybind, bindable, hidden]
    LONG pixelLeft();

    [propput, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+2)), displaybind, bindable, hidden]
    void pixelWidth(LONG v);

    [propget, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+2)), displaybind, bindable, hidden]
    LONG pixelWidth();

    [propput, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+3)), displaybind, bindable, hidden]
    void pixelHeight(LONG v);

    [propget, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+3)), displaybind, bindable, hidden]
    LONG pixelHeight();

    [propput, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+4)), displaybind, bindable]
    void posTop(float v);

    [propget, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+4)), displaybind, bindable]
    float posTop();

    [propput, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+5)), displaybind, bindable]
    void posLeft(float v);

    [propget, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+5)), displaybind, bindable]
    float posLeft();

    [propput, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+6)), displaybind, bindable]
    void posWidth(float v);

    [propget, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+6)), displaybind, bindable]
    float posWidth();

    [propput, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+7)), displaybind, bindable]
    void posHeight(float v);

    [propget, id(((((((0x80010000+500)+500)+1000)+1000)+1000)+7)), displaybind, bindable]
    float posHeight();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+102)), displaybind, bindable]
    void cursor(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+102)), displaybind, bindable]
    BSTR cursor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]
    void clip(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]
    BSTR clip();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+82)), displaybind, bindable]
    void filter(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+82)), displaybind, bindable]
    BSTR filter();

    [id(((0x80010000+500)+1))]
    void setAttribute(
            [in] BSTR strAttributeName,
            [in] VARIANT AttributeValue,
            [in, defaultvalue(1)] LONG lFlags);

    [id(((0x80010000+500)+2))]
    VARIANT getAttribute(
            [in] BSTR strAttributeName,
            [in, defaultvalue(0)] LONG lFlags);

    [id(((0x80010000+500)+3))]
    VARIANT_BOOL removeAttribute(
            [in] BSTR strAttributeName,
            [in, defaultvalue(1)] LONG lFlags);

    [id(((((((0x80010000+500)+500)+1000)+1000)+1000)+8))]
    BSTR toString();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+98)), displaybind, bindable]
    void tableLayout(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+98)), displaybind, bindable]
    BSTR tableLayout();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]
    void borderCollapse(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]
    BSTR borderCollapse();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+119)), displaybind, bindable]
    void direction(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+119)), displaybind, bindable]
    BSTR direction();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+115)), displaybind, bindable]
    void behavior(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+115)), displaybind, bindable]
    BSTR behavior();

    [id((0x80010000+500)+4)]
    void setExpression(
            [in] BSTR propname,
            [in] BSTR expression,
            [in, defaultvalue("")] BSTR language);

    [id((0x80010000+500)+5)]
    VARIANT getExpression([in] BSTR propname);

    [id((0x80010000+500)+6)]
    VARIANT_BOOL removeExpression([in] BSTR propname);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]
    void position(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]
    BSTR position();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+118)), displaybind, bindable]
    void unicodeBidi(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+118)), displaybind, bindable]
    BSTR unicodeBidi();

    [propput, id((0x80010000+78)), displaybind, bindable]
    void bottom(VARIANT v);

    [propget, id((0x80010000+78)), displaybind, bindable]
    VARIANT bottom();

    [propput, id((0x80010000+77)), displaybind, bindable]
    void right(VARIANT v);

    [propget, id((0x80010000+77)), displaybind, bindable]
    VARIANT right();

    [propput, id((((((0x80010000+500)+500)+1000)+1000)+1000)+9), displaybind, bindable, hidden]
    void pixelBottom(LONG v);

    [propget, id((((((0x80010000+500)+500)+1000)+1000)+1000)+9), displaybind, bindable, hidden]
    LONG pixelBottom();

    [propput, id((((((0x80010000+500)+500)+1000)+1000)+1000)+10), displaybind, bindable, hidden]
    void pixelRight(LONG v);

    [propget, id((((((0x80010000+500)+500)+1000)+1000)+1000)+10), displaybind, bindable, hidden]
    LONG pixelRight();

    [propput, id((((((0x80010000+500)+500)+1000)+1000)+1000)+11), displaybind, bindable]
    void posBottom(float v);

    [propget, id((((((0x80010000+500)+500)+1000)+1000)+1000)+11), displaybind, bindable]
    float posBottom();

    [propput, id((((((0x80010000+500)+500)+1000)+1000)+1000)+12), displaybind, bindable]
    void posRight(float v);

    [propget, id((((((0x80010000+500)+500)+1000)+1000)+1000)+12), displaybind, bindable]
    float posRight();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+120)), displaybind, bindable]
    void imeMode(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+120)), displaybind, bindable]
    BSTR imeMode();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+121)), displaybind, bindable]
    void rubyAlign(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+121)), displaybind, bindable]
    BSTR rubyAlign();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+122)), displaybind, bindable]
    void rubyPosition(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+122)), displaybind, bindable]
    BSTR rubyPosition();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+123)), displaybind, bindable]
    void rubyOverhang(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+123)), displaybind, bindable]
    BSTR rubyOverhang();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+127)), displaybind, bindable]
    void layoutGridChar(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+127)), displaybind, bindable]
    VARIANT layoutGridChar();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+128)), displaybind, bindable]
    void layoutGridLine(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+128)), displaybind, bindable]
    VARIANT layoutGridLine();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+129)), displaybind, bindable]
    void layoutGridMode(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+129)), displaybind, bindable]
    BSTR layoutGridMode();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+130)), displaybind, bindable]
    void layoutGridType(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+130)), displaybind, bindable]
    BSTR layoutGridType();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+131)), displaybind, bindable, nonbrowsable]
    void layoutGrid(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+131)), displaybind, bindable, nonbrowsable]
    BSTR layoutGrid();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+134)), displaybind, bindable]
    void wordBreak(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+134)), displaybind, bindable]
    BSTR wordBreak();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+133)), displaybind, bindable]
    void lineBreak(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+133)), displaybind, bindable]
    BSTR lineBreak();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+135)), displaybind, bindable]
    void textJustify(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+135)), displaybind, bindable]
    BSTR textJustify();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+136)), displaybind, bindable]
    void textJustifyTrim(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+136)), displaybind, bindable]
    BSTR textJustifyTrim();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+137)), displaybind, bindable]
    void textKashida(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+137)), displaybind, bindable]
    VARIANT textKashida();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+132)), displaybind, bindable]
    void textAutospace(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+132)), displaybind, bindable]
    BSTR textAutospace();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+139)), displaybind, bindable]
    void overflowX(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+139)), displaybind, bindable]
    BSTR overflowX();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+140)), displaybind, bindable]
    void overflowY(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+140)), displaybind, bindable]
    BSTR overflowY();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+147)), displaybind, bindable]
    void accelerator(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+147)), displaybind, bindable]
    BSTR accelerator();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+155)), displaybind, bindable]
    void layoutFlow(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+155)), displaybind, bindable]
    BSTR layoutFlow();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+153)), displaybind, bindable]
    void zoom(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+153)), displaybind, bindable]
    VARIANT zoom();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+158)), displaybind, bindable]
    void wordWrap(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+158)), displaybind, bindable]
    BSTR wordWrap();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+159)), displaybind, bindable]
    void textUnderlinePosition(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+159)), displaybind, bindable]
    BSTR textUnderlinePosition();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+180)), displaybind, bindable]
    void scrollbarBaseColor(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+180)), displaybind, bindable]
    VARIANT scrollbarBaseColor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+181)), displaybind, bindable]
    void scrollbarFaceColor(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+181)), displaybind, bindable]
    VARIANT scrollbarFaceColor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+182)), displaybind, bindable]
    void scrollbar3dLightColor(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+182)), displaybind, bindable]
    VARIANT scrollbar3dLightColor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+183)), displaybind, bindable]
    void scrollbarShadowColor(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+183)), displaybind, bindable]
    VARIANT scrollbarShadowColor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+184)), displaybind, bindable]
    void scrollbarHighlightColor(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+184)), displaybind, bindable]
    VARIANT scrollbarHighlightColor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+185)), displaybind, bindable]
    void scrollbarDarkShadowColor(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+185)), displaybind, bindable]
    VARIANT scrollbarDarkShadowColor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+186)), displaybind, bindable]
    void scrollbarArrowColor(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+186)), displaybind, bindable]
    VARIANT scrollbarArrowColor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+196)), displaybind, bindable]
    void scrollbarTrackColor(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+196)), displaybind, bindable]
    VARIANT scrollbarTrackColor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+192)), displaybind, bindable]
    void writingMode(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+192)), displaybind, bindable]
    BSTR writingMode();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+203)), displaybind, bindable]
    void textAlignLast(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+203)), displaybind, bindable]
    BSTR textAlignLast();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+204)), displaybind, bindable]
    void textKashidaSpace(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+204)), displaybind, bindable]
    VARIANT textKashidaSpace();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+209)), displaybind, bindable]
    void textOverflow(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+209)), displaybind, bindable]
    BSTR textOverflow();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+211)), displaybind, bindable]
    void minHeight(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+211)), displaybind, bindable]
    VARIANT minHeight();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+213)), displaybind, bindable]
    void msInterpolationMode(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+213)), displaybind, bindable]
    BSTR msInterpolationMode();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+214)), displaybind, bindable]
    void maxHeight(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+214)), displaybind, bindable]
    VARIANT maxHeight();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+215)), displaybind, bindable]
    void minWidth(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+215)), displaybind, bindable]
    VARIANT minWidth();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+216)), displaybind, bindable]
    void maxWidth(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+216)), displaybind, bindable]
    VARIANT maxWidth();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+218)), displaybind, bindable]
    void content(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+218)), displaybind, bindable]
    BSTR content();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+219)), displaybind, bindable]
    void captionSide(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+219)), displaybind, bindable]
    BSTR captionSide();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+220)), displaybind, bindable]
    void counterIncrement(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+220)), displaybind, bindable]
    BSTR counterIncrement();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+221)), displaybind, bindable]
    void counterReset(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+221)), displaybind, bindable]
    BSTR counterReset();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+222)), displaybind, bindable]
    void outline(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+222)), displaybind, bindable]
    BSTR outline();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+223)), displaybind, bindable]
    void outlineWidth(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+223)), displaybind, bindable]
    VARIANT outlineWidth();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+224)), displaybind, bindable]
    void outlineStyle(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+224)), displaybind, bindable]
    BSTR outlineStyle();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+225)), displaybind, bindable]
    void outlineColor(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+225)), displaybind, bindable]
    VARIANT outlineColor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+226)), displaybind, bindable]
    void boxSizing(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+226)), displaybind, bindable]
    BSTR boxSizing();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+227)), displaybind, bindable]
    void borderSpacing(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+227)), displaybind, bindable]
    BSTR borderSpacing();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+228)), displaybind, bindable]
    void orphans(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+228)), displaybind, bindable]
    VARIANT orphans();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+229)), displaybind, bindable]
    void widows(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+229)), displaybind, bindable]
    VARIANT widows();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+230)), displaybind, bindable]
    void pageBreakInside(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+230)), displaybind, bindable]
    BSTR pageBreakInside();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+250)), displaybind, bindable]
    void emptyCells(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+250)), displaybind, bindable]
    BSTR emptyCells();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+251)), displaybind, bindable]
    void msBlockProgression(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+251)), displaybind, bindable]
    BSTR msBlockProgression();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+252)), displaybind, bindable]
    void quotes(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+252)), displaybind, bindable]
    BSTR quotes();

    [propget, id((0x80010000+500)+9), hidden]
    IDispatch *constructor();
}

[
    odl,
    oleautomation,
    dual,
    uuid(3050f656-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLStyle3 : IDispatch
{
    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+155)), displaybind, bindable]
    HRESULT layoutFlow([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+155)), displaybind, bindable]
    HRESULT layoutFlow([retval, out] BSTR * p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+153)), displaybind, bindable]
    HRESULT zoom([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+153)), displaybind, bindable]
    HRESULT zoom([retval, out] VARIANT * p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+158)), displaybind, bindable]
    HRESULT wordWrap([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+158)), displaybind, bindable]
    HRESULT wordWrap([retval, out] BSTR * p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+159)), displaybind, bindable]
    HRESULT textUnderlinePosition([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+159)), displaybind, bindable]
    HRESULT textUnderlinePosition([retval, out] BSTR * p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+180)), displaybind, bindable]
    HRESULT scrollbarBaseColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+180)), displaybind, bindable]
    HRESULT scrollbarBaseColor([retval, out] VARIANT * p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+181)), displaybind, bindable]
    HRESULT scrollbarFaceColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+181)), displaybind, bindable]
    HRESULT scrollbarFaceColor([retval, out] VARIANT * p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+182)), displaybind, bindable]
    HRESULT scrollbar3dLightColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+182)), displaybind, bindable]
    HRESULT scrollbar3dLightColor([retval, out] VARIANT * p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+183)), displaybind, bindable]
    HRESULT scrollbarShadowColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+183)), displaybind, bindable]
    HRESULT scrollbarShadowColor([retval, out] VARIANT * p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+184)), displaybind, bindable]
    HRESULT scrollbarHighlightColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+184)), displaybind, bindable]
    HRESULT scrollbarHighlightColor([retval, out] VARIANT * p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+185)), displaybind, bindable]
    HRESULT scrollbarDarkShadowColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+185)), displaybind, bindable]
    HRESULT scrollbarDarkShadowColor([retval, out] VARIANT * p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+186)), displaybind, bindable]
    HRESULT scrollbarArrowColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+186)), displaybind, bindable]
    HRESULT scrollbarArrowColor([retval, out] VARIANT * p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+196)), displaybind, bindable]
    HRESULT scrollbarTrackColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+196)), displaybind, bindable]
    HRESULT scrollbarTrackColor([retval, out] VARIANT * p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+192)), displaybind, bindable]
    HRESULT writingMode([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+192)), displaybind, bindable]
    HRESULT writingMode([retval, out] BSTR * p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+203)), displaybind, bindable]
    HRESULT textAlignLast([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+203)), displaybind, bindable]
    HRESULT textAlignLast([retval, out] BSTR * p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+204)), displaybind, bindable]
    HRESULT textKashidaSpace([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+204)), displaybind, bindable]
    HRESULT textKashidaSpace([retval, out] VARIANT * p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f816-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLStyle4 : IDispatch
{
    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+209)), displaybind, bindable]
    HRESULT textOverflow([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+209)), displaybind, bindable]
    HRESULT textOverflow([retval, out] BSTR * p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+211)), displaybind, bindable]
    HRESULT minHeight([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+211)), displaybind, bindable]
    HRESULT minHeight([retval, out] VARIANT * p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f33a-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLStyle5 : IDispatch
{
    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+213)), displaybind, bindable]
    HRESULT msInterpolationMode([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+213)), displaybind, bindable]
    HRESULT msInterpolationMode([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+214)), displaybind, bindable]
    HRESULT maxHeight([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+214)), displaybind, bindable]
    HRESULT maxHeight([out, retval] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+215)), displaybind, bindable]
    HRESULT minWidth([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+215)), displaybind, bindable]
    HRESULT minWidth([out, retval] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+216)), displaybind, bindable]
    HRESULT maxWidth([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+216)), displaybind, bindable]
    HRESULT maxWidth([out, retval] VARIANT *p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(30510480-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLStyle6 : IDispatch
{
    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+218)), displaybind, bindable]
    HRESULT content([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+218)), displaybind, bindable]
    HRESULT content([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+219)), displaybind, bindable]
    HRESULT captionSide([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+219)), displaybind, bindable]
    HRESULT captionSide([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+220)), displaybind, bindable]
    HRESULT counterIncrement([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+220)), displaybind, bindable]
    HRESULT counterIncrement([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+221)), displaybind, bindable]
    HRESULT counterReset([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+221)), displaybind, bindable]
    HRESULT counterReset([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+222)), displaybind, bindable]
    HRESULT outline([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+222)), displaybind, bindable]
    HRESULT outline([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+223)), displaybind, bindable]
    HRESULT outlineWidth([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+223)), displaybind, bindable]
    HRESULT outlineWidth([out, retval] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+224)), displaybind, bindable]
    HRESULT outlineStyle([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+224)), displaybind, bindable]
    HRESULT outlineStyle([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+225)), displaybind, bindable]
    HRESULT outlineColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+225)), displaybind, bindable]
    HRESULT outlineColor([out, retval] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+226)), displaybind, bindable]
    HRESULT boxSizing([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+226)), displaybind, bindable]
    HRESULT boxSizing([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+227)), displaybind, bindable]
    HRESULT borderSpacing([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+227)), displaybind, bindable]
    HRESULT borderSpacing([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+228)), displaybind, bindable]
    HRESULT orphans([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+228)), displaybind, bindable]
    HRESULT orphans([out, retval] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+229)), displaybind, bindable]
    HRESULT widows([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+229)), displaybind, bindable]
    HRESULT widows([out, retval] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+230)), displaybind, bindable]
    HRESULT pageBreakInside([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+230)), displaybind, bindable]
    HRESULT pageBreakInside([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+250)), displaybind, bindable]
    HRESULT emptyCells([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+250)), displaybind, bindable]
    HRESULT emptyCells([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+251)), displaybind, bindable]
    HRESULT msBlockProgression([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+251)), displaybind, bindable]
    HRESULT msBlockProgression([out, retval] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+252)), displaybind, bindable]
    HRESULT quotes([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+252)), displaybind, bindable]
    HRESULT quotes([out, retval] BSTR *p);
}

[
    noncreatable,
    uuid(3050f285-98b5-11cf-bb82-00aa00bdce0b)
]
coclass HTMLStyle
{
    [default] dispinterface DispHTMLStyle;
    interface IHTMLStyle;
    interface IHTMLStyle2;
    interface IHTMLStyle3;
    interface IHTMLStyle4;
    interface IHTMLStyle5;
    interface IHTMLStyle6;
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f6ae-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLRenderStyle : IDispatch
{
    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+166)), displaybind, bindable]
    HRESULT textLineThroughStyle([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+166)), displaybind, bindable]
    HRESULT textLineThroughStyle([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+167)), displaybind, bindable]
    HRESULT textUnderlineStyle([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+167)), displaybind, bindable]
    HRESULT textUnderlineStyle([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+168)), displaybind, bindable]
    HRESULT textEffect([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+168)), displaybind, bindable]
    HRESULT textEffect([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+190)), displaybind, bindable]
    HRESULT textColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+190)), displaybind, bindable]
    HRESULT textColor([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+169)), displaybind, bindable]
    HRESULT textBackgroundColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+169)), displaybind, bindable]
    HRESULT textBackgroundColor([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+189)), displaybind, bindable]
    HRESULT textDecorationColor([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+189)), displaybind, bindable]
    HRESULT textDecorationColor([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+170)), displaybind, bindable]
    HRESULT renderingPriority([in] LONG v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+170)), displaybind, bindable]
    HRESULT renderingPriority([retval, out] LONG *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+188)), displaybind, bindable]
    HRESULT defaultTextSelection([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+188)), displaybind, bindable]
    HRESULT defaultTextSelection([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+191)), displaybind, bindable]
    HRESULT textDecoration([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+191)), displaybind, bindable]
    HRESULT textDecoration([retval, out] BSTR *p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f3db-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLCurrentStyle : IDispatch
{
    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]
    HRESULT position([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+70)), displaybind, bindable]
    HRESULT styleFloat([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]
    HRESULT color([retval, out] VARIANT *p);

    [propget, id((-501)), displaybind, bindable]
    HRESULT backgroundColor([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]
    HRESULT fontFamily([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+24)), displaybind, bindable]
    HRESULT fontStyle([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+25)), displaybind, bindable, hidden]
    HRESULT fontVariant([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+27)), displaybind, bindable]
    HRESULT fontWeight([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]
    HRESULT fontSize([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1)), displaybind, bindable]
    HRESULT backgroundImage([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+33)), displaybind, bindable]
    HRESULT backgroundPositionX([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+34)), displaybind, bindable]
    HRESULT backgroundPositionY([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+44)), displaybind, bindable]
    HRESULT backgroundRepeat([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]
    HRESULT borderLeftColor([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]
    HRESULT borderTopColor([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]
    HRESULT borderRightColor([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]
    HRESULT borderBottomColor([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]
    HRESULT borderTopStyle([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+66)), displaybind, bindable]
    HRESULT borderRightStyle([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+67)), displaybind, bindable]
    HRESULT borderBottomStyle([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+68)), displaybind, bindable]
    HRESULT borderLeftStyle([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]
    HRESULT borderTopWidth([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+61)), displaybind, bindable]
    HRESULT borderRightWidth([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]
    HRESULT borderBottomWidth([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]
    HRESULT borderLeftWidth([retval, out] VARIANT *p);

    [propget, id((0x80010000+3)), displaybind, bindable]
    HRESULT left([retval, out] VARIANT *p);

    [propget, id((0x80010000+4)), displaybind, bindable]
    HRESULT top([retval, out] VARIANT *p);

    [propget, id((0x80010000+5)), displaybind, bindable]
    HRESULT width([retval, out] VARIANT *p);

    [propget, id((0x80010000+6)), displaybind, bindable]
    HRESULT height([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]
    HRESULT paddingLeft([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+12)), displaybind, bindable]
    HRESULT paddingTop([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]
    HRESULT paddingRight([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]
    HRESULT paddingBottom([retval, out] VARIANT *p);

    [propget, id((0x80010000+72)), displaybind, bindable]
    HRESULT textAlign([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]
    HRESULT textDecoration([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+71)), displaybind, bindable]
    HRESULT display([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+80)), displaybind, bindable]
    HRESULT visibility([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+91)), displaybind, bindable]
    HRESULT zIndex([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]
    HRESULT letterSpacing([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]
    HRESULT lineHeight([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+7)), displaybind, bindable]
    HRESULT textIndent([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+48)), displaybind, bindable]
    HRESULT verticalAlign([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+45)), displaybind, bindable]
    HRESULT backgroundAttachment([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]
    HRESULT marginTop([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]
    HRESULT marginRight([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+39)), displaybind, bindable]
    HRESULT marginBottom([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]
    HRESULT marginLeft([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+16)), displaybind, bindable]
    HRESULT clear([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+72)), displaybind, bindable]
    HRESULT listStyleType([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]
    HRESULT listStylePosition([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]
    HRESULT listStyleImage([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+93)), displaybind, bindable]
    HRESULT clipTop([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+94)), displaybind, bindable]
    HRESULT clipRight([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+95)), displaybind, bindable]
    HRESULT clipBottom([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+96)), displaybind, bindable]
    HRESULT clipLeft([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+10)), displaybind, bindable]
    HRESULT overflow([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]
    HRESULT pageBreakBefore([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]
    HRESULT pageBreakAfter([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+102)), displaybind, bindable]
    HRESULT cursor([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+98)), displaybind, bindable]
    HRESULT tableLayout([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]
    HRESULT borderCollapse([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+119)), displaybind, bindable]
    HRESULT direction([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+115)), displaybind, bindable]
    HRESULT behavior([retval, out] BSTR *p);

    [id((0x80010000+500)+2)]
    HRESULT getAttribute(
        [in] BSTR strAttributeName,
        [defaultvalue(0), in] LONG lFlags,
        [retval, out] VARIANT *AttributeValue);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+118)), displaybind, bindable]
    HRESULT unicodeBidi([retval, out] BSTR *p);

    [propget, id((0x80010000+77)), displaybind, bindable]
    HRESULT right([retval, out] VARIANT *p);

    [propget, id((0x80010000+78)), displaybind, bindable]
    HRESULT bottom([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+120)), displaybind, bindable]
    HRESULT imeMode([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+121)), displaybind, bindable]
    HRESULT rubyAlign([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+122)), displaybind, bindable]
    HRESULT rubyPosition([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+123)), displaybind, bindable]
    HRESULT rubyOverhang([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+132)), displaybind, bindable]
    HRESULT textAutospace([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+133)), displaybind, bindable]
    HRESULT lineBreak([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+134)), displaybind, bindable]
    HRESULT wordBreak([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+135)), displaybind, bindable]
    HRESULT textJustify([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+136)), displaybind, bindable]
    HRESULT textJustifyTrim([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+137)), displaybind, bindable]
    HRESULT textKashida([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]
    HRESULT blockDirection([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+127)), displaybind, bindable]
    HRESULT layoutGridChar([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+128)), displaybind, bindable]
    HRESULT layoutGridLine([retval, out] VARIANT *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+129)), displaybind, bindable]
    HRESULT layoutGridMode([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+130)), displaybind, bindable]
    HRESULT layoutGridType([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]
    HRESULT borderStyle([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]
    HRESULT borderColor([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]
    HRESULT borderWidth([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+11)), displaybind, bindable]
    HRESULT padding([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]
    HRESULT margin([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+147)), displaybind, bindable]
    HRESULT accelerator([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+139)), displaybind, bindable]
    HRESULT overflowX([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+140)), displaybind, bindable]
    HRESULT overflowY([retval, out] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]
    HRESULT textTransform([retval, out] BSTR *p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f658-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLCurrentStyle2 : IDispatch
{
    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+155)), displaybind, bindable]
    HRESULT layoutFlow([retval, out] BSTR * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+158)), displaybind, bindable]
    HRESULT wordWrap([retval, out] BSTR * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+159)), displaybind, bindable]
    HRESULT textUnderlinePosition([retval, out] BSTR * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+160)), displaybind, bindable]
    HRESULT hasLayout([retval, out] VARIANT_BOOL * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+180)), displaybind, bindable]
    HRESULT scrollbarBaseColor([retval, out] VARIANT * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+181)), displaybind, bindable]
    HRESULT scrollbarFaceColor([retval, out] VARIANT * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+182)), displaybind, bindable]
    HRESULT scrollbar3dLightColor([retval, out] VARIANT * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+183)), displaybind, bindable]
    HRESULT scrollbarShadowColor([retval, out] VARIANT * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+184)), displaybind, bindable]
    HRESULT scrollbarHighlightColor([retval, out] VARIANT * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+185)), displaybind, bindable]
    HRESULT scrollbarDarkShadowColor([retval, out] VARIANT * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+186)), displaybind, bindable]
    HRESULT scrollbarArrowColor([retval, out] VARIANT * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+196)), displaybind, bindable]
    HRESULT scrollbarTrackColor([retval, out] VARIANT * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+192)), displaybind, bindable]
    HRESULT writingMode([retval, out] BSTR * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+153)), displaybind, bindable]
    HRESULT zoom([retval, out] VARIANT * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+82)), displaybind, bindable]
    HRESULT filter([retval, out] BSTR * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+203)), displaybind, bindable]
    HRESULT textAlignLast([retval, out] BSTR * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+204)), displaybind, bindable]
    HRESULT textKashidaSpace([retval, out] VARIANT * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+208)), displaybind, bindable, hidden, restricted, nonbrowsable]
    HRESULT isBlock([retval, out] VARIANT_BOOL * p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f818-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLCurrentStyle3 : IDispatch
{
    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+209)), displaybind, bindable]
    HRESULT textOverflow([retval, out] BSTR * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+211)), displaybind, bindable]
    HRESULT minHeight([retval, out] VARIANT * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]
    HRESULT wordSpacing([retval, out] VARIANT * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]
    HRESULT whiteSpace([retval, out] BSTR * p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f33b-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLCurrentStyle4 : IDispatch
{
    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+213)), displaybind, bindable]
    HRESULT msInterpolationMode([retval, out] BSTR * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+214)), displaybind, bindable]
    HRESULT maxHeight([retval, out] VARIANT * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+215)), displaybind, bindable]
    HRESULT minWidth([retval, out] VARIANT * p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+216)), displaybind, bindable]
    HRESULT maxWidth([retval, out] VARIANT * p);
}




[
    hidden,
    uuid(3050f557-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLCurrentStyle
{
properties:
methods:
    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]
    BSTR position();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+70)), displaybind, bindable]
    BSTR styleFloat();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]
    VARIANT color();

    [propget, id((-501)), displaybind, bindable]
    VARIANT backgroundColor();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]
    BSTR fontFamily();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+24)), displaybind, bindable]
    BSTR fontStyle();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+25)), displaybind, bindable, hidden]
    BSTR fontVariant();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+27)), displaybind, bindable]
    VARIANT fontWeight();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]
    VARIANT fontSize();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1)), displaybind, bindable]
    BSTR backgroundImage();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+33)), displaybind, bindable]
    VARIANT backgroundPositionX();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+34)), displaybind, bindable]
    VARIANT backgroundPositionY();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+44)), displaybind, bindable]
    BSTR backgroundRepeat();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]
    VARIANT borderLeftColor();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]
    VARIANT borderTopColor();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]
    VARIANT borderRightColor();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]
    VARIANT borderBottomColor();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]
    BSTR borderTopStyle();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+66)), displaybind, bindable]
    BSTR borderRightStyle();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+67)), displaybind, bindable]
    BSTR borderBottomStyle();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+68)), displaybind, bindable]
    BSTR borderLeftStyle();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]
    VARIANT borderTopWidth();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+61)), displaybind, bindable]
    VARIANT borderRightWidth();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]
    VARIANT borderBottomWidth();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]
    VARIANT borderLeftWidth();

    [propget, id((0x80010000+3)), displaybind, bindable]
    VARIANT left();

    [propget, id((0x80010000+4)), displaybind, bindable]
    VARIANT top();

    [propget, id((0x80010000+5)), displaybind, bindable]
    VARIANT width();

    [propget, id((0x80010000+6)), displaybind, bindable]
    VARIANT height();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]
    VARIANT paddingLeft();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+12)), displaybind, bindable]
    VARIANT paddingTop();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]
    VARIANT paddingRight();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]
    VARIANT paddingBottom();

    [propget, id((0x80010000+72)), displaybind, bindable]
    BSTR textAlign();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]
    BSTR textDecoration();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+71)), displaybind, bindable]
    BSTR display();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+80)), displaybind, bindable]
    BSTR visibility();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+91)), displaybind, bindable]
    VARIANT zIndex();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]
    VARIANT letterSpacing();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]
    VARIANT lineHeight();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+7)), displaybind, bindable]
    VARIANT textIndent();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+48)), displaybind, bindable]
    VARIANT verticalAlign();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+45)), displaybind, bindable]
    BSTR backgroundAttachment();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]
    VARIANT marginTop();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]
    VARIANT marginRight();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+39)), displaybind, bindable]
    VARIANT marginBottom();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]
    VARIANT marginLeft();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+16)), displaybind, bindable]
    BSTR clear();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+72)), displaybind, bindable]
    BSTR listStyleType();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]
    BSTR listStylePosition();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]
    BSTR listStyleImage();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+93)), displaybind, bindable]
    VARIANT clipTop();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+94)), displaybind, bindable]
    VARIANT clipRight();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+95)), displaybind, bindable]
    VARIANT clipBottom();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+96)), displaybind, bindable]
    VARIANT clipLeft();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+10)), displaybind, bindable]
    BSTR overflow();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]
    BSTR pageBreakBefore();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]
    BSTR pageBreakAfter();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+102)), displaybind, bindable]
    BSTR cursor();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+98)), displaybind, bindable]
    BSTR tableLayout();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]
    BSTR borderCollapse();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+119)), displaybind, bindable]
    BSTR direction();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+115)), displaybind, bindable]
    BSTR behavior();

    [id((0x80010000+500)+2)]
    VARIANT getAttribute(
            [in] BSTR strAttributeName,
            [in, defaultvalue(0)] LONG lFlags);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+118)), displaybind, bindable]
    BSTR unicodeBidi();

    [propget, id((0x80010000+77)), displaybind, bindable]
    VARIANT right();

    [propget, id((0x80010000+78)), displaybind, bindable]
    VARIANT bottom();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+120)), displaybind, bindable]
    BSTR imeMode();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+121)), displaybind, bindable]
    BSTR rubyAlign();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+122)), displaybind, bindable]
    BSTR rubyPosition();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+123)), displaybind, bindable]
    BSTR rubyOverhang();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+132)), displaybind, bindable]
    BSTR textAutospace();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+133)), displaybind, bindable]
    BSTR lineBreak();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+134)), displaybind, bindable]
    BSTR wordBreak();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+135)), displaybind, bindable]
    BSTR textJustify();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+136)), displaybind, bindable]
    BSTR textJustifyTrim();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+137)), displaybind, bindable]
    VARIANT textKashida();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]
    BSTR blockDirection();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+127)), displaybind, bindable]
    VARIANT layoutGridChar();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+128)), displaybind, bindable]
    VARIANT layoutGridLine();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+129)), displaybind, bindable]
    BSTR layoutGridMode();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+130)), displaybind, bindable]
    BSTR layoutGridType();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]
    BSTR borderStyle();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]
    BSTR borderColor();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]
    BSTR borderWidth();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+11)), displaybind, bindable]
    BSTR padding();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]
    BSTR margin();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+147)), displaybind, bindable]
    BSTR accelerator();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+139)), displaybind, bindable]
    BSTR overflowX();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+140)), displaybind, bindable]
    BSTR overflowY();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]
    BSTR textTransform();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+155)), displaybind, bindable]
    BSTR layoutFlow();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+158)), displaybind, bindable]
    BSTR wordWrap();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+159)), displaybind, bindable]
    BSTR textUnderlinePosition();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+160)), displaybind, bindable]
    VARIANT_BOOL hasLayout();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+180)), displaybind, bindable]
    VARIANT scrollbarBaseColor();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+181)), displaybind, bindable]
    VARIANT scrollbarFaceColor();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+182)), displaybind, bindable]
    VARIANT scrollbar3dLightColor();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+183)), displaybind, bindable]
    VARIANT scrollbarShadowColor();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+184)), displaybind, bindable]
    VARIANT scrollbarHighlightColor();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+185)), displaybind, bindable]
    VARIANT scrollbarDarkShadowColor();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+186)), displaybind, bindable]
    VARIANT scrollbarArrowColor();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+196)), displaybind, bindable]
    VARIANT scrollbarTrackColor();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+192)), displaybind, bindable]
    BSTR writingMode();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+153)), displaybind, bindable]
    VARIANT zoom();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+82)), displaybind, bindable]
    BSTR filter();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+203)), displaybind, bindable]
    BSTR textAlignLast();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+204)), displaybind, bindable]
    VARIANT textKashidaSpace();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+208)), displaybind, bindable, hidden, restricted, nonbrowsable]
    VARIANT_BOOL isBlock();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+209)), displaybind, bindable]
    BSTR textOverflow();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+211)), displaybind, bindable]
    VARIANT minHeight();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]
    VARIANT wordSpacing();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]
    BSTR whiteSpace();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+213)), displaybind, bindable]
    BSTR msInterpolationMode();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+214)), displaybind, bindable]
    VARIANT maxHeight();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+215)), displaybind, bindable]
    VARIANT minWidth();

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+216)), displaybind, bindable]
    VARIANT maxWidth();
}

[
    noncreatable,
    uuid(3050f3dc-98b5-11cf-bb82-00aa00bdce0b)
]
coclass HTMLCurrentStyle
{
    [default] dispinterface DispHTMLCurrentStyle;
    interface IHTMLCurrentStyle;
    interface IHTMLCurrentStyle2;
    interface IHTMLCurrentStyle3;
    interface IHTMLCurrentStyle4;
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f4a3-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLRect : IDispatch
{
    [propput, id(1000+1)]
    HRESULT left([in] LONG v);

    [propget, id(1000+1)]
    HRESULT left([retval, out] LONG *p);

    [propput, id(1000+2)]
    HRESULT top([in] LONG v);

    [propget, id(1000+2)]
    HRESULT top([retval, out] LONG *p);

    [propput, id(1000+3)]
    HRESULT right([in] LONG v);

    [propget, id(1000+3)]
    HRESULT right([retval, out] LONG *p);

    [propput, id(1000+4)]
    HRESULT bottom([in] LONG v);

    [propget, id(1000+4)]
    HRESULT bottom([retval, out] LONG *p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f4a4-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLRectCollection : IDispatch
{
    [propget, id((1000+500))]
    HRESULT length([retval, out] LONG *p);

    [propget, id(DISPID_NEWENUM), hidden, restricted]
    HRESULT _newEnum([retval, out] IUnknown **p);

    [id(DISPID_VALUE)]
    HRESULT item(
        [in] VARIANT *pvarIndex,
        [retval, out] VARIANT *pvarResult);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f5da-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLDOMNode : IDispatch
{
    [propget, id(((0x80010000+500)+500)+46)]
    HRESULT nodeType([retval, out] LONG *p);

    [propget, id(((0x80010000+500)+500)+47)]
    HRESULT parentNode([retval, out] IHTMLDOMNode **p);

    [id(((0x80010000+500)+500)+48)]
    HRESULT hasChildNodes([retval, out] VARIANT_BOOL *fChildren);

    [propget, id(((0x80010000+500)+500)+49)]
    HRESULT childNodes([retval, out] IDispatch **p);

    [propget, id(((0x80010000+500)+500)+50)]
    HRESULT attributes([retval, out] IDispatch **p);

    [id(((0x80010000+500)+500)+51)]
    HRESULT insertBefore(
        [in] IHTMLDOMNode *newChild,
        [optional, in] VARIANT refChild,
        [retval, out] IHTMLDOMNode **node);

    [id(((0x80010000+500)+500)+52)]
    HRESULT removeChild(
        [in] IHTMLDOMNode *oldChild,
        [retval, out] IHTMLDOMNode **node);

    [id(((0x80010000+500)+500)+53)]
    HRESULT replaceChild(
        [in] IHTMLDOMNode *newChild,
        [in] IHTMLDOMNode *oldChild,
        [retval, out] IHTMLDOMNode **node);

    [id(((0x80010000+500)+500)+61)]
    HRESULT cloneNode(
        [in] VARIANT_BOOL fDeep,
        [retval, out] IHTMLDOMNode **clonedNode);

    [id(((0x80010000+500)+500)+66)]
    HRESULT removeNode(
        [defaultvalue(0), in] VARIANT_BOOL fDeep,
        [retval, out] IHTMLDOMNode **removed);

    [id(((0x80010000+500)+500)+68)]
    HRESULT swapNode(
        [in] IHTMLDOMNode *otherNode,
        [retval, out] IHTMLDOMNode **swappedNode);

    [id(((0x80010000+500)+500)+67)]
    HRESULT replaceNode(
        [in] IHTMLDOMNode *replacement,
        [retval, out] IHTMLDOMNode **replaced);

    [id(((0x80010000+500)+500)+73)]
    HRESULT appendChild(
        [in] IHTMLDOMNode *newChild,
        [retval, out] IHTMLDOMNode **node);

    [propget, id(((0x80010000+500)+500)+74)]
    HRESULT nodeName([retval, out] BSTR *p);

    [propput, id(((0x80010000+500)+500)+75)]
    HRESULT nodeValue([in] VARIANT v);

    [propget, id(((0x80010000+500)+500)+75)]
    HRESULT nodeValue([retval, out] VARIANT *p);

    [propget, id(((0x80010000+500)+500)+76)]
    HRESULT firstChild([retval, out] IHTMLDOMNode **p);

    [propget, id(((0x80010000+500)+500)+77)]
    HRESULT lastChild([retval, out] IHTMLDOMNode **p);

    [propget, id(((0x80010000+500)+500)+78)]
    HRESULT previousSibling([retval, out] IHTMLDOMNode **p);

    [propget, id(((0x80010000+500)+500)+79)]
    HRESULT nextSibling([retval, out] IHTMLDOMNode **p);
}





































































[
    odl,
    oleautomation,
    dual,
    uuid(3050f80b-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLDOMNode2 : IDispatch
{
    [propget, id(((0x80010000+500)+500)+113)]
    HRESULT ownerDocument([retval, out] IDispatch **p);
}












[
    odl,
    oleautomation,
    dual,
    uuid(305106e0-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLDOMNode3 : IDispatch
{
    [propput, id(((0x80010000+500)+500)+120)]
    HRESULT prefix([in] VARIANT v);

    [propget, id(((0x80010000+500)+500)+120)]
    HRESULT prefix([out, retval] VARIANT *p);

    [propget, id(((0x80010000+500)+500)+118)]
    HRESULT localName([out, retval] VARIANT *p);

    [propget, id(((0x80010000+500)+500)+119)]
    HRESULT namespaceURI([out, retval] VARIANT *p);

    [propput, id(((0x80010000+500)+500)+127)]
    HRESULT textContent([in] VARIANT v);

    [propget, id(((0x80010000+500)+500)+127)]
    HRESULT textContent([out, retval] VARIANT *p);

    [id(((0x80010000+500)+500)+121)]
    HRESULT isEqualNode(
        [in] IHTMLDOMNode3 *otherNode,
        [out, retval] VARIANT_BOOL *isEqual);

    [id(((0x80010000+500)+500)+122)]
    HRESULT lookupNamespaceURI(
        [in] VARIANT *pvarPrefix,
        [out, retval] VARIANT *pvarNamespaceURI);

    [id(((0x80010000+500)+500)+123)]
    HRESULT lookupPrefix(
       [in] VARIANT *pvarNamespaceURI,
       [out, retval] VARIANT *pvarPrefix);

    [id(((0x80010000+500)+500)+124)]
    HRESULT isDefaultNamespace(
        [in] VARIANT *pvarNamespace,
        [out, retval] VARIANT_BOOL *pfDefaultNamespace);

    [id((((((0x80010000+500)+500)+1000)-1)  + 10)+18)]
    HRESULT appendChild(
        [in] IHTMLDOMNode *newChild,
        [out, retval] IHTMLDOMNode **node);

    [id((((((0x80010000+500)+500)+1000)-1)  + 10)+19)]
    HRESULT insertBefore(
        [in] IHTMLDOMNode *newChild,
        [in, optional] VARIANT refChild,
        [out, retval] IHTMLDOMNode **node);

    [id((((((0x80010000+500)+500)+1000)-1)  + 10)+20)]
    HRESULT removeChild(
        [in] IHTMLDOMNode *oldChild,
        [out, retval] IHTMLDOMNode **node);

    [id((((((0x80010000+500)+500)+1000)-1)  + 10)+21)]
    HRESULT replaceChild(
        [in] IHTMLDOMNode *newChild,
        [in] IHTMLDOMNode *oldChild,
        [out, retval] IHTMLDOMNode **node);

    [id(((0x80010000+500)+500)+125)]
    HRESULT isSameNode(
        [in] IHTMLDOMNode3 *otherNode,
        [out, retval] VARIANT_BOOL *isSame);

    [id(((0x80010000+500)+500)+126)]
    HRESULT compareDocumentPosition(
        [in] IHTMLDOMNode *otherNode,
        [out, retval] USHORT *flags);

    [id((((((0x80010000+500)+500)+1000)-1)  + 10)+27)]
    HRESULT isSupported(
        [in] BSTR feature,
        [in] VARIANT version,
        [out, retval] VARIANT_BOOL *pfisSupported);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f4b0-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLDOMAttribute : IDispatch
{
    [propget, id(1000)]
    HRESULT nodeName([retval, out] BSTR *p);

    [propput, id(1000+2)]
    HRESULT nodeValue([in] VARIANT v);

    [propget, id(1000+2)]
    HRESULT nodeValue([retval, out] VARIANT *p);

    [propget, id(1000+1)]
    HRESULT specified([retval, out] VARIANT_BOOL *p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f810-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLDOMAttribute2 : IDispatch
{
    [propget, id(1000+3)]
    HRESULT name([retval, out] BSTR *p);

    [propput, id(1000+4)]
    HRESULT value([in] BSTR v);

    [propget, id(1000+4)]
    HRESULT value([retval, out] BSTR *p);

    [propget, id(1000+5)]
    HRESULT expando([retval, out] VARIANT_BOOL *p);

    [propget, id(1000+6)]
    HRESULT nodeType([retval, out] long *p);

    [propget, id(1000+7)]
    HRESULT parentNode([retval, out] IHTMLDOMNode **p);

    [propget, id(1000+8)]
    HRESULT childNodes([retval, out] IDispatch **p);

    [propget, id(1000+9)]
    HRESULT firstChild([retval, out] IHTMLDOMNode **p);

    [propget, id(1000+10)]
    HRESULT lastChild([retval, out] IHTMLDOMNode **p);

    [propget, id(1000+11)]
    HRESULT previousSibling([retval, out] IHTMLDOMNode **p);

    [propget, id(1000+12)]
    HRESULT nextSibling([retval, out] IHTMLDOMNode **p);

    [propget, id(1000+13)]
    HRESULT attributes([retval, out] IDispatch **p);

    [propget, id(1000+14)]
    HRESULT ownerDocument([retval, out] IDispatch **p);

    [id(1000+15)]
    HRESULT insertBefore(
            [in] IHTMLDOMNode *newChild,
            [optional, in] VARIANT refChild,
            [retval, out] IHTMLDOMNode **node);

    [id(1000+16)]
    HRESULT replaceChild(
            [in] IHTMLDOMNode *newChild,
            [in] IHTMLDOMNode *oldChild,
            [retval, out] IHTMLDOMNode **node);

    [id(1000+17)]
    HRESULT removeChild(
            [in] IHTMLDOMNode *oldChild,
            [retval, out] IHTMLDOMNode **node);

    [id(1000+18)]
    HRESULT appendChild(
            [in] IHTMLDOMNode *newChild,
            [retval, out] IHTMLDOMNode **node);

    [id(1000+19)]
    HRESULT hasChildNodes([retval, out] VARIANT_BOOL *fChildren);

    [id(1000+20)]
    HRESULT cloneNode(
            [in] VARIANT_BOOL fDeep,
            [retval, out] IHTMLDOMAttribute **clonedNode);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f4b1-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLDOMTextNode : IDispatch
{
    [propput, id(1000)]
    HRESULT data([in] BSTR v);

    [propget, id(1000)]
    HRESULT data([out, retval] BSTR *p);

    [id(1000+1)]
    HRESULT toString([out, retval] BSTR *String);

    [propget, id(1000+2)]
    HRESULT length([out, retval] LONG *p);

    [id(1000+3)]
    HRESULT splitText(
            [in] LONG offset,
            [out, retval] IHTMLDOMNode **pRetNode);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f809-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLDOMTextNode2 : IDispatch
{
    [id(1000+4)]
    HRESULT substringData([in] LONG offset,[in] LONG Count,[retval, out] BSTR* pbstrsubString);

    [id(1000+5)]
    HRESULT appendData([in] BSTR bstrstring);

    [id(1000+6)]
    HRESULT insertData([in] LONG offset,[in] BSTR bstrstring);

    [id(1000+7)]
    HRESULT deleteData([in] LONG offset,[in] LONG Count);

    [id(1000+8)]
    HRESULT replaceData([in] LONG offset,[in] LONG Count,[in] BSTR bstrstring);
}

[
    noncreatable,
    uuid(3050f4ba-98b5-11cf-bb82-00aa00bdce0b)
]
coclass HTMLDOMTextNode
{
    [default]           dispinterface DispHTMLDOMTextNode;
                        interface IHTMLDOMTextNode;
                        interface IHTMLDOMTextNode2;
                        interface IHTMLDOMNode;
                        interface IHTMLDOMNode2;
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f80d-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLDOMImplementation : IDispatch
{
    [id(1000)]
    HRESULT hasFeature(
        [in] BSTR bstrfeature,
        [optional, in] VARIANT version,
        [retval, out] VARIANT_BOOL *pfHasFeature);
}




[
    hidden,
    uuid(3050f564-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLDOMAttribute
{
 properties:
    methods:
    [propget, id(1000)]
    BSTR nodeName();

    [propput, id(1000+2)]
    void nodeValue(VARIANT v);

    [propget, id(1000+2)]
    VARIANT nodeValue();

    [propget, id(1000+1)]
    VARIANT_BOOL specified();

    [propget, id(1000+3)]
    BSTR name();

    [propput, id(1000+4)]
    void value(BSTR v);

    [propget, id(1000+4)]
    BSTR value();

    [propget, id(1000+5)]
    VARIANT_BOOL expando();

    [propget, id(1000+6)]
    long nodeType();

    [propget, id(1000+7)]
    IHTMLDOMNode *parentNode();

    [propget, id(1000+8)]
    IDispatch *childNodes();

    [propget, id(1000+9)]
    IHTMLDOMNode *firstChild();

    [propget, id(1000+10)]
    IHTMLDOMNode *lastChild();

    [propget, id(1000+11)]
    IHTMLDOMNode *previousSibling();

    [propget, id(1000+12)]
    IHTMLDOMNode *nextSibling();

    [propget, id(1000+13)]
    IDispatch *attributes();

    [propget, id(1000+14)]
    IDispatch *ownerDocument();

    [id(1000+15)]
    IHTMLDOMNode *insertBefore(
            [in] IHTMLDOMNode *newChild,
            [optional, in] VARIANT refChild);

    [id(1000+16)]
    IHTMLDOMNode *replaceChild(
            [in] IHTMLDOMNode *newChild,
            [in] IHTMLDOMNode *oldChild);

    [id(1000+17)]
    IHTMLDOMNode *removeChild([in] IHTMLDOMNode *oldChild);

    [id(1000+18)]
    IHTMLDOMNode *appendChild([in] IHTMLDOMNode *newChild);

    [id(1000+19)]
    VARIANT_BOOL hasChildNodes();

    [id(1000+20)]
    IHTMLDOMAttribute *cloneNode([in] VARIANT_BOOL fDeep);

    [propput, id((1000+150)+3)]
    void ie8_nodeValue(VARIANT v);

    [propget, id((1000+150)+3)]
    VARIANT ie8_nodeValue();

    [propput, id((1000+150)+4)]
    void ie8_value(BSTR v);

    [propget, id((1000+150)+4)]
    BSTR ie8_value();

    [propget, id((1000+150))]
    VARIANT_BOOL ie8_specified();

    [propget, id((1000+150)+1)]
    IHTMLElement2 *ownerElement();

    [propget, id((0x80010000+500)+9), hidden]        IDispatch *constructor();
}




[
    odl,
    oleautomation,
    dual,
    uuid(3051041a-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLDocumentCompatibleInfo : IDispatch
{
    [propget, id(1000)]
    HRESULT userAgent([retval, out] BSTR *p);

    [propget, id(1000+1)]
    HRESULT version([retval, out] BSTR *p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(30510418-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLDocumentCompatibleInfoCollection : IDispatch
{
    [propget, id(1000+1)]
    HRESULT length([retval, out] long *p);

    [id(1000)]
    HRESULT item([in] long i, [retval, out]IHTMLDocumentCompatibleInfo **p);
}




[
    hidden,
    uuid(3050f565-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLDOMTextNode
{
properties:
methods:
    [propput, id(1000)]
    void data(BSTR v);

    [propget, id(1000)]
    BSTR data();

    [id(1000+1)]
    BSTR toString();

    [propget, id(1000+2)]
    LONG length();

    [id(1000+3)]
    IHTMLDOMNode *splitText([in] LONG offset);

    [id(1000+4)]
    BSTR substringData(
            [in] LONG offset,
            [in] LONG Count);

    [id(1000+5)]
    void appendData([in] BSTR bstrstring);

    [id(1000+6)]
    void insertData(
            [in] LONG offset,
            [in] BSTR bstrstring);

    [id(1000+7)]
    void deleteData(
            [in] LONG offset,
            [in] LONG Count);

    [id(1000+8)]
    void replaceData(
            [in] LONG offset,
            [in] LONG Count,
            [in] BSTR bstrstring);

    [propget, id(((0x80010000+500)+500)+46)]                          LONG nodeType();                                                      [propget, id(((0x80010000+500)+500)+47)]                        IHTMLDOMNode* parentNode();                                           [id(((0x80010000+500)+500)+48)]                              VARIANT_BOOL hasChildNodes();                                         [propget, id(((0x80010000+500)+500)+49)]                        IDispatch* childNodes();                                              [propget, id(((0x80010000+500)+500)+50)]                        IDispatch* attributes();                                              [id(((0x80010000+500)+500)+51)]                               IHTMLDOMNode* insertBefore(                                          [in] IHTMLDOMNode* newChild,                                 [optional, in] VARIANT refChild);                             [id(((0x80010000+500)+500)+52)]                                IHTMLDOMNode* removeChild([in] IHTMLDOMNode* oldChild);               [id(((0x80010000+500)+500)+53)]                               IHTMLDOMNode* replaceChild(                                          [in] IHTMLDOMNode* newChild,                                     [in] IHTMLDOMNode* oldChild);                                     [id(((0x80010000+500)+500)+61)]                                  IHTMLDOMNode* cloneNode([in] VARIANT_BOOL fDeep);                     [id(((0x80010000+500)+500)+66)]                                 IHTMLDOMNode* removeNode([defaultvalue(0), in] VARIANT_BOOL fDeep);   [id(((0x80010000+500)+500)+68)]                                   IHTMLDOMNode* swapNode([in] IHTMLDOMNode* otherNode);                 [id(((0x80010000+500)+500)+67)]                                IHTMLDOMNode* replaceNode([in] IHTMLDOMNode* replacement);            [id(((0x80010000+500)+500)+73)]                                IHTMLDOMNode* appendChild([in] IHTMLDOMNode* newChild);               [propget, id(((0x80010000+500)+500)+74)]                          BSTR nodeName();                                                      [propput, id(((0x80010000+500)+500)+75)]                         void nodeValue(VARIANT v);                                            [propget, id(((0x80010000+500)+500)+75)]                         VARIANT nodeValue();                                                  [propget, id(((0x80010000+500)+500)+76)]                        IHTMLDOMNode* firstChild();                                           [propget, id(((0x80010000+500)+500)+77)]                         IHTMLDOMNode* lastChild();                                            [propget, id(((0x80010000+500)+500)+78)]                   IHTMLDOMNode* previousSibling();                                      [propget, id(((0x80010000+500)+500)+79)]                       IHTMLDOMNode* nextSibling();        [propget, id(((0x80010000+500)+500)+113)]    IDispatch *ownerDocument();
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f4c3-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLAttributeCollection : IDispatch
{
    [propget, id((1000+500))]
    HRESULT length(
            [retval, out] long *p);

    [propget, id(DISPID_NEWENUM), hidden, restricted]
    HRESULT _newEnum(
            [retval, out] IUnknown **p);

    [id(DISPID_VALUE)]
    HRESULT item(
            [optional, in] VARIANT *name,
            [retval, out] IDispatch **pdisp);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f80a-98b5-11cf-bb82-00aa00bdce0b)
    ]
interface IHTMLAttributeCollection2 : IDispatch
{
    [id((1000+500)+1)]
    HRESULT getNamedItem(
            [in] BSTR bstrName,
            [retval, out] IHTMLDOMAttribute **newretNode);

    [id((1000+500)+2)]
    HRESULT setNamedItem(
            [in] IHTMLDOMAttribute *ppNode,
            [retval, out] IHTMLDOMAttribute **newretNode);

    [id((1000+500)+3)]
    HRESULT removeNamedItem(
            [in] BSTR bstrName,
            [retval, out] IHTMLDOMAttribute **newretNode);
}




[
    odl,
    oleautomation,
    dual,
    uuid(30510469-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLAttributeCollection3 : IDispatch
{
    [id((1000+150))]
    HRESULT getNamedItem(
            [in] BSTR bstrName,
            [retval, out] IHTMLDOMAttribute **ppNodeOut);

    [id((1000+150)+1)]
    HRESULT setNamedItem(
            [in] IHTMLDOMAttribute *pNodeIn,
            [retval, out] IHTMLDOMAttribute **ppNodeOut);

    [id((1000+150)+2)]
    HRESULT removeNamedItem(
            [in] BSTR bstrName,
            [retval, out] IHTMLDOMAttribute **ppNodeOut);

    [id((1000+150)+4)]
    HRESULT item(
            [in] long index,
            [retval, out] IHTMLDOMAttribute **ppNodeOut);

    [propget, id((1000+150)+3)]
    HRESULT length([retval, out] long *p);
}




[
    hidden,
    uuid(3050f56c-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLAttributeCollection
{
properties:
methods:
    [propget, id((1000+500))]
    long length();

    [propget, id(DISPID_NEWENUM), hidden, restricted]
    IUnknown *_newEnum();

    [id(DISPID_VALUE)]
    IDispatch *item([optional, in] VARIANT *name);

    [id((1000+500)+1)]
    IHTMLDOMAttribute *getNamedItem([in] BSTR bstrName);

    [id((1000+500)+2)]
    IHTMLDOMAttribute *setNamedItem([in] IHTMLDOMAttribute *ppNode);

    [id((1000+500)+3)]
    IHTMLDOMAttribute *removeNamedItem([in] BSTR bstrName);

    [id((1000+150))]
    IHTMLDOMAttribute *ie8_getNamedItem([in] BSTR bstrName);

    [id((1000+150)+1)]
    IHTMLDOMAttribute *ie8_setNamedItem([in] IHTMLDOMAttribute *pNodeIn);

    [id((1000+150)+2)]
    IHTMLDOMAttribute *ie8_removeNamedItem([in] BSTR bstrName);

    [id((1000+150)+4)]
    IHTMLDOMAttribute *ie8_item([in] long index);

    [propget, id((1000+150)+3)]
    long ie8_length();

    [propget, id((0x80010000+500)+9), hidden]
    IDispatch *constructor();
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f5ab-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLDOMChildrenCollection : IDispatch
{
    [propget, id((1000+500))]
    HRESULT length([out, retval] LONG *p);

    [propget, id(DISPID_NEWENUM), hidden, restricted]
    HRESULT _newEnum([out, retval] IUnknown **p);

    [id(DISPID_VALUE)]
    HRESULT item(
            [in] LONG index,
            [out, retval] IDispatch **ppItem);
}




[
    hidden,
    uuid(3050f577-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispDOMChildrenCollection
{
properties:
methods:
    [propget, id((1000+500))]
    LONG length();

    [propget, id(DISPID_NEWENUM), hidden, restricted]
    IUnknown *_newEnum();

    [id(DISPID_VALUE)]
    IDispatch *item([in] LONG index);
}

interface IHTMLElementCollection;




[
    odl,
    dual,
    oleautomation,
    uuid(3050f1FF-98B5-11CF-BB82-00AA00BDCE0B)
]
interface IHTMLElement : IDispatch
{
    [id(((0x80010000+500)+1))]
    HRESULT setAttribute(
        [in] BSTR strAttributeName,
        [in] VARIANT AttributeValue,
        [defaultvalue(1), in] LONG lFlags);

    [id(((0x80010000+500)+2))]
    HRESULT getAttribute(
        [in] BSTR strAttributeName,
        [defaultvalue(0), in] LONG lFlags,
        [retval, out] VARIANT *AttributeValue);

    [id(((0x80010000+500)+3))]
    HRESULT removeAttribute(
        [in] BSTR strAttributeName,
        [defaultvalue(1), in] LONG lFlags,
        [retval, out] VARIANT_BOOL *pfSuccess);

    [propput, id((((0x80010000+500)+500)+1))]
    HRESULT className([in] BSTR v);

    [propget, id((((0x80010000+500)+500)+1))]
    HRESULT className([retval, out] BSTR *p);

    [propput, id((((0x80010000+500)+500)+2))]
    HRESULT id([in] BSTR v);

    [propget, id((((0x80010000+500)+500)+2))]
    HRESULT id([retval, out] BSTR *p);

    [propget, id((((0x80010000+500)+500)+4))]
    HRESULT tagName([retval, out] BSTR *p);

    [propget, id((0x80010000+8))]
    HRESULT parentElement([retval, out] IHTMLElement **p);

    [propget, id((0x80010000+74))]
    HRESULT style([retval, out] IHTMLStyle **p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13))]
    HRESULT onhelp([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13))]
    HRESULT onhelp([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8))]
    HRESULT onclick([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8))]
    HRESULT onclick([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9))]
    HRESULT ondblclick([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9))]
    HRESULT ondblclick([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5))]
    HRESULT onkeydown([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5))]
    HRESULT onkeydown([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6))]
    HRESULT onkeyup([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6))]
    HRESULT onkeyup([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7))]
    HRESULT onkeypress([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7))]
    HRESULT onkeypress([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1))]
    HRESULT onmouseout([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1))]
    HRESULT onmouseout([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0))]
    HRESULT onmouseover([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0))]
    HRESULT onmouseover([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4))]
    HRESULT onmousemove([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4))]
    HRESULT onmousemove([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2))]
    HRESULT onmousedown([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2))]
    HRESULT onmousedown([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3))]
    HRESULT onmouseup([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3))]
    HRESULT onmouseup([retval, out] VARIANT *p);

    [propget, id((((0x80010000+500)+500)+18))]
    HRESULT document([retval, out] IDispatch **p);

    [propput, id((0x80010000+69))]
    HRESULT title([in] BSTR v);

    [propget, id((0x80010000+69))]
    HRESULT title([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100))]
    HRESULT language([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100))]
    HRESULT language([retval, out] BSTR *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37))]
    HRESULT onselectstart([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37))]
    HRESULT onselectstart([retval, out] VARIANT *p);

    [id((((0x80010000+500)+500)+19))]
    HRESULT scrollIntoView([optional, in] VARIANT varargStart);

    [id((((0x80010000+500)+500)+20))]
    HRESULT contains(
        [in] IHTMLElement *pChild,
        [retval, out] VARIANT_BOOL *pfResult);

    [propget, id((((0x80010000+500)+500)+24))]
    HRESULT sourceIndex([retval, out] LONG *p);

    [propget, id((((0x80010000+500)+500)+25))]
    HRESULT recordNumber([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]
    HRESULT lang([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]
    HRESULT lang([retval, out] BSTR *p);

    [propget, id((((0x80010000+500)+500)+8))]
    HRESULT offsetLeft([retval, out] LONG *p);

    [propget, id((((0x80010000+500)+500)+9))]
    HRESULT offsetTop([retval, out] LONG *p);

    [propget, id((((0x80010000+500)+500)+10))]
    HRESULT offsetWidth([retval, out] LONG *p);

    [propget, id((((0x80010000+500)+500)+11))]
    HRESULT offsetHeight([retval, out] LONG *p);

    [propget, id((((0x80010000+500)+500)+12))]
    HRESULT offsetParent([retval, out] IHTMLElement **p);

    [propput, id((((0x80010000+500)+500)+26))]
    HRESULT innerHTML([in] BSTR v);

    [propget, id((((0x80010000+500)+500)+26))]
    HRESULT innerHTML([retval, out] BSTR *p);

    [propput, id((((0x80010000+500)+500)+27))]
    HRESULT innerText([in] BSTR v);

    [propget, id((((0x80010000+500)+500)+27))]
    HRESULT innerText([retval, out] BSTR *p);

    [propput, id((((0x80010000+500)+500)+28))]
    HRESULT outerHTML([in] BSTR v);

    [propget, id((((0x80010000+500)+500)+28))]
    HRESULT outerHTML([retval, out] BSTR *p);

    [propput, id((((0x80010000+500)+500)+29))]
    HRESULT outerText([in] BSTR v);

    [propget, id((((0x80010000+500)+500)+29))]
    HRESULT outerText([retval, out] BSTR *p);

    [id((((0x80010000+500)+500)+30))]
    HRESULT insertAdjacentHTML([in] BSTR where, [in] BSTR html);

    [id((((0x80010000+500)+500)+31))]
    HRESULT insertAdjacentText([in] BSTR where, [in] BSTR text);

    [propget, id((((0x80010000+500)+500)+32))]
    HRESULT parentTextEdit([retval, out] IHTMLElement **p);

    [propget, id((((0x80010000+500)+500)+34))]
    HRESULT isTextEdit([retval, out] VARIANT_BOOL *p);

    [id((((0x80010000+500)+500)+33))]
    HRESULT click();

    [propget, id((((0x80010000+500)+500)+35))]
    HRESULT filters([retval, out] IHTMLFiltersCollection **p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35))]
    HRESULT ondragstart([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35))]
    HRESULT ondragstart([retval, out] VARIANT *p);

    [id((((0x80010000+500)+500)+36))]
    HRESULT toString([retval, out] BSTR *String);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21))]
    HRESULT onbeforeupdate([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21))]
    HRESULT onbeforeupdate([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22))]
    HRESULT onafterupdate([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22))]
    HRESULT onafterupdate([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38))]
    HRESULT onerrorupdate([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38))]
    HRESULT onerrorupdate([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18))]
    HRESULT onrowexit([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18))]
    HRESULT onrowexit([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19))]
    HRESULT onrowenter([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19))]
    HRESULT onrowenter([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40))]
    HRESULT ondatasetchanged([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40))]
    HRESULT ondatasetchanged([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41))]
    HRESULT ondataavailable([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41))]
    HRESULT ondataavailable([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42))]
    HRESULT ondatasetcomplete([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42))]
    HRESULT ondatasetcomplete([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43))]
    HRESULT onfilterchange([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43))]
    HRESULT onfilterchange([retval, out] VARIANT *p);

    [propget, id((((0x80010000+500)+500)+37))]
    HRESULT children([retval, out] IDispatch **p);

    [propget, id((((0x80010000+500)+500)+38))]
    HRESULT all([retval, out] IDispatch **p);
}




















































































































































































































































































[
    odl,
    oleautomation,
    dual,
    uuid(3050f434-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLElement2 : IDispatch
{
    [propget, id(((0x80010000+500)+500)+39)]
    HRESULT scopeName([retval, out] BSTR *p);

    [id(((0x80010000+500)+500)+40)]
    HRESULT setCapture([defaultvalue(-1), in] VARIANT_BOOL containerCapture);

    [id(((0x80010000+500)+500)+41)]
    HRESULT releaseCapture();

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]
    HRESULT onlosecapture([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]
    HRESULT onlosecapture([retval, out] VARIANT *p);

    [id(((0x80010000+500)+500)+42)]
    HRESULT componentFromPoint(
        [in] LONG x,
        [in] LONG y,
        [retval, out] BSTR *component);

    [id(((0x80010000+500)+500)+43)]
    HRESULT doScroll([optional, in] VARIANT component);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]
    HRESULT onscroll([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]
    HRESULT onscroll([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]
    HRESULT ondrag([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]
    HRESULT ondrag([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]
    HRESULT ondragend([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]
    HRESULT ondragend([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]
    HRESULT ondragenter([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]
    HRESULT ondragenter([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]
    HRESULT ondragover([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]
    HRESULT ondragover([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]
    HRESULT ondragleave([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]
    HRESULT ondragleave([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]
    HRESULT ondrop([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]
    HRESULT ondrop([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]
    HRESULT onbeforecut([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]
    HRESULT onbeforecut([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]
    HRESULT oncut([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]
    HRESULT oncut([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]
    HRESULT onbeforecopy([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]
    HRESULT onbeforecopy([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]
    HRESULT oncopy([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]
    HRESULT oncopy([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]
    HRESULT onbeforepaste([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]
    HRESULT onbeforepaste([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]
    HRESULT onpaste([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]
    HRESULT onpaste([retval, out] VARIANT *p);

    [propget, id(((0x80010000+500)+500)+7), nonbrowsable]
    HRESULT currentStyle([retval, out] IHTMLCurrentStyle **p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]
    HRESULT onpropertychange([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]
    HRESULT onpropertychange([retval, out] VARIANT *p);

    [id(((0x80010000+500)+500)+44)]
    HRESULT getClientRects([retval, out] IHTMLRectCollection **pRectCol);

    [id(((0x80010000+500)+500)+45)]
    HRESULT getBoundingClientRect([retval, out] IHTMLRect **pRect);

    [id((0x80010000+500)+4)]
    HRESULT setExpression(
        [in] BSTR propname,
        [in] BSTR expression,
        [defaultvalue(""), in] BSTR language);

    [id((0x80010000+500)+5)]
    HRESULT getExpression(
        [in] BSTR propname,
        [retval, out] VARIANT *expression);

    [id((0x80010000+500)+6)]
    HRESULT removeExpression(
        [in] BSTR propname,
        [retval, out] VARIANT_BOOL *pfSuccess);

    [propput, id((0x80010000+15)), displaybind, bindable]
    HRESULT tabIndex([in] short v);

    [propget, id((0x80010000+15)), displaybind, bindable]
    HRESULT tabIndex([retval, out] short *p);

    [id((((0x80010000+500)+500)+1000))]
    HRESULT focus();

    [propput, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable]
    HRESULT accessKey([in] BSTR v);

    [propget, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable]
    HRESULT accessKey([retval, out] BSTR *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]
    HRESULT onblur([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]
    HRESULT onblur([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]
    HRESULT onfocus([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]
    HRESULT onfocus([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]
    HRESULT onresize([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]
    HRESULT onresize([retval, out] VARIANT *p);

    [id((((0x80010000+500)+500)+1000)+2)]
    HRESULT blur();

    [id((((0x80010000+500)+500)+1000)+17)]
    HRESULT addFilter([in] IUnknown *pUnk);

    [id((((0x80010000+500)+500)+1000)+18)]
    HRESULT removeFilter([in] IUnknown *pUnk);

    [propget, id((((0x80010000+500)+500)+1000)+19), displaybind, bindable]
    HRESULT clientHeight([retval, out] LONG *p);

    [propget, id((((0x80010000+500)+500)+1000)+20), displaybind, bindable]
    HRESULT clientWidth([retval, out] LONG *p);

    [propget, id((((0x80010000+500)+500)+1000)+21), displaybind, bindable]
    HRESULT clientTop([retval, out] LONG *p);

    [propget, id((((0x80010000+500)+500)+1000)+22), displaybind, bindable]
    HRESULT clientLeft([retval, out] LONG *p);

    [id((0x80010000+500)+7)]
    HRESULT attachEvent(
        [in] BSTR event,
        [in] IDispatch *pDisp,
        [retval, out] VARIANT_BOOL *pfResult);

    [id((0x80010000+500)+8)]
    HRESULT detachEvent(
        [in] BSTR event,
        [in] IDispatch *pDisp);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+116))]
    HRESULT readyState([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]
    HRESULT onreadystatechange([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]
    HRESULT onreadystatechange([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]
    HRESULT onrowsdelete([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]
    HRESULT onrowsdelete([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]
    HRESULT onrowsinserted([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]
    HRESULT onrowsinserted([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]
    HRESULT oncellchange([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]
    HRESULT oncellchange([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]
    HRESULT dir([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]
    HRESULT dir([retval, out] BSTR *p);

    [id(((0x80010000+500)+500)+56)]
    HRESULT createControlRange([retval, out] IDispatch **range);

    [propget, id(((0x80010000+500)+500)+57), displaybind, bindable]
    HRESULT scrollHeight([retval, out] LONG *p);

    [propget, id(((0x80010000+500)+500)+58), displaybind, bindable]
    HRESULT scrollWidth([retval, out] LONG *p);

    [propput, id(((0x80010000+500)+500)+59), displaybind, bindable]
    HRESULT scrollTop([in] LONG v);

    [propget, id(((0x80010000+500)+500)+59), displaybind, bindable]
    HRESULT scrollTop([retval, out] LONG *p);

    [propput, id(((0x80010000+500)+500)+60), displaybind, bindable]
    HRESULT scrollLeft([in] LONG v);

    [propget, id(((0x80010000+500)+500)+60), displaybind, bindable]
    HRESULT scrollLeft([retval, out] LONG *p);

    [id(((0x80010000+500)+500)+62)]
    HRESULT clearAttributes();

    [id(((0x80010000+500)+500)+63)]
    HRESULT mergeAttributes([in] IHTMLElement *mergeThis);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]
    HRESULT oncontextmenu([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]
    HRESULT oncontextmenu([retval, out] VARIANT *p);

    [id(((0x80010000+500)+500)+69)]
    HRESULT insertAdjacentElement(
        [in] BSTR where,
        [in] IHTMLElement *insertedElement,
        [retval, out] IHTMLElement **inserted);

    [id(((0x80010000+500)+500)+65)]
    HRESULT applyElement(
        [in] IHTMLElement *apply,
        [in] BSTR where,
        [retval, out] IHTMLElement **applied);

    [id(((0x80010000+500)+500)+70)]
    HRESULT getAdjacentText(
        [in] BSTR where,
        [retval, out] BSTR *text);

    [id(((0x80010000+500)+500)+71)]
    HRESULT replaceAdjacentText(
        [in] BSTR where,
        [in] BSTR newText,
        [retval, out] BSTR *oldText);

    [propget, id(((0x80010000+500)+500)+72)]
    HRESULT canHaveChildren([retval, out] VARIANT_BOOL *p);

    [id(((0x80010000+500)+500)+80)]
    HRESULT addBehavior(
        [in] BSTR bstrUrl,
        [optional, in] VARIANT *pvarFactory,
        [retval, out] LONG *pCookie);

    [id(((0x80010000+500)+500)+81)]
    HRESULT removeBehavior(
        [in] LONG cookie,
        [retval, out] VARIANT_BOOL *pfResult);

    [propget, id(((0x80010000+500)+500)+64), nonbrowsable]
    HRESULT runtimeStyle([retval, out] IHTMLStyle **p);

    [propget, id(((0x80010000+500)+500)+82)]
    HRESULT behaviorUrns([retval, out] IDispatch **p);

    [propput, id(((0x80010000+500)+500)+83)]
    HRESULT tagUrn([in] BSTR v);

    [propget, id(((0x80010000+500)+500)+83)]
    HRESULT tagUrn([retval, out] BSTR *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]
    HRESULT onbeforeeditfocus([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]
    HRESULT onbeforeeditfocus([retval, out] VARIANT *p);

    [propget, id(((0x80010000+500)+500)+84), hidden, restricted]
    HRESULT readyStateValue([retval, out] LONG *p);

    [id(((0x80010000+500)+500)+85)]
    HRESULT getElementsByTagName(
        [in] BSTR v,
        [retval, out] IHTMLElementCollection **pelColl);
}
















































































































































































































































































































[
    odl,
    oleautomation,
    dual,
    uuid(3050f673-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLElement3 : IDispatch
{
    [id(((0x80010000+500)+500)+96)] HRESULT mergeAttributes([in]
    IHTMLElement* mergeThis,[optional, in] VARIANT* pvarFlags);

    [propget, id(((0x80010000+500)+500)+97)]
    HRESULT isMultiLine([retval, out] VARIANT_BOOL * p);

    [propget, id(((0x80010000+500)+500)+98)]
    HRESULT canHaveHTML([retval, out] VARIANT_BOOL * p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]
    HRESULT onlayoutcomplete([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]
    HRESULT onlayoutcomplete([retval, out] VARIANT * p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]
    HRESULT onpage([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]
    HRESULT onpage([retval, out] VARIANT * p);

    [propput, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]
    HRESULT inflateBlock([in] VARIANT_BOOL v);

    [propget, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]
    HRESULT inflateBlock([retval, out] VARIANT_BOOL * p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]
    HRESULT onbeforedeactivate([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]
    HRESULT onbeforedeactivate([retval, out] VARIANT * p);

    [id(((0x80010000+500)+500)+101)] HRESULT setActive();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]
    HRESULT contentEditable([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]
    HRESULT contentEditable([retval, out] BSTR * p);

    [propget, id(((0x80010000+500)+500)+102)]
    HRESULT isContentEditable([retval, out] VARIANT_BOOL * p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable]
    HRESULT hideFocus([in] VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable]
    HRESULT hideFocus([retval, out] VARIANT_BOOL * p);

    [propput, id((0x80010000+76)), displaybind, bindable]
    HRESULT disabled([in] VARIANT_BOOL v);

    [propget, id((0x80010000+76)), displaybind, bindable]
    HRESULT disabled([retval, out] VARIANT_BOOL * p);

    [propget, id(((0x80010000+500)+500)+105)]
    HRESULT isDisabled([retval, out] VARIANT_BOOL * p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]
    HRESULT onmove([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]
    HRESULT onmove([retval, out] VARIANT * p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]
    HRESULT oncontrolselect([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]
    HRESULT oncontrolselect([retval, out] VARIANT * p);

    [id(((0x80010000+500)+500)+106)]
    HRESULT fireEvent(
        [in] BSTR bstrEventName,
        [optional, in] VARIANT* pvarEventObject,
        [retval, out] VARIANT_BOOL* pfCancelled);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]
    HRESULT onresizestart([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]
    HRESULT onresizestart([retval, out] VARIANT * p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]
    HRESULT onresizeend([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]
    HRESULT onresizeend([retval, out] VARIANT * p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]
    HRESULT onmovestart([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]
    HRESULT onmovestart([retval, out] VARIANT * p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable]
    HRESULT onmoveend([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable]
    HRESULT onmoveend([retval, out] VARIANT * p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]
    HRESULT onmouseenter([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]
    HRESULT onmouseenter([retval, out] VARIANT * p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]
    HRESULT onmouseleave([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]
    HRESULT onmouseleave([retval, out] VARIANT * p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]
    HRESULT onactivate([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]
    HRESULT onactivate([retval, out] VARIANT * p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]
    HRESULT ondeactivate([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]
    HRESULT ondeactivate([retval, out] VARIANT * p);

    [id(((0x80010000+500)+500)+107)] HRESULT dragDrop([retval, out]
    VARIANT_BOOL* pfRet);

    [propget, id(((0x80010000+500)+500)+108), hidden, restricted, nonbrowsable]
    HRESULT glyphMode([retval, out] LONG * p);
}











































































































































[
    odl,
    oleautomation,
    dual,
    uuid(3050f80f-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLElement4 : IDispatch
{
    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]
    HRESULT onmousewheel([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]
    HRESULT onmousewheel([retval, out] VARIANT * p);

    [id(((0x80010000+500)+500)+112)]
    HRESULT normalize();

    [id(((0x80010000+500)+500)+109)]
    HRESULT getAttributeNode([in] BSTR bstrname,
        [retval, out] IHTMLDOMAttribute** ppAttribute);

    [id(((0x80010000+500)+500)+110)]
    HRESULT setAttributeNode(
        [in] IHTMLDOMAttribute* pattr,
        [retval, out] IHTMLDOMAttribute** ppretAttribute);

    [id(((0x80010000+500)+500)+111)]
    HRESULT removeAttributeNode(
        [in] IHTMLDOMAttribute* pattr,
        [retval, out] IHTMLDOMAttribute** ppretAttribute);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]
    HRESULT onbeforeactivate([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]
    HRESULT onbeforeactivate([retval, out] VARIANT * p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable]
    HRESULT onfocusin([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable]
    HRESULT onfocusin([retval, out] VARIANT * p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]
    HRESULT onfocusout([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]
    HRESULT onfocusout([retval, out] VARIANT * p);
}
















































[
    odl,
    oleautomation,
    dual,
    uuid(3050f4d0-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLUniqueName : IDispatch
{
    [propget, id(((0x80010000+500)+500)+54), hidden]
    HRESULT uniqueNumber([retval, out] LONG * p);

    [propget, id(((0x80010000+500)+500)+55), hidden]
    HRESULT uniqueID([retval, out] BSTR * p);
}












































































































































































































[
    odl,
    oleautomation,
    dual,
    uuid(3050f3f2-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLDatabinding : IDispatch
{
    [propput, id(((0x80010000+500)+500)+21)]
    HRESULT dataFld([in] BSTR v);

    [propget, id(((0x80010000+500)+500)+21)]
    HRESULT dataFld([retval, out] BSTR * p);

    [propput, id(((0x80010000+500)+500)+22)]
    HRESULT dataSrc([in] BSTR v);

    [propget, id(((0x80010000+500)+500)+22)]
    HRESULT dataSrc([retval, out] BSTR * p);

    [propput, id(((0x80010000+500)+500)+23)]
    HRESULT dataFormatAs([in] BSTR v);

    [propget, id(((0x80010000+500)+500)+23)]
    HRESULT dataFormatAs([retval, out] BSTR * p);
}













































[
    odl,
    oleautomation,
    dual,
    uuid(3050f4b7-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLGenericElement : IDispatch
{
    [propget, id(1000+1), hidden]
    HRESULT recordset([out, retval] IDispatch **p);

    [id(1000+2)]
    HRESULT namedRecordset(
            [in] BSTR dataMember,
            [in, optional] VARIANT *hierarchy,
            [out, retval] IDispatch **ppRecordset);
}




[
    hidden,
    uuid(3050f563-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLGenericElement
{
properties:
methods:
    [id(((0x80010000+500)+1))]                               void setAttribute(                                                   [in] BSTR strAttributeName,                                      [in] VARIANT AttValue,                                           [defaultvalue(1), in] LONG lFlags);                               [id(((0x80010000+500)+2))]                               VARIANT getAttribute(                                                [in] BSTR strAttributeName,                                      [defaultvalue(0), in] LONG lFlags);                               [id(((0x80010000+500)+3))]                            VARIANT_BOOL removeAttribute(                                        [in] BSTR strAttributeName,                                      [defaultvalue(1), in] LONG lFlags);                               [propput, id((((0x80010000+500)+500)+1)), bindable]               void className(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1)), bindable]               BSTR className();                                                     [propput, id((((0x80010000+500)+500)+2)), bindable]                      void id(BSTR v);                                                      [propget, id((((0x80010000+500)+500)+2)), bindable]                      BSTR id();                                                            [propget, id((((0x80010000+500)+500)+4))]                           BSTR tagName();                                                       [propget, id((0x80010000+8))]                     IHTMLElement *parentElement();                                        [propget, id((0x80010000+74)), nonbrowsable]               IHTMLStyle *style();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     void onhelp(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     VARIANT onhelp();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    void onclick(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    VARIANT onclick();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] void ondblclick(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] VARIANT ondblclick();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  void onkeydown(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  VARIANT onkeydown();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    void onkeyup(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    VARIANT onkeyup();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] void onkeypress(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] VARIANT onkeypress();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] void onmouseout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] VARIANT onmouseout();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  void onmouseover(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  VARIANT onmouseover();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  void onmousemove(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  VARIANT onmousemove();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  void onmousedown(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  VARIANT onmousedown();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  void onmouseup(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  VARIANT onmouseup();                                                  [propget, id((((0x80010000+500)+500)+18))] IDispatch* document();    [propput, id((0x80010000+69)), displaybind, bindable]      void title(BSTR v);                                                   [propget, id((0x80010000+69)), displaybind, bindable]      BSTR title();                                                         [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   void language(BSTR v);                                                [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   BSTR language();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  void onselectstart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  VARIANT onselectstart();                                              [id((((0x80010000+500)+500)+19))]                             void scrollIntoView([optional, in] VARIANT varargStart);              [id((((0x80010000+500)+500)+20))]                                   VARIANT_BOOL contains([in] IHTMLElement* pChild);                     [propget, id((((0x80010000+500)+500)+24)), bindable]             LONG sourceIndex();                                                   [propget, id((((0x80010000+500)+500)+25))]                      VARIANT recordNumber();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              void lang(BSTR v);                                                    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              BSTR lang();                                                          [propget, id((((0x80010000+500)+500)+8))]                        LONG offsetLeft();                                                    [propget, id((((0x80010000+500)+500)+9))]                         LONG offsetTop();                                                     [propget, id((((0x80010000+500)+500)+10))]                       LONG offsetWidth();                                                   [propget, id((((0x80010000+500)+500)+11))]                      LONG offsetHeight();                                                  [propget, id((((0x80010000+500)+500)+12))]                      IHTMLElement* offsetParent();                                         [propput, id((((0x80010000+500)+500)+26))]                         void innerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+26))]                         BSTR innerHTML();                                                     [propput, id((((0x80010000+500)+500)+27))]                         void innerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+27))]                         BSTR innerText();                                                     [propput, id((((0x80010000+500)+500)+28))]                         void outerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+28))]                         BSTR outerHTML();                                                     [propput, id((((0x80010000+500)+500)+29))]                         void outerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+29))]                         BSTR outerText();                                                     [id((((0x80010000+500)+500)+30))]                         void insertAdjacentHTML(                                             [in] BSTR where,                                                 [in] BSTR html);                                                  [id((((0x80010000+500)+500)+31))]                         void insertAdjacentText(                                             [in] BSTR where,                                                 [in] BSTR text);                                                  [propget, id((((0x80010000+500)+500)+32))]                    IHTMLElement* parentTextEdit();                                       [propget, id((((0x80010000+500)+500)+34))]                        VARIANT_BOOL isTextEdit();                                            [id((((0x80010000+500)+500)+33))]                                      void click();                                                         [propget, id((((0x80010000+500)+500)+35))]                           IHTMLFiltersCollection* filters();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  void ondragstart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  VARIANT ondragstart();                                                [id((((0x80010000+500)+500)+36))]                                   BSTR toString();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  void onbeforeupdate(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  VARIANT onbeforeupdate();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  void onafterupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  VARIANT onafterupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  void onerrorupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  VARIANT onerrorupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  void onrowexit(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  VARIANT onrowexit();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  void onrowenter(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  VARIANT onrowenter();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  void ondatasetchanged(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  VARIANT ondatasetchanged();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  void ondataavailable(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  VARIANT ondataavailable();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  void ondatasetcomplete(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  VARIANT ondatasetcomplete();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  void onfilterchange(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  VARIANT onfilterchange();                                             [propget, id((((0x80010000+500)+500)+37))]                          IDispatch* children();                                                [propget, id((((0x80010000+500)+500)+38))]                               IDispatch* all();        [propget, id(((0x80010000+500)+500)+39)]                        BSTR scopeName();                                                     [id(((0x80010000+500)+500)+40)]                                void setCapture([defaultvalue(-1), in] VARIANT_BOOL containerCapture);   [id(((0x80010000+500)+500)+41)]                            void releaseCapture();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  void onlosecapture(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  VARIANT onlosecapture();                                              [id(((0x80010000+500)+500)+42)]                        BSTR componentFromPoint([in] LONG x,[in] LONG y);                     [id(((0x80010000+500)+500)+43)]                                  void doScroll([optional, in] VARIANT component);                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  void onscroll(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  VARIANT onscroll();                                                   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    void ondrag(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    VARIANT ondrag();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  void ondragend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  VARIANT ondragend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  void ondragenter(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  VARIANT ondragenter();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  void ondragover(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  VARIANT ondragover();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  void ondragleave(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  VARIANT ondragleave();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    void ondrop(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    VARIANT ondrop();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  void onbeforecut(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  VARIANT onbeforecut();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     void oncut(VARIANT v);                                                [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     VARIANT oncut();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  void onbeforecopy(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  VARIANT onbeforecopy();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    void oncopy(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    VARIANT oncopy();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  void onbeforepaste(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  VARIANT onbeforepaste();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   void onpaste(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   VARIANT onpaste();                                                    [propget, id(((0x80010000+500)+500)+7), nonbrowsable]       IHTMLCurrentStyle* currentStyle();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  void onpropertychange(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  VARIANT onpropertychange();                                           [id(((0x80010000+500)+500)+44)]                            IHTMLRectCollection* getClientRects();                                [id(((0x80010000+500)+500)+45)]                     IHTMLRect* getBoundingClientRect();                                   [id((0x80010000+500)+4)]                             void setExpression(                                                  [in] BSTR propname,                                              [in] BSTR expr,                                                  [defaultvalue(""), in] BSTR lang);                                [id((0x80010000+500)+5)]                             VARIANT getExpression([in] BSTR propname);                            [id((0x80010000+500)+6)]                          VARIANT_BOOL removeExpression([in] BSTR propname);                    [propput, id((0x80010000+15)), displaybind, bindable]  void tabIndex(short v);                                               [propget, id((0x80010000+15)), displaybind, bindable]  short tabIndex();                                                     [id((((0x80010000+500)+500)+1000))]                                     void focus();                                                         [propput, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] void accessKey(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] BSTR accessKey();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    void onblur(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    VARIANT onblur();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   void onfocus(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   VARIANT onfocus();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  void onresize(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  VARIANT onresize();                                                   [id((((0x80010000+500)+500)+1000)+2)]                                      void blur();                                                          [id((((0x80010000+500)+500)+1000)+17)]                                 void addFilter([in] IUnknown* pUnk);                                  [id((((0x80010000+500)+500)+1000)+18)]                              void removeFilter([in] IUnknown* pUnk);                               [propget, id((((0x80010000+500)+500)+1000)+19), displaybind, bindable]  LONG clientHeight();                                                  [propget, id((((0x80010000+500)+500)+1000)+20), displaybind, bindable]  LONG clientWidth();                                                   [propget, id((((0x80010000+500)+500)+1000)+21), displaybind, bindable]  LONG clientTop();                                                     [propget, id((((0x80010000+500)+500)+1000)+22), displaybind, bindable]  LONG clientLeft();                                                    [id((0x80010000+500)+7)]                               VARIANT_BOOL attachEvent(                                            [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [id((0x80010000+500)+8)]                               void detachEvent(                                                    [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+116))] VARIANT readyState();   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  void onreadystatechange(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  VARIANT onreadystatechange();                                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  void onrowsdelete(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  VARIANT onrowsdelete();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  void onrowsinserted(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  VARIANT onrowsinserted();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  void oncellchange(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  VARIANT oncellchange();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       void dir(BSTR v);                                                     [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       BSTR dir();                                                           [id(((0x80010000+500)+500)+56)]                        IDispatch* createControlRange();                                      [propget, id(((0x80010000+500)+500)+57), displaybind, bindable]  LONG scrollHeight();                                                  [propget, id(((0x80010000+500)+500)+58), displaybind, bindable]  LONG scrollWidth();                                                   [propput, id(((0x80010000+500)+500)+59), displaybind, bindable] void scrollTop(LONG v);                                               [propget, id(((0x80010000+500)+500)+59), displaybind, bindable] LONG scrollTop();                                                     [propput, id(((0x80010000+500)+500)+60), displaybind, bindable]  void scrollLeft(LONG v);                                              [propget, id(((0x80010000+500)+500)+60), displaybind, bindable]  LONG scrollLeft();                                                    [id(((0x80010000+500)+500)+62)]                           void clearAttributes();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  void oncontextmenu(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  VARIANT oncontextmenu();                                              [id(((0x80010000+500)+500)+69)]                     IHTMLElement* insertAdjacentElement(                                 [in] BSTR where,                                                 [in] IHTMLElement* insertedElement);                              [id(((0x80010000+500)+500)+65)]                              IHTMLElement* applyElement([in] IHTMLElement* apply,[in] BSTR where);   [id(((0x80010000+500)+500)+70)]                           BSTR getAdjacentText([in] BSTR where);                                [id(((0x80010000+500)+500)+71)]                       BSTR replaceAdjacentText([in] BSTR where,[in] BSTR newText);          [propget, id(((0x80010000+500)+500)+72)]                  VARIANT_BOOL canHaveChildren();                                       [id(((0x80010000+500)+500)+80)]                               LONG addBehavior([in] BSTR bstrUrl,[optional, in] VARIANT* pvarFactory);   [id(((0x80010000+500)+500)+81)]                            VARIANT_BOOL removeBehavior([in] LONG cookie);                        [propget, id(((0x80010000+500)+500)+64), nonbrowsable]       IHTMLStyle* runtimeStyle();                                           [propget, id(((0x80010000+500)+500)+82)]                     IDispatch* behaviorUrns();                                            [propput, id(((0x80010000+500)+500)+83)]                           void tagUrn(BSTR v);                                                  [propget, id(((0x80010000+500)+500)+83)]                           BSTR tagUrn();                                                        [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  void onbeforeeditfocus(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  VARIANT onbeforeeditfocus();                                          [propget, id(((0x80010000+500)+500)+84), hidden, restricted]  LONG readyStateValue();                                               [id(((0x80010000+500)+500)+85)]                      IHTMLElementCollection* getElementsByTagName([in] BSTR v);       [id(((0x80010000+500)+500)+96)]                           void mergeAttributes(                                                [in] IHTMLElement* mergeThis,                                [optional, in] VARIANT* pvarFlags);                           [propget, id(((0x80010000+500)+500)+97)]                      VARIANT_BOOL isMultiLine();                                           [propget, id(((0x80010000+500)+500)+98)]                      VARIANT_BOOL canHaveHTML();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  void onlayoutcomplete(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  VARIANT onlayoutcomplete();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    void onpage(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    VARIANT onpage();                                                     [propput, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  void inflateBlock(VARIANT_BOOL v);                                    [propget, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  VARIANT_BOOL inflateBlock();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  void onbeforedeactivate(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  VARIANT onbeforedeactivate();                                         [id(((0x80010000+500)+500)+101)]                                 void setActive();                                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  void contentEditable(BSTR v);                                         [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  BSTR contentEditable();                                               [propget, id(((0x80010000+500)+500)+102)]                VARIANT_BOOL isContentEditable();                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] void hideFocus(VARIANT_BOOL v);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] VARIANT_BOOL hideFocus();                                             [propput, id((0x80010000+76)), displaybind, bindable]  void disabled(VARIANT_BOOL v);                                        [propget, id((0x80010000+76)), displaybind, bindable]  VARIANT_BOOL disabled();                                              [propget, id(((0x80010000+500)+500)+105)]                       VARIANT_BOOL isDisabled();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    void onmove(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    VARIANT onmove();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  void oncontrolselect(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  VARIANT oncontrolselect();                                            [id(((0x80010000+500)+500)+106)]                                 VARIANT_BOOL fireEvent(                                              [in] BSTR bstrEventName,                                         [optional, in] VARIANT* pvarEventObject);                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  void onresizestart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  VARIANT onresizestart();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  void onresizeend(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  VARIANT onresizeend();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  void onmovestart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  VARIANT onmovestart();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] void onmoveend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] VARIANT onmoveend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  void onmouseenter(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  VARIANT onmouseenter();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  void onmouseleave(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  VARIANT onmouseleave();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  void onactivate(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  VARIANT onactivate();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  void ondeactivate(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  VARIANT ondeactivate();                                               [id(((0x80010000+500)+500)+107)]                                  VARIANT_BOOL dragDrop();                                              [propget, id(((0x80010000+500)+500)+108), hidden, restricted, nonbrowsable]  LONG glyphMode();       [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  void onmousewheel(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  VARIANT onmousewheel();                                               [id(((0x80010000+500)+500)+112)]                                 void normalize();                                                     [id(((0x80010000+500)+500)+109)]                          IHTMLDOMAttribute* getAttributeNode([in] BSTR bstrname);              [id(((0x80010000+500)+500)+110)]                          IHTMLDOMAttribute* setAttributeNode([in] IHTMLDOMAttribute* pattr);   [id(((0x80010000+500)+500)+111)]                       IHTMLDOMAttribute* removeAttributeNode([in] IHTMLDOMAttribute* pattr);   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  void onbeforeactivate(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  VARIANT onbeforeactivate();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] void onfocusin(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] VARIANT onfocusin();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  void onfocusout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  VARIANT onfocusout();       [propget, id(((0x80010000+500)+500)+54), hidden]   LONG uniqueNumber();                                          [propget, id(((0x80010000+500)+500)+55), hidden]       BSTR uniqueID();     [propget, id(((0x80010000+500)+500)+46)]                          LONG nodeType();                                                      [propget, id(((0x80010000+500)+500)+47)]                        IHTMLDOMNode* parentNode();                                           [id(((0x80010000+500)+500)+48)]                              VARIANT_BOOL hasChildNodes();                                         [propget, id(((0x80010000+500)+500)+49)]                        IDispatch* childNodes();                                              [propget, id(((0x80010000+500)+500)+50)]                        IDispatch* attributes();                                              [id(((0x80010000+500)+500)+51)]                               IHTMLDOMNode* insertBefore(                                          [in] IHTMLDOMNode* newChild,                                 [optional, in] VARIANT refChild);                             [id(((0x80010000+500)+500)+52)]                                IHTMLDOMNode* removeChild([in] IHTMLDOMNode* oldChild);               [id(((0x80010000+500)+500)+53)]                               IHTMLDOMNode* replaceChild(                                          [in] IHTMLDOMNode* newChild,                                     [in] IHTMLDOMNode* oldChild);                                     [id(((0x80010000+500)+500)+61)]                                  IHTMLDOMNode* cloneNode([in] VARIANT_BOOL fDeep);                     [id(((0x80010000+500)+500)+66)]                                 IHTMLDOMNode* removeNode([defaultvalue(0), in] VARIANT_BOOL fDeep);   [id(((0x80010000+500)+500)+68)]                                   IHTMLDOMNode* swapNode([in] IHTMLDOMNode* otherNode);                 [id(((0x80010000+500)+500)+67)]                                IHTMLDOMNode* replaceNode([in] IHTMLDOMNode* replacement);            [id(((0x80010000+500)+500)+73)]                                IHTMLDOMNode* appendChild([in] IHTMLDOMNode* newChild);               [propget, id(((0x80010000+500)+500)+74)]                          BSTR nodeName();                                                      [propput, id(((0x80010000+500)+500)+75)]                         void nodeValue(VARIANT v);                                            [propget, id(((0x80010000+500)+500)+75)]                         VARIANT nodeValue();                                                  [propget, id(((0x80010000+500)+500)+76)]                        IHTMLDOMNode* firstChild();                                           [propget, id(((0x80010000+500)+500)+77)]                         IHTMLDOMNode* lastChild();                                            [propget, id(((0x80010000+500)+500)+78)]                   IHTMLDOMNode* previousSibling();                                      [propget, id(((0x80010000+500)+500)+79)]                       IHTMLDOMNode* nextSibling();        [propget, id(((0x80010000+500)+500)+113)]    IDispatch *ownerDocument();         [propput, id(((0x80010000+500)+500)+21)]       void dataFld(BSTR v);                                 [propget, id(((0x80010000+500)+500)+21)]       BSTR dataFld();                                       [propput, id(((0x80010000+500)+500)+22)]       void dataSrc(BSTR v);                                 [propget, id(((0x80010000+500)+500)+22)]       BSTR dataSrc();                                       [propput, id(((0x80010000+500)+500)+23)]  void dataFormatAs(BSTR v);                            [propget, id(((0x80010000+500)+500)+23)]  BSTR dataFormatAs();    [id((((0x80010000+500)+500)+200))]                      IHTMLDOMAttribute2 *ie8_getAttributeNode([in] BSTR bstrname);         [id((((0x80010000+500)+500)+200)+1)]                      IHTMLDOMAttribute2 *ie8_setAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+2)]                   IHTMLDOMAttribute2 *ie8_removeAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+3)]                              VARIANT_BOOL hasAttribute([in] BSTR name);                            [propput, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      void role(BSTR v);                                                    [propget, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      BSTR role();                                                          [propput, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  void ariaBusy(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  BSTR ariaBusy();                                                      [propput, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  void ariaChecked(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  BSTR ariaChecked();                                                   [propput, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  void ariaDisabled(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  BSTR ariaDisabled();                                                  [propput, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  void ariaExpanded(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  BSTR ariaExpanded();                                                  [propput, id((((0x80010000+500)+500)+200)+9), displaybind, bindable] void ariaHaspopup(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+9), displaybind, bindable]  BSTR ariaHaspopup();                                                  [propput, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  void ariaHidden(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  BSTR ariaHidden();                                                    [propput, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  void ariaInvalid(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  BSTR ariaInvalid();                                                   [propput, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  void ariaMultiselectable(BSTR v);                                     [propget, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  BSTR ariaMultiselectable();                                           [propput, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  void ariaPressed(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  BSTR ariaPressed();                                                   [propput, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  void ariaReadonly(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  BSTR ariaReadonly();                                                  [propput, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  void ariaRequired(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  BSTR ariaRequired();                                                  [propput, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  void ariaSecret(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  BSTR ariaSecret();                                                    [propput, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  void ariaSelected(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  BSTR ariaSelected();                                                  [id((((0x80010000+500)+500)+200)+18)]                          VARIANT ie8_getAttribute([in] BSTR strAttributeName);                 [id((((0x80010000+500)+500)+200)+19)]                          void ie8_setAttribute([in] BSTR strAttributeName,[in] VARIANT AttributeValue);   [id((((0x80010000+500)+500)+200)+20)]                       VARIANT_BOOL ie8_removeAttribute([in] BSTR strAttributeName);         [propget, id((((0x80010000+500)+500)+200)+21)]                   IHTMLAttributeCollection3 *ie8_attributes();                          [propput, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  void ariaValuenow(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  BSTR ariaValuenow();                                                  [propput, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  void ariaPosinset(short v);                                           [propget, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  short ariaPosinset();                                                 [propput, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  void ariaSetsize(short v);                                            [propget, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  short ariaSetsize();                                                  [propput, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] void ariaLevel(short v);                                              [propget, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] short ariaLevel();                                                    [propput, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  void ariaValuemin(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  BSTR ariaValuemin();                                                  [propput, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  void ariaValuemax(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  BSTR ariaValuemax();                                                  [propput, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  void ariaControls(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  BSTR ariaControls();                                                  [propput, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  void ariaDescribedby(BSTR v);                                         [propget, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  BSTR ariaDescribedby();                                               [propput, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  void ariaFlowto(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  BSTR ariaFlowto();                                                    [propput, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  void ariaLabelledby(BSTR v);                                          [propget, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  BSTR ariaLabelledby();                                                [propput, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  void ariaActivedescendant(BSTR v);                                    [propget, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  BSTR ariaActivedescendant();                                          [propput, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  void ariaOwns(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  BSTR ariaOwns();                                                      [id((((0x80010000+500)+500)+200)+34)]                             VARIANT_BOOL hasAttributes();                                         [propput, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  void ariaLive(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  BSTR ariaLive();                                                      [propput, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  void ariaRelevant(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  BSTR ariaRelevant();       [id(((0x80010000+500)+500)+114)]                  IHTMLElement *querySelector([in] BSTR v);                     [id(((0x80010000+500)+500)+115)]               IHTMLDOMChildrenCollection *querySelectorAll([in] BSTR v);    [propget, id((0x80010000+500)+9), hidden]        IDispatch *constructor();

    [propget, id(1000+1), hidden]
    IDispatch *recordset();

    [id(1000+2)]
    IDispatch *namedRecordset(
            [in] BSTR dataMember,
            [in, optional] VARIANT *hierarchy);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050F357-98B5-11CF-BB82-00AA00BDCE0B)
]
interface IHTMLStyleSheetRule : IDispatch
{
    [propput, id((1000+1))]
    HRESULT selectorText([in] BSTR v);

    [propget, id((1000+1))]
    HRESULT selectorText([retval, out] BSTR *p);

    [propget, id((0x80010000+74))]
    HRESULT style([retval, out] IHTMLRuleStyle **p);

    [propget, id((1000+2))]
    HRESULT readOnly([retval, out] VARIANT_BOOL *p);
}

[
    hidden,
    uuid(3050f50e-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLStyleSheetRule
{
properties:
methods:
    [propput, id((1000+1))]
    void selectorText(BSTR v);

    [propget, id((1000+1))]
    BSTR selectorText();

    [propget, id((0x80010000+74)), nonbrowsable]
    IHTMLRuleStyle* style();

    [propget, id((1000+2))]
    VARIANT_BOOL readOnly();

    [propget, id((0x80010000+500)+9), hidden]        IDispatch *constructor();
}

[
    noncreatable,
    uuid(3050f3ce-98b5-11cf-bb82-00aa00bdce0b)
]
coclass HTMLStyleSheetRule
{
    [default]           dispinterface DispHTMLStyleSheetRule;
                        interface IHTMLStyleSheetRule;
                        interface IHTMLDOMConstructor;
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050F2E5-98B5-11Cf-BB82-00AA00BDCE0B)
]
interface IHTMLStyleSheetRulesCollection : IDispatch
{
    [propget, id((1000+1))]
    HRESULT length([retval, out] LONG *p);

    [id(DISPID_VALUE)]
    HRESULT item(
        [in] LONG index,
        [retval, out] IHTMLStyleSheetRule **ppHTMLStyleSheetRule);
}

[
    hidden,
    uuid(3050f52f-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLStyleSheetRulesCollection
{
properties:
methods:
    [propget, id((1000+1))]
    long length();

    [id(DISPID_VALUE)]
    IHTMLStyleSheetRule* item([in] long index);

    [propget, id((0x80010000+500)+9), hidden]        IDispatch *constructor();
}

[
    noncreatable,
    uuid(3050f3cd-98b5-11cf-bb82-00aa00bdce0b)
]
coclass HTMLStyleSheetRulesCollection
{
    [default]           dispinterface DispHTMLStyleSheetRulesCollection;
                        interface IHTMLStyleSheetRulesCollection;
                        interface IHTMLDOMConstructor;
}

[
    odl,
    oleautomation,
    dual,
    uuid(3050f7ee-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLStyleSheetPage : IDispatch
{
    [propget, id((1000+1))]
    HRESULT selector([retval, out] BSTR *p);

    [propget, id((1000+2))]
    HRESULT pseudoClass([retval, out] BSTR *p);
}

[
    hidden,
    uuid(3050f540-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLStyleSheetPage
{
properties:
methods:
    [propget, id((1000+1))]
    BSTR selector();

    [propget, id((1000+2))]
    BSTR pseudoClass();

    [propget, id((0x80010000+500)+9), hidden]        IDispatch *constructor();
}
[
    noncreatable,
    uuid(3050f7ef-98b5-11cf-bb82-00aa00bdce0b)
]
coclass HTMLStyleSheetPage
{
    [default]           dispinterface DispHTMLStyleSheetPage;
                        interface IHTMLStyleSheetPage;
                        interface IHTMLDOMConstructor;
}

[
    odl,
    oleautomation,
    dual,
    uuid(3050f7f0-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLStyleSheetPagesCollection : IDispatch
{
    [propget, id((1000+1))]
    HRESULT length([retval, out] LONG *p);

    [id(DISPID_VALUE)]
    HRESULT item(
        [in] LONG index,
        [retval, out] IHTMLStyleSheetPage **ppHTMLStyleSheetPage);
}

[
    hidden,
    uuid(3050f543-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLStyleSheetPagesCollection
{
properties:
methods:
    [propget, id((1000+1))]
    long length();

    [id(DISPID_VALUE)]
    IHTMLStyleSheetPage* item([in] long index);

    [propget, id((0x80010000+500)+9), hidden]        IDispatch *constructor();
}

[
    noncreatable,
    uuid(3050f7f1-98b5-11cf-bb82-00aa00bdce0b)
]
coclass HTMLStyleSheetPagesCollection
{
    [default]           dispinterface DispHTMLStyleSheetPagesCollection;
                        interface IHTMLStyleSheetPagesCollection;
                        interface IHTMLDOMConstructor;
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050F2E3-98B5-11CF-BB82-00AA00BDCE0B)
]
interface IHTMLStyleSheet : IDispatch
{
    [propput, id((1000+1))]
    HRESULT title([in] BSTR v);

    [propget, id((1000+1))]
    HRESULT title([retval, out] BSTR *p);

    [propget, id((1000+2))]
    HRESULT parentStyleSheet([retval, out] IHTMLStyleSheet **p);

    [propget, id((1000+3))]
    HRESULT owningElement([retval, out] IHTMLElement **p);

    [propput, id((0x80010000+76))]
    HRESULT disabled([in] VARIANT_BOOL v);

    [propget, id((0x80010000+76))]
    HRESULT disabled([retval, out] VARIANT_BOOL *p);

    [propget, id((1000+4))]
    HRESULT readOnly([retval, out] VARIANT_BOOL *p);

    [propget, id((1000+5))]
    HRESULT imports([retval, out] IHTMLStyleSheetsCollection **p);

    [propput, id((1000+6))]
    HRESULT href([in] BSTR v);

    [propget, id((1000+6))]
    HRESULT href([retval, out] BSTR *p);

    [propget, id((1000+7))]
    HRESULT type([retval, out] BSTR *p);

    [propget, id((1000+8))]
    HRESULT id([retval, out] BSTR *p);

    [id((1000+9))]
    HRESULT addImport(
        [in] BSTR bstrURL,
        [defaultvalue(-1), in] LONG lIndex,
        [retval, out] LONG *plIndex);

    [id((1000+10))]
    HRESULT addRule(
        [in] BSTR bstrSelector,
        [in] BSTR bstrStyle,
        [defaultvalue(-1), in] LONG lIndex,
        [retval, out] LONG *plNewIndex);

    [id((1000+11))]
    HRESULT removeImport([in] LONG lIndex);

    [id((1000+12))]
    HRESULT removeRule([in] LONG lIndex);

    [propput, id((1000+13))]
    HRESULT media([in] BSTR v);

    [propget, id((1000+13))]
    HRESULT media([retval, out] BSTR *p);

    [propput, id((1000+14))]
    HRESULT cssText([in] BSTR v);

    [propget, id((1000+14))]
    HRESULT cssText([retval, out] BSTR *p);

    [propget, id((1000+15))]
    HRESULT rules([retval, out] IHTMLStyleSheetRulesCollection **p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f3d1-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLStyleSheet2 : IDispatch
{
    [propget, id((1000+16))]
    HRESULT pages([retval, out] IHTMLStyleSheetPagesCollection **p);

    [id((1000+17))]
    HRESULT addPageRule(
        [in] BSTR bstrSelector,
        [in] BSTR bstrStyle,
        [defaultvalue(-1), in] LONG lIndex,
        [retval, out] LONG *plNewIndex);
}

[
    hidden,
    uuid(3050f58d-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLStyleSheet
{
properties:
methods:
    [propput, id((1000+1))]
    void title(BSTR v);

    [propget, id((1000+1))]
    BSTR title();

    [propget, id((1000+2))]
    IHTMLStyleSheet* parentStyleSheet();

    [propget, id((1000+3))]
    IHTMLElement* owningElement();

    [propput, id((0x80010000+76))]
    void disabled(VARIANT_BOOL v);

    [propget, id((0x80010000+76))]
    VARIANT_BOOL disabled();

    [propget, id((1000+4))]
    VARIANT_BOOL readOnly();

    [propget, id((1000+5))]
    IHTMLStyleSheetsCollection* imports();

    [propput, id((1000+6))]
    void href(BSTR v);

    [propget, id((1000+6))]
    BSTR href();

    [propget, id((1000+7))]
    BSTR type();

    [propget, id((1000+8))]
    BSTR id();

    [id((1000+9))]
    LONG addImport(
        [in] BSTR bstrURL,
        [defaultvalue(-1), in] LONG lIndex);

    [id((1000+10))]
    LONG addRule(
        [in] BSTR bstrSelector,
        [in] BSTR bstrStyle,
        [defaultvalue(-1), in] LONG lIndex);

    [id((1000+11))]
    void removeImport([in] LONG lIndex);

    [id((1000+12))]
    void removeRule([in] LONG lIndex);

    [propput, id((1000+13))]
    void media(BSTR v);

    [propget, id((1000+13))]
    BSTR media();

    [propput, id((1000+14))]
    void cssText(BSTR v);

    [propget, id((1000+14))]
    BSTR cssText();

    [propget, id((1000+15))]
    IHTMLStyleSheetRulesCollection* rules();

    [propget, id((1000+16))]
    IHTMLStyleSheetPagesCollection* pages();

    [id((1000+17))]
    LONG addPageRule(
        [in] BSTR bstrSelector,
        [in] BSTR bstrStyle,
        [defaultvalue(-1), in] LONG lIndex);
}

[
    noncreatable,
    uuid(3050f2e4-98b5-11cf-bb82-00aa00bdce0b)
]
coclass HTMLStyleSheet
{
    [default]           dispinterface DispHTMLStyleSheet;
                        interface IHTMLStyleSheet;
                        interface IHTMLStyleSheet2;
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050F37E-98B5-11CF-BB82-00AA00BDCE0B)
]
interface IHTMLStyleSheetsCollection : IDispatch
{
    [propget, id((1000+1))]
    HRESULT length([retval, out] LONG *p);

    [propget, id(DISPID_NEWENUM)]
    HRESULT _newEnum([retval, out] IUnknown **p);

    [id(DISPID_VALUE)]
    HRESULT item(
        [in] VARIANT *pvarIndex,
        [retval, out] VARIANT *pvarResult);
}




[
    hidden,
    uuid(3050f547-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLStyleSheetsCollection
{
properties:
methods:
    [propget, id((1000+1))]
    long length();

    [propget, id(DISPID_NEWENUM), hidden, restricted]
    IUnknown *_newEnum();

    [id(DISPID_VALUE)]
    VARIANT item([in] VARIANT *pvarIndex);

    [propget, id((0x80010000+500)+9), hidden]
    IDispatch *constructor();
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f205-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLLinkElement : IDispatch
{
    [propput, id(1000+5), displaybind, bindable]
    HRESULT href([in] BSTR v);

    [propget, id(1000+5), displaybind, bindable]
    HRESULT href([out, retval] BSTR *p);

    [propput, id(1000+6), displaybind, bindable]
    HRESULT rel([in] BSTR v);

    [propget, id(1000+6), displaybind, bindable]
    HRESULT rel([out, retval] BSTR *p);

    [propput, id(1000+7), displaybind, bindable]
    HRESULT rev([in] BSTR v);

    [propget, id(1000+7), displaybind, bindable]
    HRESULT rev([out, retval] BSTR *p);

    [propput, id(1000+8), displaybind, bindable]
    HRESULT type([in] BSTR v);

    [propget, id(1000+8), displaybind, bindable]
    HRESULT type([out, retval] BSTR *p);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+116))]
    HRESULT readyState([out, retval] BSTR *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]
    HRESULT onreadystatechange([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]
    HRESULT onreadystatechange([out, retval] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+32)), displaybind, bindable]
    HRESULT onload([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+32)), displaybind, bindable]
    HRESULT onload([out, retval] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+29)), displaybind, bindable]
    HRESULT onerror([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+29)), displaybind, bindable]
    HRESULT onerror([out, retval] VARIANT *p);

    [propget, id(1000+14)]
    HRESULT styleSheet([out, retval] IHTMLStyleSheet **p);

    [propput, id((0x80010000+76)), displaybind, bindable]
    HRESULT disabled([in] VARIANT_BOOL v);

    [propget, id((0x80010000+76)), displaybind, bindable]
    HRESULT disabled([out, retval] VARIANT_BOOL *p);

    [propput, id(1000+16), displaybind, bindable]
    HRESULT media([in] BSTR v);

    [propget, id(1000+16), displaybind, bindable]
    HRESULT media([out, retval] BSTR *p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f4e5-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLLinkElement2 : IDispatch
{
    [propput, id(1000+17), displaybind, bindable]
    HRESULT target([in] BSTR v);

    [propget, id(1000+17), displaybind, bindable]
    HRESULT target([out, retval] BSTR *p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f81e-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLLinkElement3 : IDispatch
{
    [propput, id(1000+18), displaybind, bindable]
    HRESULT charset([in] BSTR v);

    [propget, id(1000+18), displaybind, bindable]
    HRESULT charset([out, retval] BSTR *p);

    [propput, id(1000+19), displaybind, bindable]
    HRESULT hreflang([in] BSTR v);

    [propget, id(1000+19), displaybind, bindable]
    HRESULT hreflang([out, retval] BSTR *p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3051043a-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLLinkElement4 : IDispatch
{
    [propput, id((1000+150))]
    HRESULT href([in] BSTR v);

    [propget, id((1000+150))]
    HRESULT href([retval, out] BSTR * p);
}




[
    hidden,
    uuid(3050f524-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLLinkElement
{
properties:
methods:
    [id(((0x80010000+500)+1))]                               void setAttribute(                                                   [in] BSTR strAttributeName,                                      [in] VARIANT AttValue,                                           [defaultvalue(1), in] LONG lFlags);                               [id(((0x80010000+500)+2))]                               VARIANT getAttribute(                                                [in] BSTR strAttributeName,                                      [defaultvalue(0), in] LONG lFlags);                               [id(((0x80010000+500)+3))]                            VARIANT_BOOL removeAttribute(                                        [in] BSTR strAttributeName,                                      [defaultvalue(1), in] LONG lFlags);                               [propput, id((((0x80010000+500)+500)+1)), bindable]               void className(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1)), bindable]               BSTR className();                                                     [propput, id((((0x80010000+500)+500)+2)), bindable]                      void id(BSTR v);                                                      [propget, id((((0x80010000+500)+500)+2)), bindable]                      BSTR id();                                                            [propget, id((((0x80010000+500)+500)+4))]                           BSTR tagName();                                                       [propget, id((0x80010000+8))]                     IHTMLElement *parentElement();                                        [propget, id((0x80010000+74)), nonbrowsable]               IHTMLStyle *style();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     void onhelp(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     VARIANT onhelp();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    void onclick(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    VARIANT onclick();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] void ondblclick(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] VARIANT ondblclick();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  void onkeydown(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  VARIANT onkeydown();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    void onkeyup(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    VARIANT onkeyup();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] void onkeypress(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] VARIANT onkeypress();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] void onmouseout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] VARIANT onmouseout();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  void onmouseover(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  VARIANT onmouseover();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  void onmousemove(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  VARIANT onmousemove();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  void onmousedown(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  VARIANT onmousedown();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  void onmouseup(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  VARIANT onmouseup();                                                  [propget, id((((0x80010000+500)+500)+18))] IDispatch* document();    [propput, id((0x80010000+69)), displaybind, bindable]      void title(BSTR v);                                                   [propget, id((0x80010000+69)), displaybind, bindable]      BSTR title();                                                         [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   void language(BSTR v);                                                [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   BSTR language();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  void onselectstart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  VARIANT onselectstart();                                              [id((((0x80010000+500)+500)+19))]                             void scrollIntoView([optional, in] VARIANT varargStart);              [id((((0x80010000+500)+500)+20))]                                   VARIANT_BOOL contains([in] IHTMLElement* pChild);                     [propget, id((((0x80010000+500)+500)+24)), bindable]             LONG sourceIndex();                                                   [propget, id((((0x80010000+500)+500)+25))]                      VARIANT recordNumber();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              void lang(BSTR v);                                                    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              BSTR lang();                                                          [propget, id((((0x80010000+500)+500)+8))]                        LONG offsetLeft();                                                    [propget, id((((0x80010000+500)+500)+9))]                         LONG offsetTop();                                                     [propget, id((((0x80010000+500)+500)+10))]                       LONG offsetWidth();                                                   [propget, id((((0x80010000+500)+500)+11))]                      LONG offsetHeight();                                                  [propget, id((((0x80010000+500)+500)+12))]                      IHTMLElement* offsetParent();                                         [propput, id((((0x80010000+500)+500)+26))]                         void innerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+26))]                         BSTR innerHTML();                                                     [propput, id((((0x80010000+500)+500)+27))]                         void innerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+27))]                         BSTR innerText();                                                     [propput, id((((0x80010000+500)+500)+28))]                         void outerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+28))]                         BSTR outerHTML();                                                     [propput, id((((0x80010000+500)+500)+29))]                         void outerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+29))]                         BSTR outerText();                                                     [id((((0x80010000+500)+500)+30))]                         void insertAdjacentHTML(                                             [in] BSTR where,                                                 [in] BSTR html);                                                  [id((((0x80010000+500)+500)+31))]                         void insertAdjacentText(                                             [in] BSTR where,                                                 [in] BSTR text);                                                  [propget, id((((0x80010000+500)+500)+32))]                    IHTMLElement* parentTextEdit();                                       [propget, id((((0x80010000+500)+500)+34))]                        VARIANT_BOOL isTextEdit();                                            [id((((0x80010000+500)+500)+33))]                                      void click();                                                         [propget, id((((0x80010000+500)+500)+35))]                           IHTMLFiltersCollection* filters();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  void ondragstart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  VARIANT ondragstart();                                                [id((((0x80010000+500)+500)+36))]                                   BSTR toString();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  void onbeforeupdate(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  VARIANT onbeforeupdate();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  void onafterupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  VARIANT onafterupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  void onerrorupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  VARIANT onerrorupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  void onrowexit(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  VARIANT onrowexit();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  void onrowenter(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  VARIANT onrowenter();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  void ondatasetchanged(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  VARIANT ondatasetchanged();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  void ondataavailable(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  VARIANT ondataavailable();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  void ondatasetcomplete(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  VARIANT ondatasetcomplete();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  void onfilterchange(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  VARIANT onfilterchange();                                             [propget, id((((0x80010000+500)+500)+37))]                          IDispatch* children();                                                [propget, id((((0x80010000+500)+500)+38))]                               IDispatch* all();        [propget, id(((0x80010000+500)+500)+39)]                        BSTR scopeName();                                                     [id(((0x80010000+500)+500)+40)]                                void setCapture([defaultvalue(-1), in] VARIANT_BOOL containerCapture);   [id(((0x80010000+500)+500)+41)]                            void releaseCapture();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  void onlosecapture(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  VARIANT onlosecapture();                                              [id(((0x80010000+500)+500)+42)]                        BSTR componentFromPoint([in] LONG x,[in] LONG y);                     [id(((0x80010000+500)+500)+43)]                                  void doScroll([optional, in] VARIANT component);                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  void onscroll(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  VARIANT onscroll();                                                   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    void ondrag(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    VARIANT ondrag();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  void ondragend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  VARIANT ondragend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  void ondragenter(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  VARIANT ondragenter();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  void ondragover(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  VARIANT ondragover();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  void ondragleave(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  VARIANT ondragleave();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    void ondrop(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    VARIANT ondrop();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  void onbeforecut(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  VARIANT onbeforecut();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     void oncut(VARIANT v);                                                [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     VARIANT oncut();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  void onbeforecopy(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  VARIANT onbeforecopy();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    void oncopy(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    VARIANT oncopy();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  void onbeforepaste(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  VARIANT onbeforepaste();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   void onpaste(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   VARIANT onpaste();                                                    [propget, id(((0x80010000+500)+500)+7), nonbrowsable]       IHTMLCurrentStyle* currentStyle();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  void onpropertychange(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  VARIANT onpropertychange();                                           [id(((0x80010000+500)+500)+44)]                            IHTMLRectCollection* getClientRects();                                [id(((0x80010000+500)+500)+45)]                     IHTMLRect* getBoundingClientRect();                                   [id((0x80010000+500)+4)]                             void setExpression(                                                  [in] BSTR propname,                                              [in] BSTR expr,                                                  [defaultvalue(""), in] BSTR lang);                                [id((0x80010000+500)+5)]                             VARIANT getExpression([in] BSTR propname);                            [id((0x80010000+500)+6)]                          VARIANT_BOOL removeExpression([in] BSTR propname);                    [propput, id((0x80010000+15)), displaybind, bindable]  void tabIndex(short v);                                               [propget, id((0x80010000+15)), displaybind, bindable]  short tabIndex();                                                     [id((((0x80010000+500)+500)+1000))]                                     void focus();                                                         [propput, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] void accessKey(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] BSTR accessKey();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    void onblur(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    VARIANT onblur();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   void onfocus(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   VARIANT onfocus();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  void onresize(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  VARIANT onresize();                                                   [id((((0x80010000+500)+500)+1000)+2)]                                      void blur();                                                          [id((((0x80010000+500)+500)+1000)+17)]                                 void addFilter([in] IUnknown* pUnk);                                  [id((((0x80010000+500)+500)+1000)+18)]                              void removeFilter([in] IUnknown* pUnk);                               [propget, id((((0x80010000+500)+500)+1000)+19), displaybind, bindable]  LONG clientHeight();                                                  [propget, id((((0x80010000+500)+500)+1000)+20), displaybind, bindable]  LONG clientWidth();                                                   [propget, id((((0x80010000+500)+500)+1000)+21), displaybind, bindable]  LONG clientTop();                                                     [propget, id((((0x80010000+500)+500)+1000)+22), displaybind, bindable]  LONG clientLeft();                                                    [id((0x80010000+500)+7)]                               VARIANT_BOOL attachEvent(                                            [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [id((0x80010000+500)+8)]                               void detachEvent(                                                    [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+116))] VARIANT readyState();   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  void onreadystatechange(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  VARIANT onreadystatechange();                                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  void onrowsdelete(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  VARIANT onrowsdelete();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  void onrowsinserted(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  VARIANT onrowsinserted();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  void oncellchange(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  VARIANT oncellchange();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       void dir(BSTR v);                                                     [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       BSTR dir();                                                           [id(((0x80010000+500)+500)+56)]                        IDispatch* createControlRange();                                      [propget, id(((0x80010000+500)+500)+57), displaybind, bindable]  LONG scrollHeight();                                                  [propget, id(((0x80010000+500)+500)+58), displaybind, bindable]  LONG scrollWidth();                                                   [propput, id(((0x80010000+500)+500)+59), displaybind, bindable] void scrollTop(LONG v);                                               [propget, id(((0x80010000+500)+500)+59), displaybind, bindable] LONG scrollTop();                                                     [propput, id(((0x80010000+500)+500)+60), displaybind, bindable]  void scrollLeft(LONG v);                                              [propget, id(((0x80010000+500)+500)+60), displaybind, bindable]  LONG scrollLeft();                                                    [id(((0x80010000+500)+500)+62)]                           void clearAttributes();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  void oncontextmenu(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  VARIANT oncontextmenu();                                              [id(((0x80010000+500)+500)+69)]                     IHTMLElement* insertAdjacentElement(                                 [in] BSTR where,                                                 [in] IHTMLElement* insertedElement);                              [id(((0x80010000+500)+500)+65)]                              IHTMLElement* applyElement([in] IHTMLElement* apply,[in] BSTR where);   [id(((0x80010000+500)+500)+70)]                           BSTR getAdjacentText([in] BSTR where);                                [id(((0x80010000+500)+500)+71)]                       BSTR replaceAdjacentText([in] BSTR where,[in] BSTR newText);          [propget, id(((0x80010000+500)+500)+72)]                  VARIANT_BOOL canHaveChildren();                                       [id(((0x80010000+500)+500)+80)]                               LONG addBehavior([in] BSTR bstrUrl,[optional, in] VARIANT* pvarFactory);   [id(((0x80010000+500)+500)+81)]                            VARIANT_BOOL removeBehavior([in] LONG cookie);                        [propget, id(((0x80010000+500)+500)+64), nonbrowsable]       IHTMLStyle* runtimeStyle();                                           [propget, id(((0x80010000+500)+500)+82)]                     IDispatch* behaviorUrns();                                            [propput, id(((0x80010000+500)+500)+83)]                           void tagUrn(BSTR v);                                                  [propget, id(((0x80010000+500)+500)+83)]                           BSTR tagUrn();                                                        [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  void onbeforeeditfocus(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  VARIANT onbeforeeditfocus();                                          [propget, id(((0x80010000+500)+500)+84), hidden, restricted]  LONG readyStateValue();                                               [id(((0x80010000+500)+500)+85)]                      IHTMLElementCollection* getElementsByTagName([in] BSTR v);       [id(((0x80010000+500)+500)+96)]                           void mergeAttributes(                                                [in] IHTMLElement* mergeThis,                                [optional, in] VARIANT* pvarFlags);                           [propget, id(((0x80010000+500)+500)+97)]                      VARIANT_BOOL isMultiLine();                                           [propget, id(((0x80010000+500)+500)+98)]                      VARIANT_BOOL canHaveHTML();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  void onlayoutcomplete(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  VARIANT onlayoutcomplete();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    void onpage(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    VARIANT onpage();                                                     [propput, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  void inflateBlock(VARIANT_BOOL v);                                    [propget, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  VARIANT_BOOL inflateBlock();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  void onbeforedeactivate(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  VARIANT onbeforedeactivate();                                         [id(((0x80010000+500)+500)+101)]                                 void setActive();                                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  void contentEditable(BSTR v);                                         [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  BSTR contentEditable();                                               [propget, id(((0x80010000+500)+500)+102)]                VARIANT_BOOL isContentEditable();                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] void hideFocus(VARIANT_BOOL v);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] VARIANT_BOOL hideFocus();                                             [propput, id((0x80010000+76)), displaybind, bindable]  void disabled(VARIANT_BOOL v);                                        [propget, id((0x80010000+76)), displaybind, bindable]  VARIANT_BOOL disabled();                                              [propget, id(((0x80010000+500)+500)+105)]                       VARIANT_BOOL isDisabled();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    void onmove(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    VARIANT onmove();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  void oncontrolselect(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  VARIANT oncontrolselect();                                            [id(((0x80010000+500)+500)+106)]                                 VARIANT_BOOL fireEvent(                                              [in] BSTR bstrEventName,                                         [optional, in] VARIANT* pvarEventObject);                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  void onresizestart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  VARIANT onresizestart();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  void onresizeend(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  VARIANT onresizeend();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  void onmovestart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  VARIANT onmovestart();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] void onmoveend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] VARIANT onmoveend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  void onmouseenter(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  VARIANT onmouseenter();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  void onmouseleave(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  VARIANT onmouseleave();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  void onactivate(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  VARIANT onactivate();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  void ondeactivate(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  VARIANT ondeactivate();                                               [id(((0x80010000+500)+500)+107)]                                  VARIANT_BOOL dragDrop();                                              [propget, id(((0x80010000+500)+500)+108), hidden, restricted, nonbrowsable]  LONG glyphMode();       [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  void onmousewheel(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  VARIANT onmousewheel();                                               [id(((0x80010000+500)+500)+112)]                                 void normalize();                                                     [id(((0x80010000+500)+500)+109)]                          IHTMLDOMAttribute* getAttributeNode([in] BSTR bstrname);              [id(((0x80010000+500)+500)+110)]                          IHTMLDOMAttribute* setAttributeNode([in] IHTMLDOMAttribute* pattr);   [id(((0x80010000+500)+500)+111)]                       IHTMLDOMAttribute* removeAttributeNode([in] IHTMLDOMAttribute* pattr);   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  void onbeforeactivate(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  VARIANT onbeforeactivate();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] void onfocusin(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] VARIANT onfocusin();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  void onfocusout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  VARIANT onfocusout();       [propget, id(((0x80010000+500)+500)+54), hidden]   LONG uniqueNumber();                                          [propget, id(((0x80010000+500)+500)+55), hidden]       BSTR uniqueID();     [propget, id(((0x80010000+500)+500)+46)]                          LONG nodeType();                                                      [propget, id(((0x80010000+500)+500)+47)]                        IHTMLDOMNode* parentNode();                                           [id(((0x80010000+500)+500)+48)]                              VARIANT_BOOL hasChildNodes();                                         [propget, id(((0x80010000+500)+500)+49)]                        IDispatch* childNodes();                                              [propget, id(((0x80010000+500)+500)+50)]                        IDispatch* attributes();                                              [id(((0x80010000+500)+500)+51)]                               IHTMLDOMNode* insertBefore(                                          [in] IHTMLDOMNode* newChild,                                 [optional, in] VARIANT refChild);                             [id(((0x80010000+500)+500)+52)]                                IHTMLDOMNode* removeChild([in] IHTMLDOMNode* oldChild);               [id(((0x80010000+500)+500)+53)]                               IHTMLDOMNode* replaceChild(                                          [in] IHTMLDOMNode* newChild,                                     [in] IHTMLDOMNode* oldChild);                                     [id(((0x80010000+500)+500)+61)]                                  IHTMLDOMNode* cloneNode([in] VARIANT_BOOL fDeep);                     [id(((0x80010000+500)+500)+66)]                                 IHTMLDOMNode* removeNode([defaultvalue(0), in] VARIANT_BOOL fDeep);   [id(((0x80010000+500)+500)+68)]                                   IHTMLDOMNode* swapNode([in] IHTMLDOMNode* otherNode);                 [id(((0x80010000+500)+500)+67)]                                IHTMLDOMNode* replaceNode([in] IHTMLDOMNode* replacement);            [id(((0x80010000+500)+500)+73)]                                IHTMLDOMNode* appendChild([in] IHTMLDOMNode* newChild);               [propget, id(((0x80010000+500)+500)+74)]                          BSTR nodeName();                                                      [propput, id(((0x80010000+500)+500)+75)]                         void nodeValue(VARIANT v);                                            [propget, id(((0x80010000+500)+500)+75)]                         VARIANT nodeValue();                                                  [propget, id(((0x80010000+500)+500)+76)]                        IHTMLDOMNode* firstChild();                                           [propget, id(((0x80010000+500)+500)+77)]                         IHTMLDOMNode* lastChild();                                            [propget, id(((0x80010000+500)+500)+78)]                   IHTMLDOMNode* previousSibling();                                      [propget, id(((0x80010000+500)+500)+79)]                       IHTMLDOMNode* nextSibling();        [propget, id(((0x80010000+500)+500)+113)]    IDispatch *ownerDocument();         [id((((0x80010000+500)+500)+200))]                      IHTMLDOMAttribute2 *ie8_getAttributeNode([in] BSTR bstrname);         [id((((0x80010000+500)+500)+200)+1)]                      IHTMLDOMAttribute2 *ie8_setAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+2)]                   IHTMLDOMAttribute2 *ie8_removeAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+3)]                              VARIANT_BOOL hasAttribute([in] BSTR name);                            [propput, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      void role(BSTR v);                                                    [propget, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      BSTR role();                                                          [propput, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  void ariaBusy(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  BSTR ariaBusy();                                                      [propput, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  void ariaChecked(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  BSTR ariaChecked();                                                   [propput, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  void ariaDisabled(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  BSTR ariaDisabled();                                                  [propput, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  void ariaExpanded(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  BSTR ariaExpanded();                                                  [propput, id((((0x80010000+500)+500)+200)+9), displaybind, bindable] void ariaHaspopup(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+9), displaybind, bindable]  BSTR ariaHaspopup();                                                  [propput, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  void ariaHidden(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  BSTR ariaHidden();                                                    [propput, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  void ariaInvalid(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  BSTR ariaInvalid();                                                   [propput, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  void ariaMultiselectable(BSTR v);                                     [propget, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  BSTR ariaMultiselectable();                                           [propput, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  void ariaPressed(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  BSTR ariaPressed();                                                   [propput, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  void ariaReadonly(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  BSTR ariaReadonly();                                                  [propput, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  void ariaRequired(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  BSTR ariaRequired();                                                  [propput, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  void ariaSecret(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  BSTR ariaSecret();                                                    [propput, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  void ariaSelected(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  BSTR ariaSelected();                                                  [id((((0x80010000+500)+500)+200)+18)]                          VARIANT ie8_getAttribute([in] BSTR strAttributeName);                 [id((((0x80010000+500)+500)+200)+19)]                          void ie8_setAttribute([in] BSTR strAttributeName,[in] VARIANT AttributeValue);   [id((((0x80010000+500)+500)+200)+20)]                       VARIANT_BOOL ie8_removeAttribute([in] BSTR strAttributeName);         [propget, id((((0x80010000+500)+500)+200)+21)]                   IHTMLAttributeCollection3 *ie8_attributes();                          [propput, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  void ariaValuenow(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  BSTR ariaValuenow();                                                  [propput, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  void ariaPosinset(short v);                                           [propget, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  short ariaPosinset();                                                 [propput, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  void ariaSetsize(short v);                                            [propget, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  short ariaSetsize();                                                  [propput, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] void ariaLevel(short v);                                              [propget, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] short ariaLevel();                                                    [propput, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  void ariaValuemin(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  BSTR ariaValuemin();                                                  [propput, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  void ariaValuemax(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  BSTR ariaValuemax();                                                  [propput, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  void ariaControls(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  BSTR ariaControls();                                                  [propput, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  void ariaDescribedby(BSTR v);                                         [propget, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  BSTR ariaDescribedby();                                               [propput, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  void ariaFlowto(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  BSTR ariaFlowto();                                                    [propput, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  void ariaLabelledby(BSTR v);                                          [propget, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  BSTR ariaLabelledby();                                                [propput, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  void ariaActivedescendant(BSTR v);                                    [propget, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  BSTR ariaActivedescendant();                                          [propput, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  void ariaOwns(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  BSTR ariaOwns();                                                      [id((((0x80010000+500)+500)+200)+34)]                             VARIANT_BOOL hasAttributes();                                         [propput, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  void ariaLive(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  BSTR ariaLive();                                                      [propput, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  void ariaRelevant(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  BSTR ariaRelevant();       [propget, id((0x80010000+500)+9), hidden]        IDispatch *constructor();

    [propput, id(1000+5), displaybind, bindable]
    void href(BSTR v);

    [propget, id(1000+5), displaybind, bindable]
    BSTR href();

    [propput, id(1000+6), displaybind, bindable]
    void rel(BSTR v);

    [propget, id(1000+6), displaybind, bindable]
    BSTR rel();

    [propput, id(1000+7), displaybind, bindable]
    void rev(BSTR v);

    [propget, id(1000+7), displaybind, bindable]
    BSTR rev();

    [propput, id(1000+8), displaybind, bindable]
    void type(BSTR v);

    [propget, id(1000+8), displaybind, bindable]
    BSTR type();

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+32)), displaybind, bindable]
    void onload(VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+32)), displaybind, bindable]
    VARIANT onload();

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+29)), displaybind, bindable]
    void onerror(VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+29)), displaybind, bindable]
    VARIANT onerror();

    [propget, id(1000+14)]
    IHTMLStyleSheet *styleSheet();

    [propput, id(1000+16), displaybind, bindable]
    void media(BSTR v);

    [propget, id(1000+16), displaybind, bindable]
    BSTR media();

    [propput, id(1000+17), displaybind, bindable]
    void target(BSTR v);

    [propget, id(1000+17), displaybind, bindable]
    BSTR target();

    [propput, id(1000+18), displaybind, bindable]
    void charset(BSTR v);

    [propget, id(1000+18), displaybind, bindable]
    BSTR charset();

    [propput, id(1000+19), displaybind, bindable]
    void hreflang(BSTR v);

    [propget, id(1000+19), displaybind, bindable]
    BSTR hreflang();

    [propput, id((1000+150))]
    void ie8_href(BSTR v);

    [propget, id((1000+150))]
    BSTR ie8_href();
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f220-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLTxtRange : IDispatch
{
    [propget, id(1000+3)]
    HRESULT htmlText([retval, out] BSTR *p);

    [propput, id(1000+4)]
    HRESULT text([in] BSTR v);

    [propget, id(1000+4)]
    HRESULT text([retval, out] BSTR *p);

    [id(1000+6)]
    HRESULT parentElement([retval, out] IHTMLElement **parent);

    [id(1000+8)]
    HRESULT duplicate([retval, out] IHTMLTxtRange **Duplicate);

    [id(1000+10)]
    HRESULT inRange(
        [in] IHTMLTxtRange *Range,
        [retval, out] VARIANT_BOOL *InRange);

    [id(1000+11)]
    HRESULT isEqual(
        [in] IHTMLTxtRange *Range,
        [retval, out] VARIANT_BOOL *IsEqual);

    [id(1000+12)]
    HRESULT scrollIntoView([defaultvalue(-1), in] VARIANT_BOOL fStart);

    [id(1000+13)]
    HRESULT collapse([defaultvalue(-1), in] VARIANT_BOOL Start);

    [id(1000+14)]
    HRESULT expand(
        [in] BSTR Unit,
        [retval, out] VARIANT_BOOL *Success);

    [id(1000+15)]
    HRESULT move(
        [in] BSTR Unit,
        [defaultvalue(1), in] LONG Count,
        [retval, out] LONG *ActualCount);

    [id(1000+16)]
    HRESULT moveStart(
        [in] BSTR Unit,
        [defaultvalue(1), in] LONG Count,
        [retval, out] LONG *ActualCount);

    [id(1000+17)]
    HRESULT moveEnd(
        [in] BSTR Unit,
        [defaultvalue(1), in] LONG Count,
        [retval, out] LONG *ActualCount);

    [id(1000+24)]
    HRESULT select();

    [id(1000+26)]
    HRESULT pasteHTML([in] BSTR html);

    [id(1000+1)]
    HRESULT moveToElementText([in] IHTMLElement *element);

    [id(1000+25)]
    HRESULT setEndPoint(
        [in] BSTR how,
        [in] IHTMLTxtRange *SourceRange);

    [id(1000+18)]
    HRESULT compareEndPoints(
        [in] BSTR how,
        [in] IHTMLTxtRange *SourceRange,
        [retval, out] LONG *ret);

    [id(1000+19)]
    HRESULT findText(
        [in] BSTR String,
        [defaultvalue(1073741823), in] LONG count,
        [defaultvalue(0), in] LONG Flags,
        [retval, out] VARIANT_BOOL *Success);

    [id(1000+20)]
    HRESULT moveToPoint(
        [in] LONG x,
        [in] LONG y);

    [id(1000+21)]
    HRESULT getBookmark([retval, out] BSTR *Boolmark);

    [id(1000+9)]
    HRESULT moveToBookmark(
        [in] BSTR Bookmark,
        [retval, out] VARIANT_BOOL *Success);

    [id(1000+27)]
    HRESULT queryCommandSupported(
        [in] BSTR cmdID,
        [retval, out] VARIANT_BOOL *pfRet);

    [id(1000+28)]
    HRESULT queryCommandEnabled(
        [in] BSTR cmdID,
        [retval, out] VARIANT_BOOL *pfRet);

    [id(1000+29)]
    HRESULT queryCommandState(
        [in] BSTR cmdID,
        [retval, out] VARIANT_BOOL *pfRet);

    [id(1000+30)]
    HRESULT queryCommandIndeterm(
        [in] BSTR cmdID,
        [retval, out] VARIANT_BOOL *pfRet);

    [id(1000+31)]
    HRESULT queryCommandText(
        [in] BSTR cmdID,
        [retval, out] BSTR *pcmdText);

    [id(1000+32)]
    HRESULT queryCommandValue(
        [in] BSTR cmdID,
        [retval, out] VARIANT *pcmdValue);

    [id(1000+33)]
    HRESULT execCommand(
        [in] BSTR cmdID,
        [defaultvalue(0), in] VARIANT_BOOL showUI,
        [optional, in] VARIANT value,
        [retval, out] VARIANT_BOOL *pfRet);

    [id(1000+34)]
    HRESULT execCommandShowHelp(
        [in] BSTR cmdID,
        [retval, out] VARIANT_BOOL *pfRet);
}




[
    odl,
    oleautomation,
    dual,
    uuid(305104ae-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLDOMRange : IDispatch
{
    [propget, id(1000+1)]
    HRESULT startContainer([out, retval] IHTMLDOMNode **p);

    [propget, id(1000+2)]
    HRESULT startOffset([out, retval] long *p);

    [propget, id(1000+3)]
    HRESULT endContainer([out, retval] IHTMLDOMNode **p);

    [propget, id(1000+4)]
    HRESULT endOffset([out, retval] long *p);

    [propget, id(1000+5)]
    HRESULT collapsed([out, retval] VARIANT_BOOL *p);

    [propget, id(1000+6)]
    HRESULT commonAncestorContainer([out, retval] IHTMLDOMNode **p);

    [id(1000+7)]
    HRESULT setStart(
        [in] IDispatch *refNode,
        [in] long offset);

    [id(1000+8)] HRESULT
    setEnd(
        [in] IDispatch *refNode,
        [in] long offset);

    [id(1000+9)]
    HRESULT setStartBefore([in] IDispatch* refNode);

    [id(1000+10)]
    HRESULT setStartAfter([in] IDispatch *refNode);

    [id(1000+11)]
    HRESULT setEndBefore([in] IDispatch *refNode);

    [id(1000+12)]
    HRESULT setEndAfter([in] IDispatch *refNode);

    [id(1000+13)]
    HRESULT collapse([in] VARIANT_BOOL toStart);

    [id(1000+14)]
    HRESULT selectNode([in] IDispatch *refNode);

    [id(1000+15)]
    HRESULT selectNodeContents([in] IDispatch *refNode);

    [id(1000+16)]
    HRESULT compareBoundaryPoints(
        [in] short how,
        [in] IDispatch *sourceRange,
        [out, retval] long *compareResult);

    [id(1000+17)]
    HRESULT deleteContents();

    [id(1000+18)]
    HRESULT extractContents([out, retval] IDispatch **ppDocumentFragment);

    [id(1000+19)]
    HRESULT cloneContents([out, retval] IDispatch **ppDocumentFragment);

    [id(1000+20)]
    HRESULT insertNode([in] IDispatch *newNode);

    [id(1000+21)]
    HRESULT surroundContents([in] IDispatch *newParent);

    [id(1000+22)]
    HRESULT cloneRange([out, retval] IHTMLDOMRange **ppClonedRange);

    [id(1000+23)]
    HRESULT toString([out, retval] BSTR *pRangeString);

    [id(1000+24)]
    HRESULT detach();

    [id(1000+25)]
    HRESULT getClientRects([out, retval] IHTMLRectCollection **ppRectCol);

    [id(1000+26)]
    HRESULT getBoundingClientRect([out, retval] IHTMLRect **ppRect);
}

[
    noncreatable,
    uuid(3050f37f-98b5-11cf-bb82-00aa00bdce0b)
]
coclass HTMLStyleSheetsCollection
{
    [default]           interface IHTMLStyleSheetsCollection;
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050F1F7-98B5-11CF-BB82-00AA00BDCE0B)
]
interface IHTMLFormElement : IDispatch
{
    [propput, id((1000+1))]
    HRESULT action([in] BSTR v);

    [propget, id((1000+1))]
    HRESULT action([retval, out] BSTR *p);

    [propput, id((1000+2))]
    HRESULT dir([in] BSTR v);

    [propget, id((1000+2))]
    HRESULT dir([retval, out] BSTR *p);

    [propput, id((1000+3))]
    HRESULT encoding([in] BSTR v);

    [propget, id((1000+3))]
    HRESULT encoding([retval, out] BSTR *p);

    [propput, id((1000+4))]
    HRESULT method([in] BSTR v);

    [propget, id((1000+4))]
    HRESULT method([retval, out] BSTR *p);

    [propget, id((1000+5))]
    HRESULT elements([retval, out] IDispatch **p);

    [propput, id((1000+6))]
    HRESULT target([in] BSTR v);

    [propget, id((1000+6))]
    HRESULT target([retval, out] BSTR *p);

    [propput, id((0x80010000+0))]
    HRESULT name([in] BSTR v);

    [propget, id((0x80010000+0))]
    HRESULT name([retval, out] BSTR *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+11))]
    HRESULT onsubmit([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+11))]
    HRESULT onsubmit([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+12))]
    HRESULT onreset([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+12))]
    HRESULT onreset([retval, out] VARIANT *p);

    [id((1000+9))]
    HRESULT submit();

    [id((1000+10))]
    HRESULT reset();

    [propput, id((1000+500))]
    HRESULT length([in] LONG v);

    [propget, id((1000+500))]
    HRESULT length([retval, out] LONG *p);

    [propget, id(DISPID_NEWENUM)]
    HRESULT _newEnum([retval, out] IUnknown **p);

    [id(DISPID_VALUE)]
    HRESULT item(
        [optional, in] VARIANT name,
        [optional, in] VARIANT index,
        [retval, out] IDispatch **pdisp);

    [id(((1000+500)+2))]
    HRESULT tags(
        [in] VARIANT tagName,
        [retval, out] IDispatch **pdisp);
}




[
    hidden,
    uuid(3050F510-98B5-11CF-BB82-00AA00BDCE0B)
]
dispinterface DispHTMLFormElement
{
properties:
methods:
    [id(((0x80010000+500)+1))]                               void setAttribute(                                                   [in] BSTR strAttributeName,                                      [in] VARIANT AttValue,                                           [defaultvalue(1), in] LONG lFlags);                               [id(((0x80010000+500)+2))]                               VARIANT getAttribute(                                                [in] BSTR strAttributeName,                                      [defaultvalue(0), in] LONG lFlags);                               [id(((0x80010000+500)+3))]                            VARIANT_BOOL removeAttribute(                                        [in] BSTR strAttributeName,                                      [defaultvalue(1), in] LONG lFlags);                               [propput, id((((0x80010000+500)+500)+1)), bindable]               void className(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1)), bindable]               BSTR className();                                                     [propput, id((((0x80010000+500)+500)+2)), bindable]                      void id(BSTR v);                                                      [propget, id((((0x80010000+500)+500)+2)), bindable]                      BSTR id();                                                            [propget, id((((0x80010000+500)+500)+4))]                           BSTR tagName();                                                       [propget, id((0x80010000+8))]                     IHTMLElement *parentElement();                                        [propget, id((0x80010000+74)), nonbrowsable]               IHTMLStyle *style();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     void onhelp(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     VARIANT onhelp();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    void onclick(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    VARIANT onclick();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] void ondblclick(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] VARIANT ondblclick();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  void onkeydown(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  VARIANT onkeydown();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    void onkeyup(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    VARIANT onkeyup();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] void onkeypress(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] VARIANT onkeypress();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] void onmouseout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] VARIANT onmouseout();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  void onmouseover(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  VARIANT onmouseover();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  void onmousemove(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  VARIANT onmousemove();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  void onmousedown(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  VARIANT onmousedown();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  void onmouseup(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  VARIANT onmouseup();                                                  [propget, id((((0x80010000+500)+500)+18))] IDispatch* document();    [propput, id((0x80010000+69)), displaybind, bindable]      void title(BSTR v);                                                   [propget, id((0x80010000+69)), displaybind, bindable]      BSTR title();                                                         [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   void language(BSTR v);                                                [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   BSTR language();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  void onselectstart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  VARIANT onselectstart();                                              [id((((0x80010000+500)+500)+19))]                             void scrollIntoView([optional, in] VARIANT varargStart);              [id((((0x80010000+500)+500)+20))]                                   VARIANT_BOOL contains([in] IHTMLElement* pChild);                     [propget, id((((0x80010000+500)+500)+24)), bindable]             LONG sourceIndex();                                                   [propget, id((((0x80010000+500)+500)+25))]                      VARIANT recordNumber();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              void lang(BSTR v);                                                    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              BSTR lang();                                                          [propget, id((((0x80010000+500)+500)+8))]                        LONG offsetLeft();                                                    [propget, id((((0x80010000+500)+500)+9))]                         LONG offsetTop();                                                     [propget, id((((0x80010000+500)+500)+10))]                       LONG offsetWidth();                                                   [propget, id((((0x80010000+500)+500)+11))]                      LONG offsetHeight();                                                  [propget, id((((0x80010000+500)+500)+12))]                      IHTMLElement* offsetParent();                                         [propput, id((((0x80010000+500)+500)+26))]                         void innerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+26))]                         BSTR innerHTML();                                                     [propput, id((((0x80010000+500)+500)+27))]                         void innerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+27))]                         BSTR innerText();                                                     [propput, id((((0x80010000+500)+500)+28))]                         void outerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+28))]                         BSTR outerHTML();                                                     [propput, id((((0x80010000+500)+500)+29))]                         void outerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+29))]                         BSTR outerText();                                                     [id((((0x80010000+500)+500)+30))]                         void insertAdjacentHTML(                                             [in] BSTR where,                                                 [in] BSTR html);                                                  [id((((0x80010000+500)+500)+31))]                         void insertAdjacentText(                                             [in] BSTR where,                                                 [in] BSTR text);                                                  [propget, id((((0x80010000+500)+500)+32))]                    IHTMLElement* parentTextEdit();                                       [propget, id((((0x80010000+500)+500)+34))]                        VARIANT_BOOL isTextEdit();                                            [id((((0x80010000+500)+500)+33))]                                      void click();                                                         [propget, id((((0x80010000+500)+500)+35))]                           IHTMLFiltersCollection* filters();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  void ondragstart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  VARIANT ondragstart();                                                [id((((0x80010000+500)+500)+36))]                                   BSTR toString();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  void onbeforeupdate(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  VARIANT onbeforeupdate();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  void onafterupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  VARIANT onafterupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  void onerrorupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  VARIANT onerrorupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  void onrowexit(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  VARIANT onrowexit();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  void onrowenter(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  VARIANT onrowenter();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  void ondatasetchanged(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  VARIANT ondatasetchanged();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  void ondataavailable(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  VARIANT ondataavailable();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  void ondatasetcomplete(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  VARIANT ondatasetcomplete();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  void onfilterchange(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  VARIANT onfilterchange();                                             [propget, id((((0x80010000+500)+500)+37))]                          IDispatch* children();                                                [propget, id((((0x80010000+500)+500)+38))]                               IDispatch* all();        [propget, id(((0x80010000+500)+500)+39)]                        BSTR scopeName();                                                     [id(((0x80010000+500)+500)+40)]                                void setCapture([defaultvalue(-1), in] VARIANT_BOOL containerCapture);   [id(((0x80010000+500)+500)+41)]                            void releaseCapture();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  void onlosecapture(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  VARIANT onlosecapture();                                              [id(((0x80010000+500)+500)+42)]                        BSTR componentFromPoint([in] LONG x,[in] LONG y);                     [id(((0x80010000+500)+500)+43)]                                  void doScroll([optional, in] VARIANT component);                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  void onscroll(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  VARIANT onscroll();                                                   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    void ondrag(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    VARIANT ondrag();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  void ondragend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  VARIANT ondragend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  void ondragenter(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  VARIANT ondragenter();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  void ondragover(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  VARIANT ondragover();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  void ondragleave(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  VARIANT ondragleave();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    void ondrop(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    VARIANT ondrop();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  void onbeforecut(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  VARIANT onbeforecut();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     void oncut(VARIANT v);                                                [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     VARIANT oncut();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  void onbeforecopy(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  VARIANT onbeforecopy();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    void oncopy(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    VARIANT oncopy();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  void onbeforepaste(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  VARIANT onbeforepaste();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   void onpaste(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   VARIANT onpaste();                                                    [propget, id(((0x80010000+500)+500)+7), nonbrowsable]       IHTMLCurrentStyle* currentStyle();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  void onpropertychange(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  VARIANT onpropertychange();                                           [id(((0x80010000+500)+500)+44)]                            IHTMLRectCollection* getClientRects();                                [id(((0x80010000+500)+500)+45)]                     IHTMLRect* getBoundingClientRect();                                   [id((0x80010000+500)+4)]                             void setExpression(                                                  [in] BSTR propname,                                              [in] BSTR expr,                                                  [defaultvalue(""), in] BSTR lang);                                [id((0x80010000+500)+5)]                             VARIANT getExpression([in] BSTR propname);                            [id((0x80010000+500)+6)]                          VARIANT_BOOL removeExpression([in] BSTR propname);                    [propput, id((0x80010000+15)), displaybind, bindable]  void tabIndex(short v);                                               [propget, id((0x80010000+15)), displaybind, bindable]  short tabIndex();                                                     [id((((0x80010000+500)+500)+1000))]                                     void focus();                                                         [propput, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] void accessKey(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] BSTR accessKey();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    void onblur(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    VARIANT onblur();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   void onfocus(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   VARIANT onfocus();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  void onresize(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  VARIANT onresize();                                                   [id((((0x80010000+500)+500)+1000)+2)]                                      void blur();                                                          [id((((0x80010000+500)+500)+1000)+17)]                                 void addFilter([in] IUnknown* pUnk);                                  [id((((0x80010000+500)+500)+1000)+18)]                              void removeFilter([in] IUnknown* pUnk);                               [propget, id((((0x80010000+500)+500)+1000)+19), displaybind, bindable]  LONG clientHeight();                                                  [propget, id((((0x80010000+500)+500)+1000)+20), displaybind, bindable]  LONG clientWidth();                                                   [propget, id((((0x80010000+500)+500)+1000)+21), displaybind, bindable]  LONG clientTop();                                                     [propget, id((((0x80010000+500)+500)+1000)+22), displaybind, bindable]  LONG clientLeft();                                                    [id((0x80010000+500)+7)]                               VARIANT_BOOL attachEvent(                                            [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [id((0x80010000+500)+8)]                               void detachEvent(                                                    [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+116))] VARIANT readyState();   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  void onreadystatechange(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  VARIANT onreadystatechange();                                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  void onrowsdelete(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  VARIANT onrowsdelete();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  void onrowsinserted(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  VARIANT onrowsinserted();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  void oncellchange(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  VARIANT oncellchange();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       void dir(BSTR v);                                                     [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       BSTR dir();                                                           [id(((0x80010000+500)+500)+56)]                        IDispatch* createControlRange();                                      [propget, id(((0x80010000+500)+500)+57), displaybind, bindable]  LONG scrollHeight();                                                  [propget, id(((0x80010000+500)+500)+58), displaybind, bindable]  LONG scrollWidth();                                                   [propput, id(((0x80010000+500)+500)+59), displaybind, bindable] void scrollTop(LONG v);                                               [propget, id(((0x80010000+500)+500)+59), displaybind, bindable] LONG scrollTop();                                                     [propput, id(((0x80010000+500)+500)+60), displaybind, bindable]  void scrollLeft(LONG v);                                              [propget, id(((0x80010000+500)+500)+60), displaybind, bindable]  LONG scrollLeft();                                                    [id(((0x80010000+500)+500)+62)]                           void clearAttributes();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  void oncontextmenu(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  VARIANT oncontextmenu();                                              [id(((0x80010000+500)+500)+69)]                     IHTMLElement* insertAdjacentElement(                                 [in] BSTR where,                                                 [in] IHTMLElement* insertedElement);                              [id(((0x80010000+500)+500)+65)]                              IHTMLElement* applyElement([in] IHTMLElement* apply,[in] BSTR where);   [id(((0x80010000+500)+500)+70)]                           BSTR getAdjacentText([in] BSTR where);                                [id(((0x80010000+500)+500)+71)]                       BSTR replaceAdjacentText([in] BSTR where,[in] BSTR newText);          [propget, id(((0x80010000+500)+500)+72)]                  VARIANT_BOOL canHaveChildren();                                       [id(((0x80010000+500)+500)+80)]                               LONG addBehavior([in] BSTR bstrUrl,[optional, in] VARIANT* pvarFactory);   [id(((0x80010000+500)+500)+81)]                            VARIANT_BOOL removeBehavior([in] LONG cookie);                        [propget, id(((0x80010000+500)+500)+64), nonbrowsable]       IHTMLStyle* runtimeStyle();                                           [propget, id(((0x80010000+500)+500)+82)]                     IDispatch* behaviorUrns();                                            [propput, id(((0x80010000+500)+500)+83)]                           void tagUrn(BSTR v);                                                  [propget, id(((0x80010000+500)+500)+83)]                           BSTR tagUrn();                                                        [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  void onbeforeeditfocus(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  VARIANT onbeforeeditfocus();                                          [propget, id(((0x80010000+500)+500)+84), hidden, restricted]  LONG readyStateValue();                                               [id(((0x80010000+500)+500)+85)]                      IHTMLElementCollection* getElementsByTagName([in] BSTR v);       [id(((0x80010000+500)+500)+96)]                           void mergeAttributes(                                                [in] IHTMLElement* mergeThis,                                [optional, in] VARIANT* pvarFlags);                           [propget, id(((0x80010000+500)+500)+97)]                      VARIANT_BOOL isMultiLine();                                           [propget, id(((0x80010000+500)+500)+98)]                      VARIANT_BOOL canHaveHTML();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  void onlayoutcomplete(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  VARIANT onlayoutcomplete();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    void onpage(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    VARIANT onpage();                                                     [propput, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  void inflateBlock(VARIANT_BOOL v);                                    [propget, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  VARIANT_BOOL inflateBlock();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  void onbeforedeactivate(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  VARIANT onbeforedeactivate();                                         [id(((0x80010000+500)+500)+101)]                                 void setActive();                                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  void contentEditable(BSTR v);                                         [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  BSTR contentEditable();                                               [propget, id(((0x80010000+500)+500)+102)]                VARIANT_BOOL isContentEditable();                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] void hideFocus(VARIANT_BOOL v);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] VARIANT_BOOL hideFocus();                                             [propput, id((0x80010000+76)), displaybind, bindable]  void disabled(VARIANT_BOOL v);                                        [propget, id((0x80010000+76)), displaybind, bindable]  VARIANT_BOOL disabled();                                              [propget, id(((0x80010000+500)+500)+105)]                       VARIANT_BOOL isDisabled();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    void onmove(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    VARIANT onmove();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  void oncontrolselect(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  VARIANT oncontrolselect();                                            [id(((0x80010000+500)+500)+106)]                                 VARIANT_BOOL fireEvent(                                              [in] BSTR bstrEventName,                                         [optional, in] VARIANT* pvarEventObject);                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  void onresizestart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  VARIANT onresizestart();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  void onresizeend(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  VARIANT onresizeend();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  void onmovestart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  VARIANT onmovestart();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] void onmoveend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] VARIANT onmoveend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  void onmouseenter(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  VARIANT onmouseenter();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  void onmouseleave(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  VARIANT onmouseleave();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  void onactivate(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  VARIANT onactivate();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  void ondeactivate(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  VARIANT ondeactivate();                                               [id(((0x80010000+500)+500)+107)]                                  VARIANT_BOOL dragDrop();                                              [propget, id(((0x80010000+500)+500)+108), hidden, restricted, nonbrowsable]  LONG glyphMode();       [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  void onmousewheel(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  VARIANT onmousewheel();                                               [id(((0x80010000+500)+500)+112)]                                 void normalize();                                                     [id(((0x80010000+500)+500)+109)]                          IHTMLDOMAttribute* getAttributeNode([in] BSTR bstrname);              [id(((0x80010000+500)+500)+110)]                          IHTMLDOMAttribute* setAttributeNode([in] IHTMLDOMAttribute* pattr);   [id(((0x80010000+500)+500)+111)]                       IHTMLDOMAttribute* removeAttributeNode([in] IHTMLDOMAttribute* pattr);   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  void onbeforeactivate(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  VARIANT onbeforeactivate();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] void onfocusin(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] VARIANT onfocusin();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  void onfocusout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  VARIANT onfocusout();       [propget, id(((0x80010000+500)+500)+54), hidden]   LONG uniqueNumber();                                          [propget, id(((0x80010000+500)+500)+55), hidden]       BSTR uniqueID();     [propget, id(((0x80010000+500)+500)+46)]                          LONG nodeType();                                                      [propget, id(((0x80010000+500)+500)+47)]                        IHTMLDOMNode* parentNode();                                           [id(((0x80010000+500)+500)+48)]                              VARIANT_BOOL hasChildNodes();                                         [propget, id(((0x80010000+500)+500)+49)]                        IDispatch* childNodes();                                              [propget, id(((0x80010000+500)+500)+50)]                        IDispatch* attributes();                                              [id(((0x80010000+500)+500)+51)]                               IHTMLDOMNode* insertBefore(                                          [in] IHTMLDOMNode* newChild,                                 [optional, in] VARIANT refChild);                             [id(((0x80010000+500)+500)+52)]                                IHTMLDOMNode* removeChild([in] IHTMLDOMNode* oldChild);               [id(((0x80010000+500)+500)+53)]                               IHTMLDOMNode* replaceChild(                                          [in] IHTMLDOMNode* newChild,                                     [in] IHTMLDOMNode* oldChild);                                     [id(((0x80010000+500)+500)+61)]                                  IHTMLDOMNode* cloneNode([in] VARIANT_BOOL fDeep);                     [id(((0x80010000+500)+500)+66)]                                 IHTMLDOMNode* removeNode([defaultvalue(0), in] VARIANT_BOOL fDeep);   [id(((0x80010000+500)+500)+68)]                                   IHTMLDOMNode* swapNode([in] IHTMLDOMNode* otherNode);                 [id(((0x80010000+500)+500)+67)]                                IHTMLDOMNode* replaceNode([in] IHTMLDOMNode* replacement);            [id(((0x80010000+500)+500)+73)]                                IHTMLDOMNode* appendChild([in] IHTMLDOMNode* newChild);               [propget, id(((0x80010000+500)+500)+74)]                          BSTR nodeName();                                                      [propput, id(((0x80010000+500)+500)+75)]                         void nodeValue(VARIANT v);                                            [propget, id(((0x80010000+500)+500)+75)]                         VARIANT nodeValue();                                                  [propget, id(((0x80010000+500)+500)+76)]                        IHTMLDOMNode* firstChild();                                           [propget, id(((0x80010000+500)+500)+77)]                         IHTMLDOMNode* lastChild();                                            [propget, id(((0x80010000+500)+500)+78)]                   IHTMLDOMNode* previousSibling();                                      [propget, id(((0x80010000+500)+500)+79)]                       IHTMLDOMNode* nextSibling();        [propget, id(((0x80010000+500)+500)+113)]    IDispatch *ownerDocument();         [propput, id(((0x80010000+500)+500)+21)]       void dataFld(BSTR v);                                 [propget, id(((0x80010000+500)+500)+21)]       BSTR dataFld();                                       [propput, id(((0x80010000+500)+500)+22)]       void dataSrc(BSTR v);                                 [propget, id(((0x80010000+500)+500)+22)]       BSTR dataSrc();                                       [propput, id(((0x80010000+500)+500)+23)]  void dataFormatAs(BSTR v);                            [propget, id(((0x80010000+500)+500)+23)]  BSTR dataFormatAs();    [id((((0x80010000+500)+500)+200))]                      IHTMLDOMAttribute2 *ie8_getAttributeNode([in] BSTR bstrname);         [id((((0x80010000+500)+500)+200)+1)]                      IHTMLDOMAttribute2 *ie8_setAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+2)]                   IHTMLDOMAttribute2 *ie8_removeAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+3)]                              VARIANT_BOOL hasAttribute([in] BSTR name);                            [propput, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      void role(BSTR v);                                                    [propget, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      BSTR role();                                                          [propput, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  void ariaBusy(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  BSTR ariaBusy();                                                      [propput, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  void ariaChecked(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  BSTR ariaChecked();                                                   [propput, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  void ariaDisabled(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  BSTR ariaDisabled();                                                  [propput, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  void ariaExpanded(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  BSTR ariaExpanded();                                                  [propput, id((((0x80010000+500)+500)+200)+9), displaybind, bindable] void ariaHaspopup(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+9), displaybind, bindable]  BSTR ariaHaspopup();                                                  [propput, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  void ariaHidden(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  BSTR ariaHidden();                                                    [propput, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  void ariaInvalid(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  BSTR ariaInvalid();                                                   [propput, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  void ariaMultiselectable(BSTR v);                                     [propget, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  BSTR ariaMultiselectable();                                           [propput, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  void ariaPressed(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  BSTR ariaPressed();                                                   [propput, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  void ariaReadonly(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  BSTR ariaReadonly();                                                  [propput, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  void ariaRequired(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  BSTR ariaRequired();                                                  [propput, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  void ariaSecret(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  BSTR ariaSecret();                                                    [propput, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  void ariaSelected(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  BSTR ariaSelected();                                                  [id((((0x80010000+500)+500)+200)+18)]                          VARIANT ie8_getAttribute([in] BSTR strAttributeName);                 [id((((0x80010000+500)+500)+200)+19)]                          void ie8_setAttribute([in] BSTR strAttributeName,[in] VARIANT AttributeValue);   [id((((0x80010000+500)+500)+200)+20)]                       VARIANT_BOOL ie8_removeAttribute([in] BSTR strAttributeName);         [propget, id((((0x80010000+500)+500)+200)+21)]                   IHTMLAttributeCollection3 *ie8_attributes();                          [propput, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  void ariaValuenow(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  BSTR ariaValuenow();                                                  [propput, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  void ariaPosinset(short v);                                           [propget, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  short ariaPosinset();                                                 [propput, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  void ariaSetsize(short v);                                            [propget, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  short ariaSetsize();                                                  [propput, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] void ariaLevel(short v);                                              [propget, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] short ariaLevel();                                                    [propput, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  void ariaValuemin(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  BSTR ariaValuemin();                                                  [propput, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  void ariaValuemax(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  BSTR ariaValuemax();                                                  [propput, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  void ariaControls(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  BSTR ariaControls();                                                  [propput, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  void ariaDescribedby(BSTR v);                                         [propget, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  BSTR ariaDescribedby();                                               [propput, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  void ariaFlowto(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  BSTR ariaFlowto();                                                    [propput, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  void ariaLabelledby(BSTR v);                                          [propget, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  BSTR ariaLabelledby();                                                [propput, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  void ariaActivedescendant(BSTR v);                                    [propget, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  BSTR ariaActivedescendant();                                          [propput, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  void ariaOwns(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  BSTR ariaOwns();                                                      [id((((0x80010000+500)+500)+200)+34)]                             VARIANT_BOOL hasAttributes();                                         [propput, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  void ariaLive(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  BSTR ariaLive();                                                      [propput, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  void ariaRelevant(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  BSTR ariaRelevant();       [id(((0x80010000+500)+500)+114)]                  IHTMLElement *querySelector([in] BSTR v);                     [id(((0x80010000+500)+500)+115)]               IHTMLDOMChildrenCollection *querySelectorAll([in] BSTR v);    [propget, id((0x80010000+500)+9), hidden]        IDispatch *constructor();

    [propput, id((1000+1))]
    void action(BSTR v);

    [propget, id((1000+1))]
    BSTR action();

    [propput, id((1000+3))]
    void encoding(BSTR v);

    [propget, id((1000+3))]
    BSTR encoding();

    [propput, id((1000+4))]
    void method(BSTR v);

    [propget, id((1000+4))]
    BSTR method();

    [propget, id((1000+5))]
    IDispatch *elements();

    [propput, id((1000+6))]
    void target(BSTR v);

    [propget, id((1000+6))]
    BSTR target();

    [propput, id((0x80010000+0))]
    void name(BSTR v);

    [propget, id((0x80010000+0))]
    BSTR name();

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+11))]
    void onsubmit(VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+11))]
    VARIANT onsubmit();

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+12))]
    void onreset(VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+12))]
    VARIANT onreset();

    [id((1000+9))]
    void submit();

    [id((1000+10))]
    void reset();

    [propput, id((1000+500))]
    void length(long v);

    [propget, id((1000+500))]
    long length();

    [propget, id(DISPID_NEWENUM), hidden, restricted]
    IUnknown *_newEnum();

    [id(DISPID_VALUE)]
    IDispatch *item(VARIANT name, VARIANT index);

    [id(((1000+500)+2))]
    IDispatch *tags(VARIANT tagName);
}

[
    hidden,
    uuid(3050F364-98B5-11CF-BB82-00AA00BDCE0B)
]
dispinterface HTMLFormElementEvents
{
properties:
methods:
    [id((0x80010000+10))]
    VARIANT_BOOL onhelp();

    [id((-600))]
    VARIANT_BOOL onclick();

    [id((-601))]
    VARIANT_BOOL ondblclick();

    [id((-603))]
    VARIANT_BOOL onkeypress();

    [id((-602))]
    void onkeydown();

    [id((-604))]
    void onkeyup();

    [id((0x80010000+9))]
    void onmouseout();

    [id((0x80010000+8))]
    void onmouseover();

    [id((-606))]
    void onmousemove();

    [id((-605))]
    void onmousedown();

    [id((-607))]
    void onmouseup();

    [id((0x80010000+12))]
    VARIANT_BOOL onselectstart();

    [id((0x80010000+17))]
    void onfilterchange();

    [id((0x80010000+11))]
    VARIANT_BOOL ondragstart();

    [id((0x80010000+4))]
    VARIANT_BOOL onbeforeupdate();

    [id((0x80010000+5))]
    void onafterupdate();

    [id((0x80010000+13))]
    VARIANT_BOOL onerrorupdate();

    [id((0x80010000+6))]
    VARIANT_BOOL onrowexit();

    [id((0x80010000+7))]
    void onrowenter();

    [id((0x80010000+14))]
    void ondatasetchanged();

    [id((0x80010000+15))]
    void ondataavailable();

    [id((0x80010000+16))]
    void ondatasetcomplete();

    [id((0x80010000+18))]
    void onlosecapture();

    [id((0x80010000+19))]
    void onpropertychange();

    [id((1000+14))]
    void onscroll();

    [id((0x80010000+1))]
    void onfocus();

    [id((0x80010000+0))]
    void onblur();

    [id((1000+16))]
    void onresize();

    [id((0x80010000+20))]
    VARIANT_BOOL ondrag();

    [id((0x80010000+21))]
    void ondragend();

    [id((0x80010000+22))]
    VARIANT_BOOL ondragenter();

    [id((0x80010000+23))]
    VARIANT_BOOL ondragover();

    [id((0x80010000+24))]
    void ondragleave();

    [id((0x80010000+25))]
    VARIANT_BOOL ondrop();

    [id((0x80010000+29))]
    VARIANT_BOOL onbeforecut();

    [id((0x80010000+26))]
    VARIANT_BOOL oncut();

    [id((0x80010000+30))]
    VARIANT_BOOL onbeforecopy();

    [id((0x80010000+27))]
    VARIANT_BOOL oncopy();

    [id((0x80010000+31))]
    VARIANT_BOOL onbeforepaste();

    [id((0x80010000+28))]
    VARIANT_BOOL onpaste();

    [id((1000+23))]
    VARIANT_BOOL oncontextmenu();

    [id((0x80010000+32))]
    void onrowsdelete();

    [id((0x80010000+33))]
    void onrowsinserted();

    [id((0x80010000+34))]
    void oncellchange();

    [id((-609))]
    void onreadystatechange();

    [id((1000+27))]
    void onbeforeeditfocus();

    [id((1000+30))]
    void onlayoutcomplete();

    [id((1000+31))]
    void onpage();

    [id((1000+34))]
    VARIANT_BOOL onbeforedeactivate();

    [id((1000+47))]
    VARIANT_BOOL onbeforeactivate();

    [id((1000+35))]
    void onmove();

    [id((1000+36))]
    VARIANT_BOOL oncontrolselect();

    [id((1000+38))]
    VARIANT_BOOL onmovestart();

    [id((1000+39))]
    void onmoveend();

    [id((1000+40))]
    VARIANT_BOOL onresizestart();

    [id((1000+41))]
    void onresizeend();

    [id((1000+42))]
    void onmouseenter();

    [id((1000+43))]
    void onmouseleave();

    [id((1000+33))]
    VARIANT_BOOL onmousewheel();

    [id((1000+44))]
    void onactivate();

    [id((1000+45))]
    void ondeactivate();

    [id((1000+48))]
    void onfocusin();

    [id((1000+49))]
    void onfocusout();

    [id((1000+7))]
    VARIANT_BOOL onsubmit();

    [id((1000+15))]
    VARIANT_BOOL onreset();
}

interface IHTMLEventObj;

[
    hidden,
    uuid(3050F614-98B5-11CF-BB82-00AA00BDCE0B)
]
dispinterface HTMLFormElementEvents2
{
properties:
methods:
    [id((0x80010000+10))]
    VARIANT_BOOL onhelp([in] IHTMLEventObj* pEvtObj);

    [id((-600))]
    VARIANT_BOOL onclick([in] IHTMLEventObj* pEvtObj);

    [id((-601))]
    VARIANT_BOOL ondblclick([in] IHTMLEventObj* pEvtObj);

    [id((-603))]
    VARIANT_BOOL onkeypress([in] IHTMLEventObj* pEvtObj);

    [id((-602))]
    void onkeydown([in] IHTMLEventObj* pEvtObj);

    [id((-604))]
    void onkeyup([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+9))]
    void onmouseout([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+8))]
    void onmouseover([in] IHTMLEventObj* pEvtObj);

    [id((-606))]
    void onmousemove([in] IHTMLEventObj* pEvtObj);

    [id((-605))]
    void onmousedown([in] IHTMLEventObj* pEvtObj);

    [id((-607))]
    void onmouseup([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+12))]
    VARIANT_BOOL onselectstart([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+17))]
    void onfilterchange([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+11))]
    VARIANT_BOOL ondragstart([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+4))]
    VARIANT_BOOL onbeforeupdate([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+5))]
    void onafterupdate([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+13))]
    VARIANT_BOOL onerrorupdate([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+6))]
    VARIANT_BOOL onrowexit([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+7))]
    void onrowenter([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+14))]
    void ondatasetchanged([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+15))]
    void ondataavailable([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+16))]
    void ondatasetcomplete([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+18))]
    void onlosecapture([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+19))]
    void onpropertychange([in] IHTMLEventObj* pEvtObj);

    [id((1000+14))]
    void onscroll([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+1))]
    void onfocus([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+0))]
    void onblur([in] IHTMLEventObj* pEvtObj);

    [id((1000+16))]
    void onresize([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+20))]
    VARIANT_BOOL ondrag([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+21))]
    void ondragend([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+22))]
    VARIANT_BOOL ondragenter([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+23))]
    VARIANT_BOOL ondragover([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+24))]
    void ondragleave([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+25))]
    VARIANT_BOOL ondrop([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+29))]
    VARIANT_BOOL onbeforecut([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+26))]
    VARIANT_BOOL oncut([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+30))]
    VARIANT_BOOL onbeforecopy([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+27))]
    VARIANT_BOOL oncopy([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+31))]
    VARIANT_BOOL onbeforepaste([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+28))]
    VARIANT_BOOL onpaste([in] IHTMLEventObj* pEvtObj);

    [id((1000+23))]
    VARIANT_BOOL oncontextmenu([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+32))]
    void onrowsdelete([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+33))]
    void onrowsinserted([in] IHTMLEventObj* pEvtObj);

    [id((0x80010000+34))]
    void oncellchange([in] IHTMLEventObj* pEvtObj);

    [id((-609))]
    void onreadystatechange([in] IHTMLEventObj* pEvtObj);

    [id((1000+30))]
    void onlayoutcomplete([in] IHTMLEventObj* pEvtObj);

    [id((1000+31))]
    void onpage([in] IHTMLEventObj* pEvtObj);

    [id((1000+42))]
    void onmouseenter([in] IHTMLEventObj* pEvtObj);

    [id((1000+43))]
    void onmouseleave([in] IHTMLEventObj* pEvtObj);

    [id((1000+44))]
    void onactivate([in] IHTMLEventObj* pEvtObj);

    [id((1000+45))]
    void ondeactivate([in] IHTMLEventObj* pEvtObj);

    [id((1000+34))]
    VARIANT_BOOL onbeforedeactivate([in] IHTMLEventObj* pEvtObj);

    [id((1000+47))]
    VARIANT_BOOL onbeforeactivate([in] IHTMLEventObj* pEvtObj);

    [id((1000+48))]
    void onfocusin([in] IHTMLEventObj* pEvtObj);

    [id((1000+49))]
    void onfocusout([in] IHTMLEventObj* pEvtObj);

    [id((1000+35))]
    void onmove([in] IHTMLEventObj* pEvtObj);

    [id((1000+36))]
    VARIANT_BOOL oncontrolselect([in] IHTMLEventObj* pEvtObj);

    [id((1000+38))]
    VARIANT_BOOL onmovestart([in] IHTMLEventObj* pEvtObj);

    [id((1000+39))]
    void onmoveend([in] IHTMLEventObj* pEvtObj);

    [id((1000+40))]
    VARIANT_BOOL onresizestart([in] IHTMLEventObj* pEvtObj);

    [id((1000+41))]
    void onresizeend([in] IHTMLEventObj* pEvtObj);

    [id((1000+33))]
    VARIANT_BOOL onmousewheel([in] IHTMLEventObj* pEvtObj);

    [id((1000+7))]
    VARIANT_BOOL onsubmit([in] IHTMLEventObj* pEvtObj);

    [id((1000+15))]
    VARIANT_BOOL onreset([in] IHTMLEventObj* pEvtObj);
}

[
    noncreatable,
    uuid(3050F251-98B5-11CF-BB82-00AA00BDCE0B)
]
coclass HTMLFormElement
{
    [default]           dispinterface DispHTMLFormElement;
    [source, default]   dispinterface HTMLFormElementEvents;
    [source]            dispinterface HTMLFormElementEvents2;
                        interface IHTMLElement;
                        interface IHTMLElement2;
                        interface IHTMLElement3;
                        interface IHTMLElement4;
                        interface IHTMLUniqueName;
                        interface IHTMLDOMNode;
                        interface IHTMLDOMNode2;
                        interface IHTMLDOMConstructor;
                        interface IHTMLFormElement;
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f230-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLTextContainer : IDispatch
{
    [id(1000+1)]
    HRESULT createControlRange([retval, out] IDispatch **range);

    [propget, id(1000+2), displaybind, bindable]
    HRESULT scrollHeight([retval, out] LONG *p);

    [propget, id(1000+3), displaybind, bindable]
    HRESULT scrollWidth([retval, out] LONG *p);

    [propput, id(1000+4), displaybind, bindable]
    HRESULT scrollTop([in] LONG v);

    [propget, id(1000+4), displaybind, bindable]
    HRESULT scrollTop([retval, out] LONG *p);

    [propput, id(1000+5), displaybind, bindable]
    HRESULT scrollLeft([in] LONG v);

    [propget, id(1000+5), displaybind, bindable]
    HRESULT scrollLeft([retval, out] LONG *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]
    HRESULT onscroll([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]
    HRESULT onscroll([retval, out] VARIANT *p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050F240-98B5-11CF-BB82-00AA00BDCE0B)
]
interface IHTMLImgElement : IDispatch
{
    [propput, id(((1000+1000)+2))]
    HRESULT isMap([in] VARIANT_BOOL v);

    [propget, id(((1000+1000)+2))]
    HRESULT isMap([retval, out] VARIANT_BOOL *p);

    [propput, id(((1000+1000)+8))]
    HRESULT useMap([in] BSTR v);

    [propget, id(((1000+1000)+8))]
    HRESULT useMap([retval, out] BSTR *p);

    [propget, id(((1000+1000)+10))]
    HRESULT mimeType([retval, out] BSTR *p);

    [propget, id(((1000+1000)+11))]
    HRESULT fileSize([retval, out] BSTR *p);

    [propget, id(((1000+1000)+12))]
    HRESULT fileCreatedDate([retval, out] BSTR *p);

    [propget, id(((1000+1000)+13))]
    HRESULT fileModifiedDate([retval, out] BSTR *p);

    [propget, id(((1000+1000)+14))]
    HRESULT fileUpdatedDate([retval, out] BSTR *p);

    [propget, id(((1000+1000)+15))]
    HRESULT protocol([retval, out] BSTR *p);

    [propget, id(((1000+1000)+16))]
    HRESULT href([retval, out] BSTR *p);

    [propget, id(((1000+1000)+17))]
    HRESULT nameProp([retval, out] BSTR *p);

    [propput, id((1000+4))]
    HRESULT border([in] VARIANT v);

    [propget, id((1000+4))]
    HRESULT border([retval, out] VARIANT *p);

    [propput, id((1000+5))]
    HRESULT vspace([in] LONG v);

    [propget, id((1000+5))]
    HRESULT vspace([retval, out] LONG *p);

    [propput, id((1000+6))]
    HRESULT hspace([in] LONG v);

    [propget, id((1000+6))]
    HRESULT hspace([retval, out] LONG *p);

    [propput, id((1000+2))]
    HRESULT alt([in] BSTR v);

    [propget, id((1000+2))]
    HRESULT alt([retval, out] BSTR *p);

    [propput, id((1000+3))]
    HRESULT src([in] BSTR v);

    [propget, id((1000+3))]
    HRESULT src([retval, out] BSTR *p);

    [propput, id((1000+7))]
    HRESULT lowsrc([in] BSTR v);

    [propget, id((1000+7))]
    HRESULT lowsrc([retval, out] BSTR *p);

    [propput, id((1000+8))]
    HRESULT vrml([in] BSTR v);

    [propget, id((1000+8))]
    HRESULT vrml([retval, out] BSTR *p);

    [propput, id((1000+9))]
    HRESULT dynsrc([in] BSTR v);

    [propget, id((1000+9))]
    HRESULT dynsrc([retval, out] BSTR *p);

    [propget, id((1000+12))]
    HRESULT readyState([retval, out] BSTR *p);

    [propget, id((1000+10))]
    HRESULT complete([retval, out] VARIANT_BOOL *p);

    [propput, id((1000+11))]
    HRESULT loop([in] VARIANT v);

    [propget, id((1000+11))]
    HRESULT loop([retval, out] VARIANT *p);

    [propput, id((0x80010000+73))]
    HRESULT align([in] BSTR v);

    [propget, id((0x80010000+73))]
    HRESULT align([retval, out] BSTR *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+32))]
    HRESULT onload([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+32))]
    HRESULT onload([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+29))]
    HRESULT onerror([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+29))]
    HRESULT onerror([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+28))]
    HRESULT onabort([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+28))]
    HRESULT onabort([retval, out] VARIANT *p);

    [propput, id((0x80010000+0))]
    HRESULT name([in] BSTR v);

    [propget, id((0x80010000+0))]
    HRESULT name([retval, out] BSTR *p);

    [propput, id((0x80010000+5))]
    HRESULT width([in] LONG v);

    [propget, id((0x80010000+5))]
    HRESULT width([retval, out] LONG *p);

    [propput, id((0x80010000+6))]
    HRESULT height([in] LONG v);

    [propget, id((0x80010000+6))]
    HRESULT height([retval, out] LONG *p);

    [propput, id(1000+13)]
    HRESULT start([in] BSTR v);

    [propget, id(1000+13)]
    HRESULT start([retval, out] BSTR *p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050F38E-98B5-11CF-BB82-00AA00BDCE0B)
]
interface IHTMLImageElementFactory : IDispatch
{
    [id(DISPID_VALUE)]
    HRESULT create(
        [optional, in] VARIANT width,
        [optional, in] VARIANT height,
        [retval, out]  IHTMLImgElement **elem);
}




[
    hidden,
    uuid(3050f51c-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLImg
{
properties:
methods:
    [id(((0x80010000+500)+1))]                               void setAttribute(                                                   [in] BSTR strAttributeName,                                      [in] VARIANT AttValue,                                           [defaultvalue(1), in] LONG lFlags);                               [id(((0x80010000+500)+2))]                               VARIANT getAttribute(                                                [in] BSTR strAttributeName,                                      [defaultvalue(0), in] LONG lFlags);                               [id(((0x80010000+500)+3))]                            VARIANT_BOOL removeAttribute(                                        [in] BSTR strAttributeName,                                      [defaultvalue(1), in] LONG lFlags);                               [propput, id((((0x80010000+500)+500)+1)), bindable]               void className(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1)), bindable]               BSTR className();                                                     [propput, id((((0x80010000+500)+500)+2)), bindable]                      void id(BSTR v);                                                      [propget, id((((0x80010000+500)+500)+2)), bindable]                      BSTR id();                                                            [propget, id((((0x80010000+500)+500)+4))]                           BSTR tagName();                                                       [propget, id((0x80010000+8))]                     IHTMLElement *parentElement();                                        [propget, id((0x80010000+74)), nonbrowsable]               IHTMLStyle *style();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     void onhelp(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     VARIANT onhelp();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    void onclick(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    VARIANT onclick();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] void ondblclick(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] VARIANT ondblclick();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  void onkeydown(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  VARIANT onkeydown();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    void onkeyup(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    VARIANT onkeyup();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] void onkeypress(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] VARIANT onkeypress();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] void onmouseout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] VARIANT onmouseout();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  void onmouseover(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  VARIANT onmouseover();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  void onmousemove(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  VARIANT onmousemove();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  void onmousedown(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  VARIANT onmousedown();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  void onmouseup(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  VARIANT onmouseup();                                                  [propget, id((((0x80010000+500)+500)+18))] IDispatch* document();    [propput, id((0x80010000+69)), displaybind, bindable]      void title(BSTR v);                                                   [propget, id((0x80010000+69)), displaybind, bindable]      BSTR title();                                                         [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   void language(BSTR v);                                                [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   BSTR language();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  void onselectstart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  VARIANT onselectstart();                                              [id((((0x80010000+500)+500)+19))]                             void scrollIntoView([optional, in] VARIANT varargStart);              [id((((0x80010000+500)+500)+20))]                                   VARIANT_BOOL contains([in] IHTMLElement* pChild);                     [propget, id((((0x80010000+500)+500)+24)), bindable]             LONG sourceIndex();                                                   [propget, id((((0x80010000+500)+500)+25))]                      VARIANT recordNumber();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              void lang(BSTR v);                                                    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              BSTR lang();                                                          [propget, id((((0x80010000+500)+500)+8))]                        LONG offsetLeft();                                                    [propget, id((((0x80010000+500)+500)+9))]                         LONG offsetTop();                                                     [propget, id((((0x80010000+500)+500)+10))]                       LONG offsetWidth();                                                   [propget, id((((0x80010000+500)+500)+11))]                      LONG offsetHeight();                                                  [propget, id((((0x80010000+500)+500)+12))]                      IHTMLElement* offsetParent();                                         [propput, id((((0x80010000+500)+500)+26))]                         void innerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+26))]                         BSTR innerHTML();                                                     [propput, id((((0x80010000+500)+500)+27))]                         void innerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+27))]                         BSTR innerText();                                                     [propput, id((((0x80010000+500)+500)+28))]                         void outerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+28))]                         BSTR outerHTML();                                                     [propput, id((((0x80010000+500)+500)+29))]                         void outerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+29))]                         BSTR outerText();                                                     [id((((0x80010000+500)+500)+30))]                         void insertAdjacentHTML(                                             [in] BSTR where,                                                 [in] BSTR html);                                                  [id((((0x80010000+500)+500)+31))]                         void insertAdjacentText(                                             [in] BSTR where,                                                 [in] BSTR text);                                                  [propget, id((((0x80010000+500)+500)+32))]                    IHTMLElement* parentTextEdit();                                       [propget, id((((0x80010000+500)+500)+34))]                        VARIANT_BOOL isTextEdit();                                            [id((((0x80010000+500)+500)+33))]                                      void click();                                                         [propget, id((((0x80010000+500)+500)+35))]                           IHTMLFiltersCollection* filters();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  void ondragstart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  VARIANT ondragstart();                                                [id((((0x80010000+500)+500)+36))]                                   BSTR toString();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  void onbeforeupdate(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  VARIANT onbeforeupdate();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  void onafterupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  VARIANT onafterupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  void onerrorupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  VARIANT onerrorupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  void onrowexit(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  VARIANT onrowexit();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  void onrowenter(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  VARIANT onrowenter();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  void ondatasetchanged(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  VARIANT ondatasetchanged();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  void ondataavailable(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  VARIANT ondataavailable();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  void ondatasetcomplete(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  VARIANT ondatasetcomplete();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  void onfilterchange(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  VARIANT onfilterchange();                                             [propget, id((((0x80010000+500)+500)+37))]                          IDispatch* children();                                                [propget, id((((0x80010000+500)+500)+38))]                               IDispatch* all();        [propget, id(((0x80010000+500)+500)+39)]                        BSTR scopeName();                                                     [id(((0x80010000+500)+500)+40)]                                void setCapture([defaultvalue(-1), in] VARIANT_BOOL containerCapture);   [id(((0x80010000+500)+500)+41)]                            void releaseCapture();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  void onlosecapture(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  VARIANT onlosecapture();                                              [id(((0x80010000+500)+500)+42)]                        BSTR componentFromPoint([in] LONG x,[in] LONG y);                     [id(((0x80010000+500)+500)+43)]                                  void doScroll([optional, in] VARIANT component);                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  void onscroll(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  VARIANT onscroll();                                                   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    void ondrag(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    VARIANT ondrag();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  void ondragend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  VARIANT ondragend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  void ondragenter(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  VARIANT ondragenter();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  void ondragover(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  VARIANT ondragover();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  void ondragleave(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  VARIANT ondragleave();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    void ondrop(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    VARIANT ondrop();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  void onbeforecut(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  VARIANT onbeforecut();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     void oncut(VARIANT v);                                                [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     VARIANT oncut();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  void onbeforecopy(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  VARIANT onbeforecopy();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    void oncopy(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    VARIANT oncopy();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  void onbeforepaste(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  VARIANT onbeforepaste();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   void onpaste(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   VARIANT onpaste();                                                    [propget, id(((0x80010000+500)+500)+7), nonbrowsable]       IHTMLCurrentStyle* currentStyle();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  void onpropertychange(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  VARIANT onpropertychange();                                           [id(((0x80010000+500)+500)+44)]                            IHTMLRectCollection* getClientRects();                                [id(((0x80010000+500)+500)+45)]                     IHTMLRect* getBoundingClientRect();                                   [id((0x80010000+500)+4)]                             void setExpression(                                                  [in] BSTR propname,                                              [in] BSTR expr,                                                  [defaultvalue(""), in] BSTR lang);                                [id((0x80010000+500)+5)]                             VARIANT getExpression([in] BSTR propname);                            [id((0x80010000+500)+6)]                          VARIANT_BOOL removeExpression([in] BSTR propname);                    [propput, id((0x80010000+15)), displaybind, bindable]  void tabIndex(short v);                                               [propget, id((0x80010000+15)), displaybind, bindable]  short tabIndex();                                                     [id((((0x80010000+500)+500)+1000))]                                     void focus();                                                         [propput, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] void accessKey(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] BSTR accessKey();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    void onblur(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    VARIANT onblur();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   void onfocus(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   VARIANT onfocus();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  void onresize(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  VARIANT onresize();                                                   [id((((0x80010000+500)+500)+1000)+2)]                                      void blur();                                                          [id((((0x80010000+500)+500)+1000)+17)]                                 void addFilter([in] IUnknown* pUnk);                                  [id((((0x80010000+500)+500)+1000)+18)]                              void removeFilter([in] IUnknown* pUnk);                               [propget, id((((0x80010000+500)+500)+1000)+19), displaybind, bindable]  LONG clientHeight();                                                  [propget, id((((0x80010000+500)+500)+1000)+20), displaybind, bindable]  LONG clientWidth();                                                   [propget, id((((0x80010000+500)+500)+1000)+21), displaybind, bindable]  LONG clientTop();                                                     [propget, id((((0x80010000+500)+500)+1000)+22), displaybind, bindable]  LONG clientLeft();                                                    [id((0x80010000+500)+7)]                               VARIANT_BOOL attachEvent(                                            [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [id((0x80010000+500)+8)]                               void detachEvent(                                                    [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+116))] VARIANT readyState();   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  void onreadystatechange(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  VARIANT onreadystatechange();                                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  void onrowsdelete(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  VARIANT onrowsdelete();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  void onrowsinserted(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  VARIANT onrowsinserted();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  void oncellchange(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  VARIANT oncellchange();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       void dir(BSTR v);                                                     [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       BSTR dir();                                                           [id(((0x80010000+500)+500)+56)]                        IDispatch* createControlRange();                                      [propget, id(((0x80010000+500)+500)+57), displaybind, bindable]  LONG scrollHeight();                                                  [propget, id(((0x80010000+500)+500)+58), displaybind, bindable]  LONG scrollWidth();                                                   [propput, id(((0x80010000+500)+500)+59), displaybind, bindable] void scrollTop(LONG v);                                               [propget, id(((0x80010000+500)+500)+59), displaybind, bindable] LONG scrollTop();                                                     [propput, id(((0x80010000+500)+500)+60), displaybind, bindable]  void scrollLeft(LONG v);                                              [propget, id(((0x80010000+500)+500)+60), displaybind, bindable]  LONG scrollLeft();                                                    [id(((0x80010000+500)+500)+62)]                           void clearAttributes();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  void oncontextmenu(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  VARIANT oncontextmenu();                                              [id(((0x80010000+500)+500)+69)]                     IHTMLElement* insertAdjacentElement(                                 [in] BSTR where,                                                 [in] IHTMLElement* insertedElement);                              [id(((0x80010000+500)+500)+65)]                              IHTMLElement* applyElement([in] IHTMLElement* apply,[in] BSTR where);   [id(((0x80010000+500)+500)+70)]                           BSTR getAdjacentText([in] BSTR where);                                [id(((0x80010000+500)+500)+71)]                       BSTR replaceAdjacentText([in] BSTR where,[in] BSTR newText);          [propget, id(((0x80010000+500)+500)+72)]                  VARIANT_BOOL canHaveChildren();                                       [id(((0x80010000+500)+500)+80)]                               LONG addBehavior([in] BSTR bstrUrl,[optional, in] VARIANT* pvarFactory);   [id(((0x80010000+500)+500)+81)]                            VARIANT_BOOL removeBehavior([in] LONG cookie);                        [propget, id(((0x80010000+500)+500)+64), nonbrowsable]       IHTMLStyle* runtimeStyle();                                           [propget, id(((0x80010000+500)+500)+82)]                     IDispatch* behaviorUrns();                                            [propput, id(((0x80010000+500)+500)+83)]                           void tagUrn(BSTR v);                                                  [propget, id(((0x80010000+500)+500)+83)]                           BSTR tagUrn();                                                        [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  void onbeforeeditfocus(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  VARIANT onbeforeeditfocus();                                          [propget, id(((0x80010000+500)+500)+84), hidden, restricted]  LONG readyStateValue();                                               [id(((0x80010000+500)+500)+85)]                      IHTMLElementCollection* getElementsByTagName([in] BSTR v);       [id(((0x80010000+500)+500)+96)]                           void mergeAttributes(                                                [in] IHTMLElement* mergeThis,                                [optional, in] VARIANT* pvarFlags);                           [propget, id(((0x80010000+500)+500)+97)]                      VARIANT_BOOL isMultiLine();                                           [propget, id(((0x80010000+500)+500)+98)]                      VARIANT_BOOL canHaveHTML();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  void onlayoutcomplete(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  VARIANT onlayoutcomplete();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    void onpage(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    VARIANT onpage();                                                     [propput, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  void inflateBlock(VARIANT_BOOL v);                                    [propget, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  VARIANT_BOOL inflateBlock();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  void onbeforedeactivate(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  VARIANT onbeforedeactivate();                                         [id(((0x80010000+500)+500)+101)]                                 void setActive();                                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  void contentEditable(BSTR v);                                         [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  BSTR contentEditable();                                               [propget, id(((0x80010000+500)+500)+102)]                VARIANT_BOOL isContentEditable();                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] void hideFocus(VARIANT_BOOL v);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] VARIANT_BOOL hideFocus();                                             [propput, id((0x80010000+76)), displaybind, bindable]  void disabled(VARIANT_BOOL v);                                        [propget, id((0x80010000+76)), displaybind, bindable]  VARIANT_BOOL disabled();                                              [propget, id(((0x80010000+500)+500)+105)]                       VARIANT_BOOL isDisabled();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    void onmove(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    VARIANT onmove();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  void oncontrolselect(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  VARIANT oncontrolselect();                                            [id(((0x80010000+500)+500)+106)]                                 VARIANT_BOOL fireEvent(                                              [in] BSTR bstrEventName,                                         [optional, in] VARIANT* pvarEventObject);                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  void onresizestart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  VARIANT onresizestart();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  void onresizeend(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  VARIANT onresizeend();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  void onmovestart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  VARIANT onmovestart();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] void onmoveend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] VARIANT onmoveend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  void onmouseenter(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  VARIANT onmouseenter();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  void onmouseleave(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  VARIANT onmouseleave();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  void onactivate(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  VARIANT onactivate();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  void ondeactivate(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  VARIANT ondeactivate();                                               [id(((0x80010000+500)+500)+107)]                                  VARIANT_BOOL dragDrop();                                              [propget, id(((0x80010000+500)+500)+108), hidden, restricted, nonbrowsable]  LONG glyphMode();       [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  void onmousewheel(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  VARIANT onmousewheel();                                               [id(((0x80010000+500)+500)+112)]                                 void normalize();                                                     [id(((0x80010000+500)+500)+109)]                          IHTMLDOMAttribute* getAttributeNode([in] BSTR bstrname);              [id(((0x80010000+500)+500)+110)]                          IHTMLDOMAttribute* setAttributeNode([in] IHTMLDOMAttribute* pattr);   [id(((0x80010000+500)+500)+111)]                       IHTMLDOMAttribute* removeAttributeNode([in] IHTMLDOMAttribute* pattr);   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  void onbeforeactivate(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  VARIANT onbeforeactivate();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] void onfocusin(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] VARIANT onfocusin();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  void onfocusout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  VARIANT onfocusout();       [propget, id(((0x80010000+500)+500)+54), hidden]   LONG uniqueNumber();                                          [propget, id(((0x80010000+500)+500)+55), hidden]       BSTR uniqueID();     [propget, id(((0x80010000+500)+500)+46)]                          LONG nodeType();                                                      [propget, id(((0x80010000+500)+500)+47)]                        IHTMLDOMNode* parentNode();                                           [id(((0x80010000+500)+500)+48)]                              VARIANT_BOOL hasChildNodes();                                         [propget, id(((0x80010000+500)+500)+49)]                        IDispatch* childNodes();                                              [propget, id(((0x80010000+500)+500)+50)]                        IDispatch* attributes();                                              [id(((0x80010000+500)+500)+51)]                               IHTMLDOMNode* insertBefore(                                          [in] IHTMLDOMNode* newChild,                                 [optional, in] VARIANT refChild);                             [id(((0x80010000+500)+500)+52)]                                IHTMLDOMNode* removeChild([in] IHTMLDOMNode* oldChild);               [id(((0x80010000+500)+500)+53)]                               IHTMLDOMNode* replaceChild(                                          [in] IHTMLDOMNode* newChild,                                     [in] IHTMLDOMNode* oldChild);                                     [id(((0x80010000+500)+500)+61)]                                  IHTMLDOMNode* cloneNode([in] VARIANT_BOOL fDeep);                     [id(((0x80010000+500)+500)+66)]                                 IHTMLDOMNode* removeNode([defaultvalue(0), in] VARIANT_BOOL fDeep);   [id(((0x80010000+500)+500)+68)]                                   IHTMLDOMNode* swapNode([in] IHTMLDOMNode* otherNode);                 [id(((0x80010000+500)+500)+67)]                                IHTMLDOMNode* replaceNode([in] IHTMLDOMNode* replacement);            [id(((0x80010000+500)+500)+73)]                                IHTMLDOMNode* appendChild([in] IHTMLDOMNode* newChild);               [propget, id(((0x80010000+500)+500)+74)]                          BSTR nodeName();                                                      [propput, id(((0x80010000+500)+500)+75)]                         void nodeValue(VARIANT v);                                            [propget, id(((0x80010000+500)+500)+75)]                         VARIANT nodeValue();                                                  [propget, id(((0x80010000+500)+500)+76)]                        IHTMLDOMNode* firstChild();                                           [propget, id(((0x80010000+500)+500)+77)]                         IHTMLDOMNode* lastChild();                                            [propget, id(((0x80010000+500)+500)+78)]                   IHTMLDOMNode* previousSibling();                                      [propget, id(((0x80010000+500)+500)+79)]                       IHTMLDOMNode* nextSibling();        [propget, id(((0x80010000+500)+500)+113)]    IDispatch *ownerDocument();         [propput, id(((0x80010000+500)+500)+21)]       void dataFld(BSTR v);                                 [propget, id(((0x80010000+500)+500)+21)]       BSTR dataFld();                                       [propput, id(((0x80010000+500)+500)+22)]       void dataSrc(BSTR v);                                 [propget, id(((0x80010000+500)+500)+22)]       BSTR dataSrc();                                       [propput, id(((0x80010000+500)+500)+23)]  void dataFormatAs(BSTR v);                            [propget, id(((0x80010000+500)+500)+23)]  BSTR dataFormatAs();    [id((((0x80010000+500)+500)+200))]                      IHTMLDOMAttribute2 *ie8_getAttributeNode([in] BSTR bstrname);         [id((((0x80010000+500)+500)+200)+1)]                      IHTMLDOMAttribute2 *ie8_setAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+2)]                   IHTMLDOMAttribute2 *ie8_removeAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+3)]                              VARIANT_BOOL hasAttribute([in] BSTR name);                            [propput, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      void role(BSTR v);                                                    [propget, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      BSTR role();                                                          [propput, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  void ariaBusy(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  BSTR ariaBusy();                                                      [propput, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  void ariaChecked(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  BSTR ariaChecked();                                                   [propput, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  void ariaDisabled(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  BSTR ariaDisabled();                                                  [propput, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  void ariaExpanded(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  BSTR ariaExpanded();                                                  [propput, id((((0x80010000+500)+500)+200)+9), displaybind, bindable] void ariaHaspopup(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+9), displaybind, bindable]  BSTR ariaHaspopup();                                                  [propput, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  void ariaHidden(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  BSTR ariaHidden();                                                    [propput, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  void ariaInvalid(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  BSTR ariaInvalid();                                                   [propput, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  void ariaMultiselectable(BSTR v);                                     [propget, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  BSTR ariaMultiselectable();                                           [propput, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  void ariaPressed(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  BSTR ariaPressed();                                                   [propput, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  void ariaReadonly(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  BSTR ariaReadonly();                                                  [propput, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  void ariaRequired(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  BSTR ariaRequired();                                                  [propput, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  void ariaSecret(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  BSTR ariaSecret();                                                    [propput, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  void ariaSelected(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  BSTR ariaSelected();                                                  [id((((0x80010000+500)+500)+200)+18)]                          VARIANT ie8_getAttribute([in] BSTR strAttributeName);                 [id((((0x80010000+500)+500)+200)+19)]                          void ie8_setAttribute([in] BSTR strAttributeName,[in] VARIANT AttributeValue);   [id((((0x80010000+500)+500)+200)+20)]                       VARIANT_BOOL ie8_removeAttribute([in] BSTR strAttributeName);         [propget, id((((0x80010000+500)+500)+200)+21)]                   IHTMLAttributeCollection3 *ie8_attributes();                          [propput, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  void ariaValuenow(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  BSTR ariaValuenow();                                                  [propput, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  void ariaPosinset(short v);                                           [propget, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  short ariaPosinset();                                                 [propput, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  void ariaSetsize(short v);                                            [propget, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  short ariaSetsize();                                                  [propput, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] void ariaLevel(short v);                                              [propget, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] short ariaLevel();                                                    [propput, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  void ariaValuemin(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  BSTR ariaValuemin();                                                  [propput, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  void ariaValuemax(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  BSTR ariaValuemax();                                                  [propput, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  void ariaControls(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  BSTR ariaControls();                                                  [propput, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  void ariaDescribedby(BSTR v);                                         [propget, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  BSTR ariaDescribedby();                                               [propput, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  void ariaFlowto(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  BSTR ariaFlowto();                                                    [propput, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  void ariaLabelledby(BSTR v);                                          [propget, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  BSTR ariaLabelledby();                                                [propput, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  void ariaActivedescendant(BSTR v);                                    [propget, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  BSTR ariaActivedescendant();                                          [propput, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  void ariaOwns(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  BSTR ariaOwns();                                                      [id((((0x80010000+500)+500)+200)+34)]                             VARIANT_BOOL hasAttributes();                                         [propput, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  void ariaLive(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  BSTR ariaLive();                                                      [propput, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  void ariaRelevant(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  BSTR ariaRelevant();       [id(((0x80010000+500)+500)+114)]                  IHTMLElement *querySelector([in] BSTR v);                     [id(((0x80010000+500)+500)+115)]               IHTMLDOMChildrenCollection *querySelectorAll([in] BSTR v);    [propget, id((0x80010000+500)+9), hidden]        IDispatch *constructor();

    [propput, id(((1000+1000)+2)), displaybind, bindable]
    void isMap(VARIANT_BOOL v);

    [propget, id(((1000+1000)+2)), displaybind, bindable]
    VARIANT_BOOL isMap();

    [propput, id(((1000+1000)+8)), displaybind, bindable]
    void useMap(BSTR v);

    [propget, id(((1000+1000)+8)), displaybind, bindable]
    BSTR useMap();

    [propget, id(((1000+1000)+10))]
    BSTR mimeType();

    [propget, id(((1000+1000)+11))]
    BSTR fileSize();

    [propget, id(((1000+1000)+12))]
    BSTR fileCreatedDate();

    [propget, id(((1000+1000)+13))]
    BSTR fileModifiedDate();

    [propget, id(((1000+1000)+14))]
    BSTR fileUpdatedDate();

    [propget, id(((1000+1000)+15))]
    BSTR protocol();

    [propget, id(((1000+1000)+16))]
    BSTR href();

    [propget, id(((1000+1000)+17))]
    BSTR nameProp();

    [propput, id((1000+4)), displaybind, bindable]
    void border(VARIANT v);

    [propget, id((1000+4)), displaybind, bindable]
    VARIANT border();

    [propput, id((1000+5)), displaybind, bindable]
    void vspace(LONG v);

    [propget, id((1000+5)), displaybind, bindable]
    LONG vspace();

    [propput, id((1000+6)), displaybind, bindable]
    void hspace(LONG v);

    [propget, id((1000+6)), displaybind, bindable]
    LONG hspace();

    [propput, id((1000+2)), displaybind, bindable]
    void alt(BSTR v);

    [propget, id((1000+2)), displaybind, bindable]
    BSTR alt();

    [propput, id((1000+3)), displaybind, bindable]
    void src(BSTR v);

    [propget, id((1000+3)), displaybind, bindable]
    BSTR src();

    [propput, id((1000+7)), displaybind, bindable]
    void lowsrc(BSTR v);

    [propget, id((1000+7)), displaybind, bindable]
    BSTR lowsrc();

    [propput, id((1000+8)), displaybind, bindable]
    void vrml(BSTR v);

    [propget, id((1000+8)), displaybind, bindable]
    BSTR vrml();

    [propput, id((1000+9)), displaybind, bindable]
    void dynsrc(BSTR v);

    [propget, id((1000+9)), displaybind, bindable]
    BSTR dynsrc();

    [propget, id((1000+10))]
    VARIANT_BOOL complete();

    [propput, id((1000+11)), displaybind, bindable]
    void loop(VARIANT v);

    [propget, id((1000+11)), displaybind, bindable]
    VARIANT loop();

    [propput, id((0x80010000+73)), displaybind, bindable]
    void align(BSTR v);

    [propget, id((0x80010000+73)), displaybind, bindable]
    BSTR align();

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+32)), displaybind, bindable]
    void onload(VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+32)), displaybind, bindable]
    VARIANT onload();

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+29)), displaybind, bindable]
    void onerror(VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+29)), displaybind, bindable]
    VARIANT onerror();

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+28)), displaybind, bindable]
    void onabort(VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+28)), displaybind, bindable]
    VARIANT onabort();

    [propput, id((0x80010000+0)), displaybind, bindable]
    void name(BSTR v);

    [propget, id((0x80010000+0)), displaybind, bindable]
    BSTR name();

    [propput, id((0x80010000+5))]
    void width(LONG v);

    [propget, id((0x80010000+5))]
    LONG width();

    [propput, id((0x80010000+6))]
    void height(LONG v);

    [propget, id((0x80010000+6))]
    LONG height();

    [propput, id(1000+13), displaybind, bindable]
    void start(BSTR v);

    [propget, id(1000+13), displaybind, bindable]
    BSTR start();

    [propput, id((1000+1000)+19), displaybind, bindable]
    void longDesc(BSTR v);

    [propget, id((1000+1000)+19), displaybind, bindable]
    BSTR longDesc();
}




[
    odl,
    oleautomation,
    dual,
    uuid(3051040a-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLXMLHttpRequest : IDispatch
{
    [propget, id(1000+2)]
    HRESULT readyState([out, retval] long *p);

    [propget, id(1000+3)]
    HRESULT responseBody([out, retval] VARIANT *p);

    [propget, id(1000+4)]
    HRESULT responseText([out, retval] BSTR *p);

    [propget, id(1000+5)]
    HRESULT responseXML([out, retval] IDispatch **p);

    [propget, id(1000+6)]
    HRESULT status([out, retval] long *p);

    [propget, id(1000+7)]
    HRESULT statusText([out, retval] BSTR *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]
    HRESULT onreadystatechange([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]
    HRESULT onreadystatechange([out, retval] VARIANT *p);

    [id(1000+9)] HRESULT abort();

    [id(1000+10)]
    HRESULT open(
            [in] BSTR bstrMethod,
            [in] BSTR bstrUrl,
            [in] VARIANT varAsync,
            [in, optional] VARIANT varUser,
            [in, optional] VARIANT varPassword);

    [id(1000+11)]
    HRESULT send([in, optional] VARIANT varBody);

    [id(1000+12)]
    HRESULT getAllResponseHeaders([out, retval] BSTR *p);

    [id(1000+13)]
    HRESULT getResponseHeader(
            [in] BSTR bstrHeader,
            [out, retval] BSTR *p);

    [id(1000+14)]
    HRESULT setRequestHeader(
            [in] BSTR bstrHeader,
            [in] BSTR bstrValue);
}




[
    odl,
    oleautomation,
    dual,
    uuid(30510482-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLXMLHttpRequest2 : IDispatch
{
    [propput, id(1000+15)]
    HRESULT timeout([in] long v);

    [propget, id(1000+15)]
    HRESULT timeout([out, retval] long *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+112)), displaybind, bindable]
    HRESULT ontimeout([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+112)), displaybind, bindable]
    HRESULT ontimeout([out, retval] VARIANT *p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3051040c-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLXMLHttpRequestFactory : IDispatch
{
    [id(DISPID_VALUE)]
    HRESULT create([out, retval] IHTMLXMLHttpRequest **p);
}




[
    hidden,
    uuid(3050f596-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLXMLHttpRequest
{
properties:
methods:
    [propget, id(1000+2)]
    long readyState();

    [propget, id(1000+3)]
    VARIANT responseBody();

    [propget, id(1000+4)]
    BSTR responseText();

    [propget, id(1000+5)]
    IDispatch *responseXML();

    [propget, id(1000+6)]
    long status();

    [propget, id(1000+7)]
    BSTR statusText();

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]
    void onreadystatechange(VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]
    VARIANT onreadystatechange();

    [id(1000+9)]
    void abort();

    [id(1000+10)]
    void open(
            [in] BSTR bstrMethod,
            [in] BSTR bstrUrl,
            [in] VARIANT varAsync,
            [in, optional] VARIANT varUser,
            [in, optional] VARIANT varPassword);

    [id(1000+11)]
    void send([in, optional] VARIANT varBody);

    [id(1000+12)]
    BSTR getAllResponseHeaders();

    [id(1000+13)]
    BSTR getResponseHeader([in] BSTR bstrHeader);

    [id(1000+14)]
    void setRequestHeader(
            [in] BSTR bstrHeader,
            [in] BSTR bstrValue);

    [propput, id(1000+15)]
    void timeout(long v);

    [propget, id(1000+15)]
    long timeout();

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+112)), displaybind, bindable]
    void ontimeout(VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+112)), displaybind, bindable]
    VARIANT ontimeout();

    [propget, id((0x80010000+500)+9), hidden]        IDispatch *constructor();


    [id((0x80010000+500)+10)]
    void addEventListener(
            [in] BSTR type,
            [in] IDispatch *listener,
            [in] VARIANT_BOOL useCapture);

    [id((0x80010000+500)+11)]
    void removeEventListener(
            [in] BSTR type,
            [in] IDispatch *listener,
            [in] VARIANT_BOOL useCapture);

    [id((0x80010000+500)+12)]
    VARIANT_BOOL dispatchEvent([in] IDOMEvent *evt);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f4e9-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLControlElement : IDispatch
{
    [propput, id((0x80010000+15)), displaybind, bindable]
    HRESULT tabIndex([in] short v);

    [propget, id((0x80010000+15)), displaybind, bindable]
    HRESULT tabIndex([retval, out] short * p);

    [id(((((0x80010000+500)+500)+1000)+0))]
    HRESULT focus();

    [propput, id(((((0x80010000+500)+500)+1000)+5)), displaybind, bindable]
    HRESULT accessKey([in] BSTR v);

    [propget, id(((((0x80010000+500)+500)+1000)+5)), displaybind, bindable]
    HRESULT accessKey([retval, out] BSTR * p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]
    HRESULT onblur([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]
    HRESULT onblur([retval, out] VARIANT * p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]
    HRESULT onfocus([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]
    HRESULT onfocus([retval, out] VARIANT * p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]
    HRESULT onresize([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]
    HRESULT onresize([retval, out] VARIANT * p);

    [id(((((0x80010000+500)+500)+1000)+2))]
    HRESULT blur();

    [id(((((0x80010000+500)+500)+1000)+17))]
    HRESULT addFilter([in] IUnknown* pUnk);

    [id(((((0x80010000+500)+500)+1000)+18))]
    HRESULT removeFilter([in] IUnknown* pUnk);

    [propget, id(((((0x80010000+500)+500)+1000)+19)), displaybind, bindable]
    HRESULT clientHeight([retval, out] LONG * p);

    [propget, id(((((0x80010000+500)+500)+1000)+20)), displaybind, bindable]
    HRESULT clientWidth([retval, out] LONG * p);

    [propget, id(((((0x80010000+500)+500)+1000)+21)), displaybind, bindable]
    HRESULT clientTop([retval, out] LONG * p);

    [propget, id(((((0x80010000+500)+500)+1000)+22)), displaybind, bindable]
    HRESULT clientLeft([retval, out] LONG * p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f1d8-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLBodyElement : IDispatch
{
    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1)), displaybind, bindable]
    HRESULT background([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1)), displaybind, bindable]
    HRESULT background([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+45)), displaybind, bindable]
    HRESULT bgProperties([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+45)), displaybind, bindable]
    HRESULT bgProperties([retval, out] BSTR *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]
    HRESULT leftMargin([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]
    HRESULT leftMargin([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]
    HRESULT topMargin([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]
    HRESULT topMargin([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]
    HRESULT rightMargin([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]
    HRESULT rightMargin([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+39)), displaybind, bindable]
    HRESULT bottomMargin([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+39)), displaybind, bindable]
    HRESULT bottomMargin([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]
    HRESULT noWrap([in] VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]
    HRESULT noWrap([retval, out] VARIANT_BOOL *p);

    [propput, id((-501)), displaybind, bindable]
    HRESULT bgColor([in] VARIANT v);

    [propget, id((-501)), displaybind, bindable]
    HRESULT bgColor([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]
    HRESULT text([in] VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]
    HRESULT text([retval, out] VARIANT *p);

    [propput, id((1000+1000)+10), displaybind, bindable]
    HRESULT link([in] VARIANT v);

    [propget, id((1000+1000)+10), displaybind, bindable]
    HRESULT link([retval, out] VARIANT *p);

    [propput, id((1000+1000)+12), displaybind, bindable]
    HRESULT vLink([in] VARIANT v);

    [propget, id((1000+1000)+12), displaybind, bindable]
    HRESULT vLink([retval, out] VARIANT *p);

    [propput, id((1000+1000)+11), displaybind, bindable]
    HRESULT aLink([in] VARIANT v);

    [propget, id((1000+1000)+11), displaybind, bindable]
    HRESULT aLink([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+32)), displaybind, bindable]
    HRESULT onload([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+32)), displaybind, bindable]
    HRESULT onload([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+33)), displaybind, bindable]
    HRESULT onunload([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+33)), displaybind, bindable]
    HRESULT onunload([retval, out] VARIANT *p);

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]
    HRESULT scroll([in] BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]
    HRESULT scroll([retval, out] BSTR *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+10)), displaybind, bindable]
    HRESULT onselect([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+10)), displaybind, bindable]
    HRESULT onselect([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+39)), displaybind, bindable]
    HRESULT onbeforeunload([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+39)), displaybind, bindable]
    HRESULT onbeforeunload([retval, out] VARIANT *p);

    [id((1000+1000)+13)]
    HRESULT createTextRange([retval, out] IHTMLTxtRange **range);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f5c5-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLBodyElement2 : IDispatch
{
    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+66)), displaybind, bindable]
    HRESULT onbeforeprint([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+66)), displaybind, bindable]
    HRESULT onbeforeprint([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+67)), displaybind, bindable]
    HRESULT onafterprint([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+67)), displaybind, bindable]
    HRESULT onafterprint([retval, out] VARIANT *p);
}

[
    hidden,
    uuid(3050f507-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLBody
{
properties:
methods:
    [id(((0x80010000+500)+1))]                               void setAttribute(                                                   [in] BSTR strAttributeName,                                      [in] VARIANT AttValue,                                           [defaultvalue(1), in] LONG lFlags);                               [id(((0x80010000+500)+2))]                               VARIANT getAttribute(                                                [in] BSTR strAttributeName,                                      [defaultvalue(0), in] LONG lFlags);                               [id(((0x80010000+500)+3))]                            VARIANT_BOOL removeAttribute(                                        [in] BSTR strAttributeName,                                      [defaultvalue(1), in] LONG lFlags);                               [propput, id((((0x80010000+500)+500)+1)), bindable]               void className(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1)), bindable]               BSTR className();                                                     [propput, id((((0x80010000+500)+500)+2)), bindable]                      void id(BSTR v);                                                      [propget, id((((0x80010000+500)+500)+2)), bindable]                      BSTR id();                                                            [propget, id((((0x80010000+500)+500)+4))]                           BSTR tagName();                                                       [propget, id((0x80010000+8))]                     IHTMLElement *parentElement();                                        [propget, id((0x80010000+74)), nonbrowsable]               IHTMLStyle *style();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     void onhelp(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     VARIANT onhelp();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    void onclick(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    VARIANT onclick();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] void ondblclick(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] VARIANT ondblclick();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  void onkeydown(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  VARIANT onkeydown();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    void onkeyup(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    VARIANT onkeyup();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] void onkeypress(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] VARIANT onkeypress();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] void onmouseout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] VARIANT onmouseout();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  void onmouseover(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  VARIANT onmouseover();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  void onmousemove(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  VARIANT onmousemove();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  void onmousedown(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  VARIANT onmousedown();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  void onmouseup(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  VARIANT onmouseup();                                                  [propget, id((((0x80010000+500)+500)+18))] IDispatch* document();    [propput, id((0x80010000+69)), displaybind, bindable]      void title(BSTR v);                                                   [propget, id((0x80010000+69)), displaybind, bindable]      BSTR title();                                                         [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   void language(BSTR v);                                                [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   BSTR language();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  void onselectstart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  VARIANT onselectstart();                                              [id((((0x80010000+500)+500)+19))]                             void scrollIntoView([optional, in] VARIANT varargStart);              [id((((0x80010000+500)+500)+20))]                                   VARIANT_BOOL contains([in] IHTMLElement* pChild);                     [propget, id((((0x80010000+500)+500)+24)), bindable]             LONG sourceIndex();                                                   [propget, id((((0x80010000+500)+500)+25))]                      VARIANT recordNumber();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              void lang(BSTR v);                                                    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              BSTR lang();                                                          [propget, id((((0x80010000+500)+500)+8))]                        LONG offsetLeft();                                                    [propget, id((((0x80010000+500)+500)+9))]                         LONG offsetTop();                                                     [propget, id((((0x80010000+500)+500)+10))]                       LONG offsetWidth();                                                   [propget, id((((0x80010000+500)+500)+11))]                      LONG offsetHeight();                                                  [propget, id((((0x80010000+500)+500)+12))]                      IHTMLElement* offsetParent();                                         [propput, id((((0x80010000+500)+500)+26))]                         void innerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+26))]                         BSTR innerHTML();                                                     [propput, id((((0x80010000+500)+500)+27))]                         void innerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+27))]                         BSTR innerText();                                                     [propput, id((((0x80010000+500)+500)+28))]                         void outerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+28))]                         BSTR outerHTML();                                                     [propput, id((((0x80010000+500)+500)+29))]                         void outerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+29))]                         BSTR outerText();                                                     [id((((0x80010000+500)+500)+30))]                         void insertAdjacentHTML(                                             [in] BSTR where,                                                 [in] BSTR html);                                                  [id((((0x80010000+500)+500)+31))]                         void insertAdjacentText(                                             [in] BSTR where,                                                 [in] BSTR text);                                                  [propget, id((((0x80010000+500)+500)+32))]                    IHTMLElement* parentTextEdit();                                       [propget, id((((0x80010000+500)+500)+34))]                        VARIANT_BOOL isTextEdit();                                            [id((((0x80010000+500)+500)+33))]                                      void click();                                                         [propget, id((((0x80010000+500)+500)+35))]                           IHTMLFiltersCollection* filters();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  void ondragstart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  VARIANT ondragstart();                                                [id((((0x80010000+500)+500)+36))]                                   BSTR toString();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  void onbeforeupdate(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  VARIANT onbeforeupdate();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  void onafterupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  VARIANT onafterupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  void onerrorupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  VARIANT onerrorupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  void onrowexit(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  VARIANT onrowexit();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  void onrowenter(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  VARIANT onrowenter();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  void ondatasetchanged(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  VARIANT ondatasetchanged();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  void ondataavailable(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  VARIANT ondataavailable();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  void ondatasetcomplete(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  VARIANT ondatasetcomplete();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  void onfilterchange(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  VARIANT onfilterchange();                                             [propget, id((((0x80010000+500)+500)+37))]                          IDispatch* children();                                                [propget, id((((0x80010000+500)+500)+38))]                               IDispatch* all();        [propget, id(((0x80010000+500)+500)+39)]                        BSTR scopeName();                                                     [id(((0x80010000+500)+500)+40)]                                void setCapture([defaultvalue(-1), in] VARIANT_BOOL containerCapture);   [id(((0x80010000+500)+500)+41)]                            void releaseCapture();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  void onlosecapture(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  VARIANT onlosecapture();                                              [id(((0x80010000+500)+500)+42)]                        BSTR componentFromPoint([in] LONG x,[in] LONG y);                     [id(((0x80010000+500)+500)+43)]                                  void doScroll([optional, in] VARIANT component);                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  void onscroll(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  VARIANT onscroll();                                                   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    void ondrag(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    VARIANT ondrag();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  void ondragend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  VARIANT ondragend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  void ondragenter(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  VARIANT ondragenter();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  void ondragover(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  VARIANT ondragover();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  void ondragleave(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  VARIANT ondragleave();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    void ondrop(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    VARIANT ondrop();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  void onbeforecut(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  VARIANT onbeforecut();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     void oncut(VARIANT v);                                                [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     VARIANT oncut();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  void onbeforecopy(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  VARIANT onbeforecopy();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    void oncopy(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    VARIANT oncopy();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  void onbeforepaste(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  VARIANT onbeforepaste();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   void onpaste(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   VARIANT onpaste();                                                    [propget, id(((0x80010000+500)+500)+7), nonbrowsable]       IHTMLCurrentStyle* currentStyle();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  void onpropertychange(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  VARIANT onpropertychange();                                           [id(((0x80010000+500)+500)+44)]                            IHTMLRectCollection* getClientRects();                                [id(((0x80010000+500)+500)+45)]                     IHTMLRect* getBoundingClientRect();                                   [id((0x80010000+500)+4)]                             void setExpression(                                                  [in] BSTR propname,                                              [in] BSTR expr,                                                  [defaultvalue(""), in] BSTR lang);                                [id((0x80010000+500)+5)]                             VARIANT getExpression([in] BSTR propname);                            [id((0x80010000+500)+6)]                          VARIANT_BOOL removeExpression([in] BSTR propname);                    [propput, id((0x80010000+15)), displaybind, bindable]  void tabIndex(short v);                                               [propget, id((0x80010000+15)), displaybind, bindable]  short tabIndex();                                                     [id((((0x80010000+500)+500)+1000))]                                     void focus();                                                         [propput, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] void accessKey(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] BSTR accessKey();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    void onblur(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    VARIANT onblur();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   void onfocus(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   VARIANT onfocus();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  void onresize(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  VARIANT onresize();                                                   [id((((0x80010000+500)+500)+1000)+2)]                                      void blur();                                                          [id((((0x80010000+500)+500)+1000)+17)]                                 void addFilter([in] IUnknown* pUnk);                                  [id((((0x80010000+500)+500)+1000)+18)]                              void removeFilter([in] IUnknown* pUnk);                               [propget, id((((0x80010000+500)+500)+1000)+19), displaybind, bindable]  LONG clientHeight();                                                  [propget, id((((0x80010000+500)+500)+1000)+20), displaybind, bindable]  LONG clientWidth();                                                   [propget, id((((0x80010000+500)+500)+1000)+21), displaybind, bindable]  LONG clientTop();                                                     [propget, id((((0x80010000+500)+500)+1000)+22), displaybind, bindable]  LONG clientLeft();                                                    [id((0x80010000+500)+7)]                               VARIANT_BOOL attachEvent(                                            [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [id((0x80010000+500)+8)]                               void detachEvent(                                                    [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+116))] VARIANT readyState();   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  void onreadystatechange(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  VARIANT onreadystatechange();                                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  void onrowsdelete(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  VARIANT onrowsdelete();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  void onrowsinserted(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  VARIANT onrowsinserted();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  void oncellchange(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  VARIANT oncellchange();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       void dir(BSTR v);                                                     [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       BSTR dir();                                                           [id(((0x80010000+500)+500)+56)]                        IDispatch* createControlRange();                                      [propget, id(((0x80010000+500)+500)+57), displaybind, bindable]  LONG scrollHeight();                                                  [propget, id(((0x80010000+500)+500)+58), displaybind, bindable]  LONG scrollWidth();                                                   [propput, id(((0x80010000+500)+500)+59), displaybind, bindable] void scrollTop(LONG v);                                               [propget, id(((0x80010000+500)+500)+59), displaybind, bindable] LONG scrollTop();                                                     [propput, id(((0x80010000+500)+500)+60), displaybind, bindable]  void scrollLeft(LONG v);                                              [propget, id(((0x80010000+500)+500)+60), displaybind, bindable]  LONG scrollLeft();                                                    [id(((0x80010000+500)+500)+62)]                           void clearAttributes();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  void oncontextmenu(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  VARIANT oncontextmenu();                                              [id(((0x80010000+500)+500)+69)]                     IHTMLElement* insertAdjacentElement(                                 [in] BSTR where,                                                 [in] IHTMLElement* insertedElement);                              [id(((0x80010000+500)+500)+65)]                              IHTMLElement* applyElement([in] IHTMLElement* apply,[in] BSTR where);   [id(((0x80010000+500)+500)+70)]                           BSTR getAdjacentText([in] BSTR where);                                [id(((0x80010000+500)+500)+71)]                       BSTR replaceAdjacentText([in] BSTR where,[in] BSTR newText);          [propget, id(((0x80010000+500)+500)+72)]                  VARIANT_BOOL canHaveChildren();                                       [id(((0x80010000+500)+500)+80)]                               LONG addBehavior([in] BSTR bstrUrl,[optional, in] VARIANT* pvarFactory);   [id(((0x80010000+500)+500)+81)]                            VARIANT_BOOL removeBehavior([in] LONG cookie);                        [propget, id(((0x80010000+500)+500)+64), nonbrowsable]       IHTMLStyle* runtimeStyle();                                           [propget, id(((0x80010000+500)+500)+82)]                     IDispatch* behaviorUrns();                                            [propput, id(((0x80010000+500)+500)+83)]                           void tagUrn(BSTR v);                                                  [propget, id(((0x80010000+500)+500)+83)]                           BSTR tagUrn();                                                        [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  void onbeforeeditfocus(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  VARIANT onbeforeeditfocus();                                          [propget, id(((0x80010000+500)+500)+84), hidden, restricted]  LONG readyStateValue();                                               [id(((0x80010000+500)+500)+85)]                      IHTMLElementCollection* getElementsByTagName([in] BSTR v);       [id(((0x80010000+500)+500)+96)]                           void mergeAttributes(                                                [in] IHTMLElement* mergeThis,                                [optional, in] VARIANT* pvarFlags);                           [propget, id(((0x80010000+500)+500)+97)]                      VARIANT_BOOL isMultiLine();                                           [propget, id(((0x80010000+500)+500)+98)]                      VARIANT_BOOL canHaveHTML();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  void onlayoutcomplete(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  VARIANT onlayoutcomplete();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    void onpage(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    VARIANT onpage();                                                     [propput, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  void inflateBlock(VARIANT_BOOL v);                                    [propget, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  VARIANT_BOOL inflateBlock();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  void onbeforedeactivate(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  VARIANT onbeforedeactivate();                                         [id(((0x80010000+500)+500)+101)]                                 void setActive();                                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  void contentEditable(BSTR v);                                         [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  BSTR contentEditable();                                               [propget, id(((0x80010000+500)+500)+102)]                VARIANT_BOOL isContentEditable();                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] void hideFocus(VARIANT_BOOL v);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] VARIANT_BOOL hideFocus();                                             [propput, id((0x80010000+76)), displaybind, bindable]  void disabled(VARIANT_BOOL v);                                        [propget, id((0x80010000+76)), displaybind, bindable]  VARIANT_BOOL disabled();                                              [propget, id(((0x80010000+500)+500)+105)]                       VARIANT_BOOL isDisabled();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    void onmove(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    VARIANT onmove();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  void oncontrolselect(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  VARIANT oncontrolselect();                                            [id(((0x80010000+500)+500)+106)]                                 VARIANT_BOOL fireEvent(                                              [in] BSTR bstrEventName,                                         [optional, in] VARIANT* pvarEventObject);                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  void onresizestart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  VARIANT onresizestart();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  void onresizeend(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  VARIANT onresizeend();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  void onmovestart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  VARIANT onmovestart();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] void onmoveend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] VARIANT onmoveend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  void onmouseenter(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  VARIANT onmouseenter();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  void onmouseleave(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  VARIANT onmouseleave();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  void onactivate(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  VARIANT onactivate();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  void ondeactivate(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  VARIANT ondeactivate();                                               [id(((0x80010000+500)+500)+107)]                                  VARIANT_BOOL dragDrop();                                              [propget, id(((0x80010000+500)+500)+108), hidden, restricted, nonbrowsable]  LONG glyphMode();       [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  void onmousewheel(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  VARIANT onmousewheel();                                               [id(((0x80010000+500)+500)+112)]                                 void normalize();                                                     [id(((0x80010000+500)+500)+109)]                          IHTMLDOMAttribute* getAttributeNode([in] BSTR bstrname);              [id(((0x80010000+500)+500)+110)]                          IHTMLDOMAttribute* setAttributeNode([in] IHTMLDOMAttribute* pattr);   [id(((0x80010000+500)+500)+111)]                       IHTMLDOMAttribute* removeAttributeNode([in] IHTMLDOMAttribute* pattr);   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  void onbeforeactivate(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  VARIANT onbeforeactivate();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] void onfocusin(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] VARIANT onfocusin();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  void onfocusout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  VARIANT onfocusout();       [propget, id(((0x80010000+500)+500)+54), hidden]   LONG uniqueNumber();                                          [propget, id(((0x80010000+500)+500)+55), hidden]       BSTR uniqueID();     [propget, id(((0x80010000+500)+500)+46)]                          LONG nodeType();                                                      [propget, id(((0x80010000+500)+500)+47)]                        IHTMLDOMNode* parentNode();                                           [id(((0x80010000+500)+500)+48)]                              VARIANT_BOOL hasChildNodes();                                         [propget, id(((0x80010000+500)+500)+49)]                        IDispatch* childNodes();                                              [propget, id(((0x80010000+500)+500)+50)]                        IDispatch* attributes();                                              [id(((0x80010000+500)+500)+51)]                               IHTMLDOMNode* insertBefore(                                          [in] IHTMLDOMNode* newChild,                                 [optional, in] VARIANT refChild);                             [id(((0x80010000+500)+500)+52)]                                IHTMLDOMNode* removeChild([in] IHTMLDOMNode* oldChild);               [id(((0x80010000+500)+500)+53)]                               IHTMLDOMNode* replaceChild(                                          [in] IHTMLDOMNode* newChild,                                     [in] IHTMLDOMNode* oldChild);                                     [id(((0x80010000+500)+500)+61)]                                  IHTMLDOMNode* cloneNode([in] VARIANT_BOOL fDeep);                     [id(((0x80010000+500)+500)+66)]                                 IHTMLDOMNode* removeNode([defaultvalue(0), in] VARIANT_BOOL fDeep);   [id(((0x80010000+500)+500)+68)]                                   IHTMLDOMNode* swapNode([in] IHTMLDOMNode* otherNode);                 [id(((0x80010000+500)+500)+67)]                                IHTMLDOMNode* replaceNode([in] IHTMLDOMNode* replacement);            [id(((0x80010000+500)+500)+73)]                                IHTMLDOMNode* appendChild([in] IHTMLDOMNode* newChild);               [propget, id(((0x80010000+500)+500)+74)]                          BSTR nodeName();                                                      [propput, id(((0x80010000+500)+500)+75)]                         void nodeValue(VARIANT v);                                            [propget, id(((0x80010000+500)+500)+75)]                         VARIANT nodeValue();                                                  [propget, id(((0x80010000+500)+500)+76)]                        IHTMLDOMNode* firstChild();                                           [propget, id(((0x80010000+500)+500)+77)]                         IHTMLDOMNode* lastChild();                                            [propget, id(((0x80010000+500)+500)+78)]                   IHTMLDOMNode* previousSibling();                                      [propget, id(((0x80010000+500)+500)+79)]                       IHTMLDOMNode* nextSibling();        [propget, id(((0x80010000+500)+500)+113)]    IDispatch *ownerDocument();         [propput, id(((0x80010000+500)+500)+21)]       void dataFld(BSTR v);                                 [propget, id(((0x80010000+500)+500)+21)]       BSTR dataFld();                                       [propput, id(((0x80010000+500)+500)+22)]       void dataSrc(BSTR v);                                 [propget, id(((0x80010000+500)+500)+22)]       BSTR dataSrc();                                       [propput, id(((0x80010000+500)+500)+23)]  void dataFormatAs(BSTR v);                            [propget, id(((0x80010000+500)+500)+23)]  BSTR dataFormatAs();    [id((((0x80010000+500)+500)+200))]                      IHTMLDOMAttribute2 *ie8_getAttributeNode([in] BSTR bstrname);         [id((((0x80010000+500)+500)+200)+1)]                      IHTMLDOMAttribute2 *ie8_setAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+2)]                   IHTMLDOMAttribute2 *ie8_removeAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+3)]                              VARIANT_BOOL hasAttribute([in] BSTR name);                            [propput, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      void role(BSTR v);                                                    [propget, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      BSTR role();                                                          [propput, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  void ariaBusy(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  BSTR ariaBusy();                                                      [propput, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  void ariaChecked(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  BSTR ariaChecked();                                                   [propput, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  void ariaDisabled(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  BSTR ariaDisabled();                                                  [propput, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  void ariaExpanded(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  BSTR ariaExpanded();                                                  [propput, id((((0x80010000+500)+500)+200)+9), displaybind, bindable] void ariaHaspopup(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+9), displaybind, bindable]  BSTR ariaHaspopup();                                                  [propput, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  void ariaHidden(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  BSTR ariaHidden();                                                    [propput, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  void ariaInvalid(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  BSTR ariaInvalid();                                                   [propput, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  void ariaMultiselectable(BSTR v);                                     [propget, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  BSTR ariaMultiselectable();                                           [propput, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  void ariaPressed(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  BSTR ariaPressed();                                                   [propput, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  void ariaReadonly(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  BSTR ariaReadonly();                                                  [propput, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  void ariaRequired(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  BSTR ariaRequired();                                                  [propput, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  void ariaSecret(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  BSTR ariaSecret();                                                    [propput, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  void ariaSelected(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  BSTR ariaSelected();                                                  [id((((0x80010000+500)+500)+200)+18)]                          VARIANT ie8_getAttribute([in] BSTR strAttributeName);                 [id((((0x80010000+500)+500)+200)+19)]                          void ie8_setAttribute([in] BSTR strAttributeName,[in] VARIANT AttributeValue);   [id((((0x80010000+500)+500)+200)+20)]                       VARIANT_BOOL ie8_removeAttribute([in] BSTR strAttributeName);         [propget, id((((0x80010000+500)+500)+200)+21)]                   IHTMLAttributeCollection3 *ie8_attributes();                          [propput, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  void ariaValuenow(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  BSTR ariaValuenow();                                                  [propput, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  void ariaPosinset(short v);                                           [propget, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  short ariaPosinset();                                                 [propput, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  void ariaSetsize(short v);                                            [propget, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  short ariaSetsize();                                                  [propput, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] void ariaLevel(short v);                                              [propget, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] short ariaLevel();                                                    [propput, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  void ariaValuemin(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  BSTR ariaValuemin();                                                  [propput, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  void ariaValuemax(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  BSTR ariaValuemax();                                                  [propput, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  void ariaControls(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  BSTR ariaControls();                                                  [propput, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  void ariaDescribedby(BSTR v);                                         [propget, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  BSTR ariaDescribedby();                                               [propput, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  void ariaFlowto(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  BSTR ariaFlowto();                                                    [propput, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  void ariaLabelledby(BSTR v);                                          [propget, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  BSTR ariaLabelledby();                                                [propput, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  void ariaActivedescendant(BSTR v);                                    [propget, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  BSTR ariaActivedescendant();                                          [propput, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  void ariaOwns(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  BSTR ariaOwns();                                                      [id((((0x80010000+500)+500)+200)+34)]                             VARIANT_BOOL hasAttributes();                                         [propput, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  void ariaLive(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  BSTR ariaLive();                                                      [propput, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  void ariaRelevant(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  BSTR ariaRelevant();       [id(((0x80010000+500)+500)+114)]                  IHTMLElement *querySelector([in] BSTR v);                     [id(((0x80010000+500)+500)+115)]               IHTMLDOMChildrenCollection *querySelectorAll([in] BSTR v);    [propget, id((0x80010000+500)+9), hidden]        IDispatch *constructor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1)), displaybind, bindable]
    void background(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1)), displaybind, bindable]
    BSTR background();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+45)), displaybind, bindable]
    void bgProperties(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+45)), displaybind, bindable]
    BSTR bgProperties();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]
    void leftMargin(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]
    VARIANT leftMargin();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]
    void topMargin(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]
    VARIANT topMargin();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]
    void rightMargin(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]
    VARIANT rightMargin();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+39)), displaybind, bindable]
    void bottomMargin(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+39)), displaybind, bindable]
    VARIANT bottomMargin();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]
    void noWrap(VARIANT_BOOL v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]
    VARIANT_BOOL noWrap();

    [propput, id((-501)), displaybind, bindable]
    void bgColor(VARIANT v);

    [propget, id((-501)), displaybind, bindable]
    VARIANT bgColor();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]
    void text(VARIANT v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]
    VARIANT text();

    [propput, id((1000+1000)+10), displaybind, bindable]
    void link(VARIANT v);

    [propget, id((1000+1000)+10), displaybind, bindable]
    VARIANT link();

    [propput, id((1000+1000)+12), displaybind, bindable]
    void vLink(VARIANT v);

    [propget, id((1000+1000)+12), displaybind, bindable]
    VARIANT vLink();

    [propput, id((1000+1000)+11), displaybind, bindable]
    void aLink(VARIANT v);

    [propget, id((1000+1000)+11), displaybind, bindable]
    VARIANT aLink();

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+32)), displaybind, bindable]
    void onload(VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+32)), displaybind, bindable]
    VARIANT onload();

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+33)), displaybind, bindable]
    void onunload(VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+33)), displaybind, bindable]
    VARIANT onunload();

    [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]
    void scroll(BSTR v);

    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]
    BSTR scroll();

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+10)), displaybind, bindable]
    void onselect(VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+10)), displaybind, bindable]
    VARIANT onselect();

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+39)), displaybind, bindable]
    void onbeforeunload(VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+39)), displaybind, bindable]
    VARIANT onbeforeunload();

    [id((1000+1000)+13)]
    IHTMLTxtRange* createTextRange();

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+66)), displaybind, bindable]
    void onbeforeprint(VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+66)), displaybind, bindable]
    VARIANT onbeforeprint();

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+67)), displaybind, bindable]
    void onafterprint(VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+67)), displaybind, bindable]
    VARIANT onafterprint();
}

[
    uuid(3050f24a-98b5-11cf-bb82-00aa00bdce0b)
]
coclass HTMLBody
{
    [default]           dispinterface DispHTMLBody;
    [source, default]   dispinterface HTMLTextContainerEvents;
    [source]            dispinterface HTMLTextContainerEvents2;
                        interface IHTMLElement;
                        interface IHTMLElement2;
                        interface IHTMLElement3;
                        interface IHTMLElement4;
                        interface IHTMLUniqueName;
                        interface IHTMLDOMNode;
                        interface IHTMLDOMNode2;
                        interface IHTMLControlElement;
                        interface IHTMLTextContainer;
                        interface IHTMLBodyElement;
                        interface IHTMLBodyElement2;
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f1da-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLAnchorElement : IDispatch
{
    [propput, id(DISPID_VALUE), displaybind, bindable]
    HRESULT href([in] BSTR v);

    [propget, id(DISPID_VALUE), displaybind, bindable]
    HRESULT href([retval, out] BSTR *p);

    [propput, id(1000+3), displaybind, bindable]
    HRESULT target([in] BSTR v);

    [propget, id(1000+3), displaybind, bindable]
    HRESULT target([retval, out] BSTR *p);

    [propput, id(1000+5), displaybind, bindable]
    HRESULT rel([in] BSTR v);

    [propget, id(1000+5), displaybind, bindable]
    HRESULT rel([retval, out] BSTR *p);

    [propput, id(1000+6), displaybind, bindable]
    HRESULT rev([in] BSTR v);

    [propget, id(1000+6), displaybind, bindable]
    HRESULT rev([retval, out] BSTR *p);

    [propput, id(1000+7), displaybind, bindable]
    HRESULT urn([in] BSTR v);

    [propget, id(1000+7), displaybind, bindable]
    HRESULT urn([retval, out] BSTR *p);

    [propput, id(1000+8), displaybind, bindable]
    HRESULT Methods([in] BSTR v);

    [propget, id(1000+8), displaybind, bindable]
    HRESULT Methods([retval, out] BSTR *p);

    [propput, id((0x80010000+0)), displaybind, bindable]
    HRESULT name([in] BSTR v);

    [propget, id((0x80010000+0)), displaybind, bindable]
    HRESULT name([retval, out] BSTR *p);

    [propput, id(1000+12)]
    HRESULT host([in] BSTR v);

    [propget, id(1000+12)]
    HRESULT host([retval, out] BSTR *p);

    [propput, id(1000+13)]
    HRESULT hostname([in] BSTR v);

    [propget, id(1000+13)]
    HRESULT hostname([retval, out] BSTR *p);

    [propput, id(1000+14)]
    HRESULT pathname([in] BSTR v);

    [propget, id(1000+14)]
    HRESULT pathname([retval, out] BSTR *p);

    [propput, id(1000+15)]
    HRESULT port([in] BSTR v);

    [propget, id(1000+15)]
    HRESULT port([retval, out] BSTR *p);

    [propput, id(1000+16)]
    HRESULT protocol([in] BSTR v);

    [propget, id(1000+16)]
    HRESULT protocol([retval, out] BSTR *p);

    [propput, id(1000+17)]
    HRESULT search([in] BSTR v);

    [propget, id(1000+17)]
    HRESULT search([retval, out] BSTR *p);

    [propput, id(1000+18)]
    HRESULT hash([in] BSTR v);

    [propget, id(1000+18)]
    HRESULT hash([retval, out] BSTR *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]
    HRESULT onblur([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]
    HRESULT onblur([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]
    HRESULT onfocus([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]
    HRESULT onfocus([retval, out] VARIANT *p);

    [propput, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable]
    HRESULT accessKey([in] BSTR v);

    [propget, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable]
    HRESULT accessKey([retval, out] BSTR *p);

    [propget, id(1000+31)]
    HRESULT protocolLong([retval, out] BSTR *p);

    [propget, id(1000+30)]
    HRESULT mimeType([retval, out] BSTR *p);

    [propget, id(1000+32)]
    HRESULT nameProp([retval, out] BSTR *p);

    [propput, id((0x80010000+15)), displaybind, bindable]
    HRESULT tabIndex([in] short v);

    [propget, id((0x80010000+15)), displaybind, bindable]
    HRESULT tabIndex([retval, out] short *p);

    [id((((0x80010000+500)+500)+1000)+0)]
    HRESULT focus();

    [id((((0x80010000+500)+500)+1000)+2)]
    HRESULT blur();
}




[
    hidden,
    uuid(3050f502-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLAnchorElement
{
properties:
methods:
    [id(((0x80010000+500)+1))]                               void setAttribute(                                                   [in] BSTR strAttributeName,                                      [in] VARIANT AttValue,                                           [defaultvalue(1), in] LONG lFlags);                               [id(((0x80010000+500)+2))]                               VARIANT getAttribute(                                                [in] BSTR strAttributeName,                                      [defaultvalue(0), in] LONG lFlags);                               [id(((0x80010000+500)+3))]                            VARIANT_BOOL removeAttribute(                                        [in] BSTR strAttributeName,                                      [defaultvalue(1), in] LONG lFlags);                               [propput, id((((0x80010000+500)+500)+1)), bindable]               void className(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1)), bindable]               BSTR className();                                                     [propput, id((((0x80010000+500)+500)+2)), bindable]                      void id(BSTR v);                                                      [propget, id((((0x80010000+500)+500)+2)), bindable]                      BSTR id();                                                            [propget, id((((0x80010000+500)+500)+4))]                           BSTR tagName();                                                       [propget, id((0x80010000+8))]                     IHTMLElement *parentElement();                                        [propget, id((0x80010000+74)), nonbrowsable]               IHTMLStyle *style();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     void onhelp(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     VARIANT onhelp();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    void onclick(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    VARIANT onclick();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] void ondblclick(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] VARIANT ondblclick();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  void onkeydown(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  VARIANT onkeydown();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    void onkeyup(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    VARIANT onkeyup();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] void onkeypress(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] VARIANT onkeypress();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] void onmouseout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] VARIANT onmouseout();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  void onmouseover(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  VARIANT onmouseover();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  void onmousemove(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  VARIANT onmousemove();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  void onmousedown(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  VARIANT onmousedown();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  void onmouseup(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  VARIANT onmouseup();                                                  [propget, id((((0x80010000+500)+500)+18))] IDispatch* document();    [propput, id((0x80010000+69)), displaybind, bindable]      void title(BSTR v);                                                   [propget, id((0x80010000+69)), displaybind, bindable]      BSTR title();                                                         [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   void language(BSTR v);                                                [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   BSTR language();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  void onselectstart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  VARIANT onselectstart();                                              [id((((0x80010000+500)+500)+19))]                             void scrollIntoView([optional, in] VARIANT varargStart);              [id((((0x80010000+500)+500)+20))]                                   VARIANT_BOOL contains([in] IHTMLElement* pChild);                     [propget, id((((0x80010000+500)+500)+24)), bindable]             LONG sourceIndex();                                                   [propget, id((((0x80010000+500)+500)+25))]                      VARIANT recordNumber();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              void lang(BSTR v);                                                    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              BSTR lang();                                                          [propget, id((((0x80010000+500)+500)+8))]                        LONG offsetLeft();                                                    [propget, id((((0x80010000+500)+500)+9))]                         LONG offsetTop();                                                     [propget, id((((0x80010000+500)+500)+10))]                       LONG offsetWidth();                                                   [propget, id((((0x80010000+500)+500)+11))]                      LONG offsetHeight();                                                  [propget, id((((0x80010000+500)+500)+12))]                      IHTMLElement* offsetParent();                                         [propput, id((((0x80010000+500)+500)+26))]                         void innerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+26))]                         BSTR innerHTML();                                                     [propput, id((((0x80010000+500)+500)+27))]                         void innerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+27))]                         BSTR innerText();                                                     [propput, id((((0x80010000+500)+500)+28))]                         void outerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+28))]                         BSTR outerHTML();                                                     [propput, id((((0x80010000+500)+500)+29))]                         void outerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+29))]                         BSTR outerText();                                                     [id((((0x80010000+500)+500)+30))]                         void insertAdjacentHTML(                                             [in] BSTR where,                                                 [in] BSTR html);                                                  [id((((0x80010000+500)+500)+31))]                         void insertAdjacentText(                                             [in] BSTR where,                                                 [in] BSTR text);                                                  [propget, id((((0x80010000+500)+500)+32))]                    IHTMLElement* parentTextEdit();                                       [propget, id((((0x80010000+500)+500)+34))]                        VARIANT_BOOL isTextEdit();                                            [id((((0x80010000+500)+500)+33))]                                      void click();                                                         [propget, id((((0x80010000+500)+500)+35))]                           IHTMLFiltersCollection* filters();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  void ondragstart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  VARIANT ondragstart();                                                [id((((0x80010000+500)+500)+36))]                                   BSTR toString();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  void onbeforeupdate(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  VARIANT onbeforeupdate();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  void onafterupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  VARIANT onafterupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  void onerrorupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  VARIANT onerrorupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  void onrowexit(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  VARIANT onrowexit();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  void onrowenter(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  VARIANT onrowenter();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  void ondatasetchanged(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  VARIANT ondatasetchanged();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  void ondataavailable(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  VARIANT ondataavailable();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  void ondatasetcomplete(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  VARIANT ondatasetcomplete();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  void onfilterchange(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  VARIANT onfilterchange();                                             [propget, id((((0x80010000+500)+500)+37))]                          IDispatch* children();                                                [propget, id((((0x80010000+500)+500)+38))]                               IDispatch* all();        [propget, id(((0x80010000+500)+500)+39)]                        BSTR scopeName();                                                     [id(((0x80010000+500)+500)+40)]                                void setCapture([defaultvalue(-1), in] VARIANT_BOOL containerCapture);   [id(((0x80010000+500)+500)+41)]                            void releaseCapture();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  void onlosecapture(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  VARIANT onlosecapture();                                              [id(((0x80010000+500)+500)+42)]                        BSTR componentFromPoint([in] LONG x,[in] LONG y);                     [id(((0x80010000+500)+500)+43)]                                  void doScroll([optional, in] VARIANT component);                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  void onscroll(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  VARIANT onscroll();                                                   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    void ondrag(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    VARIANT ondrag();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  void ondragend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  VARIANT ondragend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  void ondragenter(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  VARIANT ondragenter();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  void ondragover(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  VARIANT ondragover();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  void ondragleave(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  VARIANT ondragleave();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    void ondrop(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    VARIANT ondrop();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  void onbeforecut(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  VARIANT onbeforecut();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     void oncut(VARIANT v);                                                [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     VARIANT oncut();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  void onbeforecopy(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  VARIANT onbeforecopy();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    void oncopy(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    VARIANT oncopy();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  void onbeforepaste(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  VARIANT onbeforepaste();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   void onpaste(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   VARIANT onpaste();                                                    [propget, id(((0x80010000+500)+500)+7), nonbrowsable]       IHTMLCurrentStyle* currentStyle();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  void onpropertychange(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  VARIANT onpropertychange();                                           [id(((0x80010000+500)+500)+44)]                            IHTMLRectCollection* getClientRects();                                [id(((0x80010000+500)+500)+45)]                     IHTMLRect* getBoundingClientRect();                                   [id((0x80010000+500)+4)]                             void setExpression(                                                  [in] BSTR propname,                                              [in] BSTR expr,                                                  [defaultvalue(""), in] BSTR lang);                                [id((0x80010000+500)+5)]                             VARIANT getExpression([in] BSTR propname);                            [id((0x80010000+500)+6)]                          VARIANT_BOOL removeExpression([in] BSTR propname);                    [propput, id((0x80010000+15)), displaybind, bindable]  void tabIndex(short v);                                               [propget, id((0x80010000+15)), displaybind, bindable]  short tabIndex();                                                     [id((((0x80010000+500)+500)+1000))]                                     void focus();                                                         [propput, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] void accessKey(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] BSTR accessKey();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    void onblur(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    VARIANT onblur();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   void onfocus(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   VARIANT onfocus();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  void onresize(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  VARIANT onresize();                                                   [id((((0x80010000+500)+500)+1000)+2)]                                      void blur();                                                          [id((((0x80010000+500)+500)+1000)+17)]                                 void addFilter([in] IUnknown* pUnk);                                  [id((((0x80010000+500)+500)+1000)+18)]                              void removeFilter([in] IUnknown* pUnk);                               [propget, id((((0x80010000+500)+500)+1000)+19), displaybind, bindable]  LONG clientHeight();                                                  [propget, id((((0x80010000+500)+500)+1000)+20), displaybind, bindable]  LONG clientWidth();                                                   [propget, id((((0x80010000+500)+500)+1000)+21), displaybind, bindable]  LONG clientTop();                                                     [propget, id((((0x80010000+500)+500)+1000)+22), displaybind, bindable]  LONG clientLeft();                                                    [id((0x80010000+500)+7)]                               VARIANT_BOOL attachEvent(                                            [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [id((0x80010000+500)+8)]                               void detachEvent(                                                    [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+116))] VARIANT readyState();   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  void onreadystatechange(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  VARIANT onreadystatechange();                                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  void onrowsdelete(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  VARIANT onrowsdelete();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  void onrowsinserted(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  VARIANT onrowsinserted();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  void oncellchange(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  VARIANT oncellchange();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       void dir(BSTR v);                                                     [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       BSTR dir();                                                           [id(((0x80010000+500)+500)+56)]                        IDispatch* createControlRange();                                      [propget, id(((0x80010000+500)+500)+57), displaybind, bindable]  LONG scrollHeight();                                                  [propget, id(((0x80010000+500)+500)+58), displaybind, bindable]  LONG scrollWidth();                                                   [propput, id(((0x80010000+500)+500)+59), displaybind, bindable] void scrollTop(LONG v);                                               [propget, id(((0x80010000+500)+500)+59), displaybind, bindable] LONG scrollTop();                                                     [propput, id(((0x80010000+500)+500)+60), displaybind, bindable]  void scrollLeft(LONG v);                                              [propget, id(((0x80010000+500)+500)+60), displaybind, bindable]  LONG scrollLeft();                                                    [id(((0x80010000+500)+500)+62)]                           void clearAttributes();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  void oncontextmenu(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  VARIANT oncontextmenu();                                              [id(((0x80010000+500)+500)+69)]                     IHTMLElement* insertAdjacentElement(                                 [in] BSTR where,                                                 [in] IHTMLElement* insertedElement);                              [id(((0x80010000+500)+500)+65)]                              IHTMLElement* applyElement([in] IHTMLElement* apply,[in] BSTR where);   [id(((0x80010000+500)+500)+70)]                           BSTR getAdjacentText([in] BSTR where);                                [id(((0x80010000+500)+500)+71)]                       BSTR replaceAdjacentText([in] BSTR where,[in] BSTR newText);          [propget, id(((0x80010000+500)+500)+72)]                  VARIANT_BOOL canHaveChildren();                                       [id(((0x80010000+500)+500)+80)]                               LONG addBehavior([in] BSTR bstrUrl,[optional, in] VARIANT* pvarFactory);   [id(((0x80010000+500)+500)+81)]                            VARIANT_BOOL removeBehavior([in] LONG cookie);                        [propget, id(((0x80010000+500)+500)+64), nonbrowsable]       IHTMLStyle* runtimeStyle();                                           [propget, id(((0x80010000+500)+500)+82)]                     IDispatch* behaviorUrns();                                            [propput, id(((0x80010000+500)+500)+83)]                           void tagUrn(BSTR v);                                                  [propget, id(((0x80010000+500)+500)+83)]                           BSTR tagUrn();                                                        [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  void onbeforeeditfocus(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  VARIANT onbeforeeditfocus();                                          [propget, id(((0x80010000+500)+500)+84), hidden, restricted]  LONG readyStateValue();                                               [id(((0x80010000+500)+500)+85)]                      IHTMLElementCollection* getElementsByTagName([in] BSTR v);       [id(((0x80010000+500)+500)+96)]                           void mergeAttributes(                                                [in] IHTMLElement* mergeThis,                                [optional, in] VARIANT* pvarFlags);                           [propget, id(((0x80010000+500)+500)+97)]                      VARIANT_BOOL isMultiLine();                                           [propget, id(((0x80010000+500)+500)+98)]                      VARIANT_BOOL canHaveHTML();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  void onlayoutcomplete(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  VARIANT onlayoutcomplete();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    void onpage(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    VARIANT onpage();                                                     [propput, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  void inflateBlock(VARIANT_BOOL v);                                    [propget, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  VARIANT_BOOL inflateBlock();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  void onbeforedeactivate(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  VARIANT onbeforedeactivate();                                         [id(((0x80010000+500)+500)+101)]                                 void setActive();                                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  void contentEditable(BSTR v);                                         [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  BSTR contentEditable();                                               [propget, id(((0x80010000+500)+500)+102)]                VARIANT_BOOL isContentEditable();                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] void hideFocus(VARIANT_BOOL v);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] VARIANT_BOOL hideFocus();                                             [propput, id((0x80010000+76)), displaybind, bindable]  void disabled(VARIANT_BOOL v);                                        [propget, id((0x80010000+76)), displaybind, bindable]  VARIANT_BOOL disabled();                                              [propget, id(((0x80010000+500)+500)+105)]                       VARIANT_BOOL isDisabled();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    void onmove(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    VARIANT onmove();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  void oncontrolselect(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  VARIANT oncontrolselect();                                            [id(((0x80010000+500)+500)+106)]                                 VARIANT_BOOL fireEvent(                                              [in] BSTR bstrEventName,                                         [optional, in] VARIANT* pvarEventObject);                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  void onresizestart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  VARIANT onresizestart();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  void onresizeend(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  VARIANT onresizeend();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  void onmovestart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  VARIANT onmovestart();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] void onmoveend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] VARIANT onmoveend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  void onmouseenter(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  VARIANT onmouseenter();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  void onmouseleave(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  VARIANT onmouseleave();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  void onactivate(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  VARIANT onactivate();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  void ondeactivate(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  VARIANT ondeactivate();                                               [id(((0x80010000+500)+500)+107)]                                  VARIANT_BOOL dragDrop();                                              [propget, id(((0x80010000+500)+500)+108), hidden, restricted, nonbrowsable]  LONG glyphMode();       [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  void onmousewheel(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  VARIANT onmousewheel();                                               [id(((0x80010000+500)+500)+112)]                                 void normalize();                                                     [id(((0x80010000+500)+500)+109)]                          IHTMLDOMAttribute* getAttributeNode([in] BSTR bstrname);              [id(((0x80010000+500)+500)+110)]                          IHTMLDOMAttribute* setAttributeNode([in] IHTMLDOMAttribute* pattr);   [id(((0x80010000+500)+500)+111)]                       IHTMLDOMAttribute* removeAttributeNode([in] IHTMLDOMAttribute* pattr);   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  void onbeforeactivate(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  VARIANT onbeforeactivate();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] void onfocusin(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] VARIANT onfocusin();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  void onfocusout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  VARIANT onfocusout();       [propget, id(((0x80010000+500)+500)+54), hidden]   LONG uniqueNumber();                                          [propget, id(((0x80010000+500)+500)+55), hidden]       BSTR uniqueID();     [propget, id(((0x80010000+500)+500)+46)]                          LONG nodeType();                                                      [propget, id(((0x80010000+500)+500)+47)]                        IHTMLDOMNode* parentNode();                                           [id(((0x80010000+500)+500)+48)]                              VARIANT_BOOL hasChildNodes();                                         [propget, id(((0x80010000+500)+500)+49)]                        IDispatch* childNodes();                                              [propget, id(((0x80010000+500)+500)+50)]                        IDispatch* attributes();                                              [id(((0x80010000+500)+500)+51)]                               IHTMLDOMNode* insertBefore(                                          [in] IHTMLDOMNode* newChild,                                 [optional, in] VARIANT refChild);                             [id(((0x80010000+500)+500)+52)]                                IHTMLDOMNode* removeChild([in] IHTMLDOMNode* oldChild);               [id(((0x80010000+500)+500)+53)]                               IHTMLDOMNode* replaceChild(                                          [in] IHTMLDOMNode* newChild,                                     [in] IHTMLDOMNode* oldChild);                                     [id(((0x80010000+500)+500)+61)]                                  IHTMLDOMNode* cloneNode([in] VARIANT_BOOL fDeep);                     [id(((0x80010000+500)+500)+66)]                                 IHTMLDOMNode* removeNode([defaultvalue(0), in] VARIANT_BOOL fDeep);   [id(((0x80010000+500)+500)+68)]                                   IHTMLDOMNode* swapNode([in] IHTMLDOMNode* otherNode);                 [id(((0x80010000+500)+500)+67)]                                IHTMLDOMNode* replaceNode([in] IHTMLDOMNode* replacement);            [id(((0x80010000+500)+500)+73)]                                IHTMLDOMNode* appendChild([in] IHTMLDOMNode* newChild);               [propget, id(((0x80010000+500)+500)+74)]                          BSTR nodeName();                                                      [propput, id(((0x80010000+500)+500)+75)]                         void nodeValue(VARIANT v);                                            [propget, id(((0x80010000+500)+500)+75)]                         VARIANT nodeValue();                                                  [propget, id(((0x80010000+500)+500)+76)]                        IHTMLDOMNode* firstChild();                                           [propget, id(((0x80010000+500)+500)+77)]                         IHTMLDOMNode* lastChild();                                            [propget, id(((0x80010000+500)+500)+78)]                   IHTMLDOMNode* previousSibling();                                      [propget, id(((0x80010000+500)+500)+79)]                       IHTMLDOMNode* nextSibling();        [propget, id(((0x80010000+500)+500)+113)]    IDispatch *ownerDocument();         [propput, id(((0x80010000+500)+500)+21)]       void dataFld(BSTR v);                                 [propget, id(((0x80010000+500)+500)+21)]       BSTR dataFld();                                       [propput, id(((0x80010000+500)+500)+22)]       void dataSrc(BSTR v);                                 [propget, id(((0x80010000+500)+500)+22)]       BSTR dataSrc();                                       [propput, id(((0x80010000+500)+500)+23)]  void dataFormatAs(BSTR v);                            [propget, id(((0x80010000+500)+500)+23)]  BSTR dataFormatAs();    [id((((0x80010000+500)+500)+200))]                      IHTMLDOMAttribute2 *ie8_getAttributeNode([in] BSTR bstrname);         [id((((0x80010000+500)+500)+200)+1)]                      IHTMLDOMAttribute2 *ie8_setAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+2)]                   IHTMLDOMAttribute2 *ie8_removeAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+3)]                              VARIANT_BOOL hasAttribute([in] BSTR name);                            [propput, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      void role(BSTR v);                                                    [propget, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      BSTR role();                                                          [propput, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  void ariaBusy(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  BSTR ariaBusy();                                                      [propput, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  void ariaChecked(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  BSTR ariaChecked();                                                   [propput, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  void ariaDisabled(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  BSTR ariaDisabled();                                                  [propput, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  void ariaExpanded(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  BSTR ariaExpanded();                                                  [propput, id((((0x80010000+500)+500)+200)+9), displaybind, bindable] void ariaHaspopup(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+9), displaybind, bindable]  BSTR ariaHaspopup();                                                  [propput, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  void ariaHidden(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  BSTR ariaHidden();                                                    [propput, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  void ariaInvalid(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  BSTR ariaInvalid();                                                   [propput, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  void ariaMultiselectable(BSTR v);                                     [propget, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  BSTR ariaMultiselectable();                                           [propput, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  void ariaPressed(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  BSTR ariaPressed();                                                   [propput, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  void ariaReadonly(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  BSTR ariaReadonly();                                                  [propput, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  void ariaRequired(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  BSTR ariaRequired();                                                  [propput, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  void ariaSecret(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  BSTR ariaSecret();                                                    [propput, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  void ariaSelected(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  BSTR ariaSelected();                                                  [id((((0x80010000+500)+500)+200)+18)]                          VARIANT ie8_getAttribute([in] BSTR strAttributeName);                 [id((((0x80010000+500)+500)+200)+19)]                          void ie8_setAttribute([in] BSTR strAttributeName,[in] VARIANT AttributeValue);   [id((((0x80010000+500)+500)+200)+20)]                       VARIANT_BOOL ie8_removeAttribute([in] BSTR strAttributeName);         [propget, id((((0x80010000+500)+500)+200)+21)]                   IHTMLAttributeCollection3 *ie8_attributes();                          [propput, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  void ariaValuenow(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  BSTR ariaValuenow();                                                  [propput, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  void ariaPosinset(short v);                                           [propget, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  short ariaPosinset();                                                 [propput, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  void ariaSetsize(short v);                                            [propget, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  short ariaSetsize();                                                  [propput, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] void ariaLevel(short v);                                              [propget, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] short ariaLevel();                                                    [propput, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  void ariaValuemin(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  BSTR ariaValuemin();                                                  [propput, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  void ariaValuemax(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  BSTR ariaValuemax();                                                  [propput, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  void ariaControls(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  BSTR ariaControls();                                                  [propput, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  void ariaDescribedby(BSTR v);                                         [propget, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  BSTR ariaDescribedby();                                               [propput, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  void ariaFlowto(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  BSTR ariaFlowto();                                                    [propput, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  void ariaLabelledby(BSTR v);                                          [propget, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  BSTR ariaLabelledby();                                                [propput, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  void ariaActivedescendant(BSTR v);                                    [propget, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  BSTR ariaActivedescendant();                                          [propput, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  void ariaOwns(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  BSTR ariaOwns();                                                      [id((((0x80010000+500)+500)+200)+34)]                             VARIANT_BOOL hasAttributes();                                         [propput, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  void ariaLive(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  BSTR ariaLive();                                                      [propput, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  void ariaRelevant(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  BSTR ariaRelevant();       [id(((0x80010000+500)+500)+114)]                  IHTMLElement *querySelector([in] BSTR v);                     [id(((0x80010000+500)+500)+115)]               IHTMLDOMChildrenCollection *querySelectorAll([in] BSTR v);    [propget, id((0x80010000+500)+9), hidden]        IDispatch *constructor();

    [propput, id(DISPID_VALUE), displaybind, bindable]
    void href(BSTR v);

    [propget, id(DISPID_VALUE), displaybind, bindable]
    BSTR href();

    [propput, id(1000+3), displaybind, bindable]
    void target(BSTR v);

    [propget, id(1000+3), displaybind, bindable]
    BSTR target();

    [propput, id(1000+5), displaybind, bindable]
    void rel(BSTR v);

    [propget, id(1000+5), displaybind, bindable]
    BSTR rel();

    [propput, id(1000+6), displaybind, bindable]
    void rev(BSTR v);

    [propget, id(1000+6), displaybind, bindable]
    BSTR rev();

    [propput, id(1000+7), displaybind, bindable]
    void urn(BSTR v);

    [propget, id(1000+7), displaybind, bindable]
    BSTR urn();

    [propput, id(1000+8), displaybind, bindable]
    void Methods(BSTR v);

    [propget, id(1000+8), displaybind, bindable]
    BSTR Methods();

    [propput, id((0x80010000+0)), displaybind, bindable]
    void name(BSTR v);

    [propget, id((0x80010000+0)), displaybind, bindable]
    BSTR name();

    [propput, id(1000+12)]
    void host(BSTR v);

    [propget, id(1000+12)]
    BSTR host();

    [propput, id(1000+13)]
    void hostname(BSTR v);

    [propget, id(1000+13)]
    BSTR hostname();

    [propput, id(1000+14)]
    void pathname(BSTR v);

    [propget, id(1000+14)]
    BSTR pathname();

    [propput, id(1000+15)]
    void port(BSTR v);

    [propget, id(1000+15)]
    BSTR port();

    [propput, id(1000+16)]
    void protocol(BSTR v);

    [propget, id(1000+16)]
    BSTR protocol();

    [propput, id(1000+17)]
    void search(BSTR v);

    [propget, id(1000+17)]
    BSTR search();

    [propput, id(1000+18)]
    void hash(BSTR v);

    [propget, id(1000+18)]
    BSTR hash();

    [propget, id(1000+31)]
    BSTR protocolLong();

    [propget, id(1000+30)]
    BSTR mimeType();

    [propget, id(1000+32)]
    BSTR nameProp();

    [propput, id(1000+23), displaybind, bindable]
    void charset(BSTR v);

    [propget, id(1000+23), displaybind, bindable]
    BSTR charset();

    [propput, id(1000+24), displaybind, bindable]
    void coords(BSTR v);

    [propget, id(1000+24), displaybind, bindable]
    BSTR coords();

    [propput, id(1000+25), displaybind, bindable]
    void hreflang(BSTR v);

    [propget, id(1000+25), displaybind, bindable]
    BSTR hreflang();

    [propput, id(1000+26), displaybind, bindable]
    void shape(BSTR v);

    [propget, id(1000+26), displaybind, bindable]
    BSTR shape();

    [propput, id(1000+27), displaybind, bindable]
    void type(BSTR v);

    [propget, id(1000+27), displaybind, bindable]
    BSTR type();

    [propput, id((1000+150)+1)]
    void ie8_shape(BSTR v);

    [propget, id((1000+150)+1)]
    BSTR ie8_shape();

    [propput, id((1000+150)+2)]
    void ie8_coords(BSTR v);

    [propget, id((1000+150)+2)]
    BSTR ie8_coords();

    [propput, id((1000+150)+3)]
    void ie8_href(BSTR v);

    [propget, id((1000+150)+3)]
    BSTR ie8_href();
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f265-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLAreaElement : IDispatch
{
    [propput, id(1000+1)]
    HRESULT shape([in] BSTR v);

    [propget, id(1000+1)]
    HRESULT shape([retval, out] BSTR *p);

    [propput, id(1000+2)]
    HRESULT coords([in] BSTR v);

    [propget, id(1000+2)]
    HRESULT coords([retval, out] BSTR *p);

    [propput, id(DISPID_VALUE)]
    HRESULT href([in] BSTR v);

    [propget, id(DISPID_VALUE)]
    HRESULT href([retval, out] BSTR *p);

    [propput, id(1000+4)]
    HRESULT target([in] BSTR v);

    [propget, id(1000+4)]
    HRESULT target([retval, out] BSTR *p);

    [propput, id(1000+5)]
    HRESULT alt([in] BSTR v);

    [propget, id(1000+5)]
    HRESULT alt([retval, out] BSTR *p);

    [propput, id(1000+6)]
    HRESULT noHref([in] VARIANT_BOOL v);

    [propget, id(1000+6)]
    HRESULT noHref([retval, out] VARIANT_BOOL *p);

    [propput, id(1000+7)]
    HRESULT host([in] BSTR v);

    [propget, id(1000+7)]
    HRESULT host([retval, out] BSTR *p);

    [propput, id(1000+8)]
    HRESULT hostname([in] BSTR v);

    [propget, id(1000+8)]
    HRESULT hostname([retval, out] BSTR *p);

    [propput, id(1000+9)]
    HRESULT pathname([in] BSTR v);

    [propget, id(1000+9)]
    HRESULT pathname([retval, out] BSTR *p);

    [propput, id(1000+10)]
    HRESULT port([in] BSTR v);

    [propget, id(1000+10)]
    HRESULT port([retval, out] BSTR *p);

    [propput, id(1000+11)]
    HRESULT protocol([in] BSTR v);

    [propget, id(1000+11)]
    HRESULT protocol([retval, out] BSTR *p);

    [propput, id(1000+12)]
    HRESULT search([in] BSTR v);

    [propget, id(1000+12)]
    HRESULT search([retval, out] BSTR *p);

    [propput, id(1000+13)]
    HRESULT hash([in] BSTR v);

    [propget, id(1000+13)]
    HRESULT hash([retval, out] BSTR *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]
    HRESULT onblur([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]
    HRESULT onblur([retval, out] VARIANT *p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]
    HRESULT onfocus([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]
    HRESULT onfocus([retval, out] VARIANT *p);

    [propput, id((0x80010000+15)), displaybind, bindable]
    HRESULT tabIndex([in] short v);

    [propget, id((0x80010000+15)), displaybind, bindable]
    HRESULT tabIndex([retval, out] short *p);

    [id((((0x80010000+500)+500)+1000)+0)]
    HRESULT focus();

    [id((((0x80010000+500)+500)+1000)+2)]
    HRESULT blur();
}




[
    hidden,
    uuid(3050f503-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLAreaElement
{
properties:
methods:
    [id(((0x80010000+500)+1))]                               void setAttribute(                                                   [in] BSTR strAttributeName,                                      [in] VARIANT AttValue,                                           [defaultvalue(1), in] LONG lFlags);                               [id(((0x80010000+500)+2))]                               VARIANT getAttribute(                                                [in] BSTR strAttributeName,                                      [defaultvalue(0), in] LONG lFlags);                               [id(((0x80010000+500)+3))]                            VARIANT_BOOL removeAttribute(                                        [in] BSTR strAttributeName,                                      [defaultvalue(1), in] LONG lFlags);                               [propput, id((((0x80010000+500)+500)+1)), bindable]               void className(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1)), bindable]               BSTR className();                                                     [propput, id((((0x80010000+500)+500)+2)), bindable]                      void id(BSTR v);                                                      [propget, id((((0x80010000+500)+500)+2)), bindable]                      BSTR id();                                                            [propget, id((((0x80010000+500)+500)+4))]                           BSTR tagName();                                                       [propget, id((0x80010000+8))]                     IHTMLElement *parentElement();                                        [propget, id((0x80010000+74)), nonbrowsable]               IHTMLStyle *style();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     void onhelp(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     VARIANT onhelp();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    void onclick(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    VARIANT onclick();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] void ondblclick(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] VARIANT ondblclick();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  void onkeydown(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  VARIANT onkeydown();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    void onkeyup(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    VARIANT onkeyup();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] void onkeypress(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] VARIANT onkeypress();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] void onmouseout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] VARIANT onmouseout();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  void onmouseover(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  VARIANT onmouseover();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  void onmousemove(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  VARIANT onmousemove();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  void onmousedown(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  VARIANT onmousedown();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  void onmouseup(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  VARIANT onmouseup();                                                  [propget, id((((0x80010000+500)+500)+18))] IDispatch* document();    [propput, id((0x80010000+69)), displaybind, bindable]      void title(BSTR v);                                                   [propget, id((0x80010000+69)), displaybind, bindable]      BSTR title();                                                         [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   void language(BSTR v);                                                [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   BSTR language();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  void onselectstart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  VARIANT onselectstart();                                              [id((((0x80010000+500)+500)+19))]                             void scrollIntoView([optional, in] VARIANT varargStart);              [id((((0x80010000+500)+500)+20))]                                   VARIANT_BOOL contains([in] IHTMLElement* pChild);                     [propget, id((((0x80010000+500)+500)+24)), bindable]             LONG sourceIndex();                                                   [propget, id((((0x80010000+500)+500)+25))]                      VARIANT recordNumber();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              void lang(BSTR v);                                                    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              BSTR lang();                                                          [propget, id((((0x80010000+500)+500)+8))]                        LONG offsetLeft();                                                    [propget, id((((0x80010000+500)+500)+9))]                         LONG offsetTop();                                                     [propget, id((((0x80010000+500)+500)+10))]                       LONG offsetWidth();                                                   [propget, id((((0x80010000+500)+500)+11))]                      LONG offsetHeight();                                                  [propget, id((((0x80010000+500)+500)+12))]                      IHTMLElement* offsetParent();                                         [propput, id((((0x80010000+500)+500)+26))]                         void innerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+26))]                         BSTR innerHTML();                                                     [propput, id((((0x80010000+500)+500)+27))]                         void innerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+27))]                         BSTR innerText();                                                     [propput, id((((0x80010000+500)+500)+28))]                         void outerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+28))]                         BSTR outerHTML();                                                     [propput, id((((0x80010000+500)+500)+29))]                         void outerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+29))]                         BSTR outerText();                                                     [id((((0x80010000+500)+500)+30))]                         void insertAdjacentHTML(                                             [in] BSTR where,                                                 [in] BSTR html);                                                  [id((((0x80010000+500)+500)+31))]                         void insertAdjacentText(                                             [in] BSTR where,                                                 [in] BSTR text);                                                  [propget, id((((0x80010000+500)+500)+32))]                    IHTMLElement* parentTextEdit();                                       [propget, id((((0x80010000+500)+500)+34))]                        VARIANT_BOOL isTextEdit();                                            [id((((0x80010000+500)+500)+33))]                                      void click();                                                         [propget, id((((0x80010000+500)+500)+35))]                           IHTMLFiltersCollection* filters();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  void ondragstart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  VARIANT ondragstart();                                                [id((((0x80010000+500)+500)+36))]                                   BSTR toString();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  void onbeforeupdate(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  VARIANT onbeforeupdate();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  void onafterupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  VARIANT onafterupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  void onerrorupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  VARIANT onerrorupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  void onrowexit(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  VARIANT onrowexit();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  void onrowenter(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  VARIANT onrowenter();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  void ondatasetchanged(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  VARIANT ondatasetchanged();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  void ondataavailable(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  VARIANT ondataavailable();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  void ondatasetcomplete(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  VARIANT ondatasetcomplete();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  void onfilterchange(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  VARIANT onfilterchange();                                             [propget, id((((0x80010000+500)+500)+37))]                          IDispatch* children();                                                [propget, id((((0x80010000+500)+500)+38))]                               IDispatch* all();        [propget, id(((0x80010000+500)+500)+39)]                        BSTR scopeName();                                                     [id(((0x80010000+500)+500)+40)]                                void setCapture([defaultvalue(-1), in] VARIANT_BOOL containerCapture);   [id(((0x80010000+500)+500)+41)]                            void releaseCapture();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  void onlosecapture(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  VARIANT onlosecapture();                                              [id(((0x80010000+500)+500)+42)]                        BSTR componentFromPoint([in] LONG x,[in] LONG y);                     [id(((0x80010000+500)+500)+43)]                                  void doScroll([optional, in] VARIANT component);                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  void onscroll(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  VARIANT onscroll();                                                   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    void ondrag(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    VARIANT ondrag();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  void ondragend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  VARIANT ondragend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  void ondragenter(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  VARIANT ondragenter();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  void ondragover(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  VARIANT ondragover();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  void ondragleave(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  VARIANT ondragleave();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    void ondrop(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    VARIANT ondrop();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  void onbeforecut(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  VARIANT onbeforecut();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     void oncut(VARIANT v);                                                [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     VARIANT oncut();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  void onbeforecopy(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  VARIANT onbeforecopy();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    void oncopy(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    VARIANT oncopy();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  void onbeforepaste(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  VARIANT onbeforepaste();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   void onpaste(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   VARIANT onpaste();                                                    [propget, id(((0x80010000+500)+500)+7), nonbrowsable]       IHTMLCurrentStyle* currentStyle();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  void onpropertychange(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  VARIANT onpropertychange();                                           [id(((0x80010000+500)+500)+44)]                            IHTMLRectCollection* getClientRects();                                [id(((0x80010000+500)+500)+45)]                     IHTMLRect* getBoundingClientRect();                                   [id((0x80010000+500)+4)]                             void setExpression(                                                  [in] BSTR propname,                                              [in] BSTR expr,                                                  [defaultvalue(""), in] BSTR lang);                                [id((0x80010000+500)+5)]                             VARIANT getExpression([in] BSTR propname);                            [id((0x80010000+500)+6)]                          VARIANT_BOOL removeExpression([in] BSTR propname);                    [propput, id((0x80010000+15)), displaybind, bindable]  void tabIndex(short v);                                               [propget, id((0x80010000+15)), displaybind, bindable]  short tabIndex();                                                     [id((((0x80010000+500)+500)+1000))]                                     void focus();                                                         [propput, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] void accessKey(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] BSTR accessKey();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    void onblur(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    VARIANT onblur();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   void onfocus(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   VARIANT onfocus();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  void onresize(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  VARIANT onresize();                                                   [id((((0x80010000+500)+500)+1000)+2)]                                      void blur();                                                          [id((((0x80010000+500)+500)+1000)+17)]                                 void addFilter([in] IUnknown* pUnk);                                  [id((((0x80010000+500)+500)+1000)+18)]                              void removeFilter([in] IUnknown* pUnk);                               [propget, id((((0x80010000+500)+500)+1000)+19), displaybind, bindable]  LONG clientHeight();                                                  [propget, id((((0x80010000+500)+500)+1000)+20), displaybind, bindable]  LONG clientWidth();                                                   [propget, id((((0x80010000+500)+500)+1000)+21), displaybind, bindable]  LONG clientTop();                                                     [propget, id((((0x80010000+500)+500)+1000)+22), displaybind, bindable]  LONG clientLeft();                                                    [id((0x80010000+500)+7)]                               VARIANT_BOOL attachEvent(                                            [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [id((0x80010000+500)+8)]                               void detachEvent(                                                    [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+116))] VARIANT readyState();   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  void onreadystatechange(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  VARIANT onreadystatechange();                                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  void onrowsdelete(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  VARIANT onrowsdelete();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  void onrowsinserted(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  VARIANT onrowsinserted();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  void oncellchange(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  VARIANT oncellchange();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       void dir(BSTR v);                                                     [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       BSTR dir();                                                           [id(((0x80010000+500)+500)+56)]                        IDispatch* createControlRange();                                      [propget, id(((0x80010000+500)+500)+57), displaybind, bindable]  LONG scrollHeight();                                                  [propget, id(((0x80010000+500)+500)+58), displaybind, bindable]  LONG scrollWidth();                                                   [propput, id(((0x80010000+500)+500)+59), displaybind, bindable] void scrollTop(LONG v);                                               [propget, id(((0x80010000+500)+500)+59), displaybind, bindable] LONG scrollTop();                                                     [propput, id(((0x80010000+500)+500)+60), displaybind, bindable]  void scrollLeft(LONG v);                                              [propget, id(((0x80010000+500)+500)+60), displaybind, bindable]  LONG scrollLeft();                                                    [id(((0x80010000+500)+500)+62)]                           void clearAttributes();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  void oncontextmenu(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  VARIANT oncontextmenu();                                              [id(((0x80010000+500)+500)+69)]                     IHTMLElement* insertAdjacentElement(                                 [in] BSTR where,                                                 [in] IHTMLElement* insertedElement);                              [id(((0x80010000+500)+500)+65)]                              IHTMLElement* applyElement([in] IHTMLElement* apply,[in] BSTR where);   [id(((0x80010000+500)+500)+70)]                           BSTR getAdjacentText([in] BSTR where);                                [id(((0x80010000+500)+500)+71)]                       BSTR replaceAdjacentText([in] BSTR where,[in] BSTR newText);          [propget, id(((0x80010000+500)+500)+72)]                  VARIANT_BOOL canHaveChildren();                                       [id(((0x80010000+500)+500)+80)]                               LONG addBehavior([in] BSTR bstrUrl,[optional, in] VARIANT* pvarFactory);   [id(((0x80010000+500)+500)+81)]                            VARIANT_BOOL removeBehavior([in] LONG cookie);                        [propget, id(((0x80010000+500)+500)+64), nonbrowsable]       IHTMLStyle* runtimeStyle();                                           [propget, id(((0x80010000+500)+500)+82)]                     IDispatch* behaviorUrns();                                            [propput, id(((0x80010000+500)+500)+83)]                           void tagUrn(BSTR v);                                                  [propget, id(((0x80010000+500)+500)+83)]                           BSTR tagUrn();                                                        [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  void onbeforeeditfocus(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  VARIANT onbeforeeditfocus();                                          [propget, id(((0x80010000+500)+500)+84), hidden, restricted]  LONG readyStateValue();                                               [id(((0x80010000+500)+500)+85)]                      IHTMLElementCollection* getElementsByTagName([in] BSTR v);       [id(((0x80010000+500)+500)+96)]                           void mergeAttributes(                                                [in] IHTMLElement* mergeThis,                                [optional, in] VARIANT* pvarFlags);                           [propget, id(((0x80010000+500)+500)+97)]                      VARIANT_BOOL isMultiLine();                                           [propget, id(((0x80010000+500)+500)+98)]                      VARIANT_BOOL canHaveHTML();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  void onlayoutcomplete(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  VARIANT onlayoutcomplete();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    void onpage(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    VARIANT onpage();                                                     [propput, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  void inflateBlock(VARIANT_BOOL v);                                    [propget, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  VARIANT_BOOL inflateBlock();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  void onbeforedeactivate(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  VARIANT onbeforedeactivate();                                         [id(((0x80010000+500)+500)+101)]                                 void setActive();                                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  void contentEditable(BSTR v);                                         [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  BSTR contentEditable();                                               [propget, id(((0x80010000+500)+500)+102)]                VARIANT_BOOL isContentEditable();                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] void hideFocus(VARIANT_BOOL v);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] VARIANT_BOOL hideFocus();                                             [propput, id((0x80010000+76)), displaybind, bindable]  void disabled(VARIANT_BOOL v);                                        [propget, id((0x80010000+76)), displaybind, bindable]  VARIANT_BOOL disabled();                                              [propget, id(((0x80010000+500)+500)+105)]                       VARIANT_BOOL isDisabled();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    void onmove(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    VARIANT onmove();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  void oncontrolselect(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  VARIANT oncontrolselect();                                            [id(((0x80010000+500)+500)+106)]                                 VARIANT_BOOL fireEvent(                                              [in] BSTR bstrEventName,                                         [optional, in] VARIANT* pvarEventObject);                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  void onresizestart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  VARIANT onresizestart();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  void onresizeend(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  VARIANT onresizeend();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  void onmovestart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  VARIANT onmovestart();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] void onmoveend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] VARIANT onmoveend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  void onmouseenter(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  VARIANT onmouseenter();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  void onmouseleave(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  VARIANT onmouseleave();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  void onactivate(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  VARIANT onactivate();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  void ondeactivate(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  VARIANT ondeactivate();                                               [id(((0x80010000+500)+500)+107)]                                  VARIANT_BOOL dragDrop();                                              [propget, id(((0x80010000+500)+500)+108), hidden, restricted, nonbrowsable]  LONG glyphMode();       [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  void onmousewheel(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  VARIANT onmousewheel();                                               [id(((0x80010000+500)+500)+112)]                                 void normalize();                                                     [id(((0x80010000+500)+500)+109)]                          IHTMLDOMAttribute* getAttributeNode([in] BSTR bstrname);              [id(((0x80010000+500)+500)+110)]                          IHTMLDOMAttribute* setAttributeNode([in] IHTMLDOMAttribute* pattr);   [id(((0x80010000+500)+500)+111)]                       IHTMLDOMAttribute* removeAttributeNode([in] IHTMLDOMAttribute* pattr);   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  void onbeforeactivate(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  VARIANT onbeforeactivate();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] void onfocusin(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] VARIANT onfocusin();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  void onfocusout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  VARIANT onfocusout();       [propget, id(((0x80010000+500)+500)+54), hidden]   LONG uniqueNumber();                                          [propget, id(((0x80010000+500)+500)+55), hidden]       BSTR uniqueID();     [propget, id(((0x80010000+500)+500)+46)]                          LONG nodeType();                                                      [propget, id(((0x80010000+500)+500)+47)]                        IHTMLDOMNode* parentNode();                                           [id(((0x80010000+500)+500)+48)]                              VARIANT_BOOL hasChildNodes();                                         [propget, id(((0x80010000+500)+500)+49)]                        IDispatch* childNodes();                                              [propget, id(((0x80010000+500)+500)+50)]                        IDispatch* attributes();                                              [id(((0x80010000+500)+500)+51)]                               IHTMLDOMNode* insertBefore(                                          [in] IHTMLDOMNode* newChild,                                 [optional, in] VARIANT refChild);                             [id(((0x80010000+500)+500)+52)]                                IHTMLDOMNode* removeChild([in] IHTMLDOMNode* oldChild);               [id(((0x80010000+500)+500)+53)]                               IHTMLDOMNode* replaceChild(                                          [in] IHTMLDOMNode* newChild,                                     [in] IHTMLDOMNode* oldChild);                                     [id(((0x80010000+500)+500)+61)]                                  IHTMLDOMNode* cloneNode([in] VARIANT_BOOL fDeep);                     [id(((0x80010000+500)+500)+66)]                                 IHTMLDOMNode* removeNode([defaultvalue(0), in] VARIANT_BOOL fDeep);   [id(((0x80010000+500)+500)+68)]                                   IHTMLDOMNode* swapNode([in] IHTMLDOMNode* otherNode);                 [id(((0x80010000+500)+500)+67)]                                IHTMLDOMNode* replaceNode([in] IHTMLDOMNode* replacement);            [id(((0x80010000+500)+500)+73)]                                IHTMLDOMNode* appendChild([in] IHTMLDOMNode* newChild);               [propget, id(((0x80010000+500)+500)+74)]                          BSTR nodeName();                                                      [propput, id(((0x80010000+500)+500)+75)]                         void nodeValue(VARIANT v);                                            [propget, id(((0x80010000+500)+500)+75)]                         VARIANT nodeValue();                                                  [propget, id(((0x80010000+500)+500)+76)]                        IHTMLDOMNode* firstChild();                                           [propget, id(((0x80010000+500)+500)+77)]                         IHTMLDOMNode* lastChild();                                            [propget, id(((0x80010000+500)+500)+78)]                   IHTMLDOMNode* previousSibling();                                      [propget, id(((0x80010000+500)+500)+79)]                       IHTMLDOMNode* nextSibling();        [propget, id(((0x80010000+500)+500)+113)]    IDispatch *ownerDocument();         [propput, id(((0x80010000+500)+500)+21)]       void dataFld(BSTR v);                                 [propget, id(((0x80010000+500)+500)+21)]       BSTR dataFld();                                       [propput, id(((0x80010000+500)+500)+22)]       void dataSrc(BSTR v);                                 [propget, id(((0x80010000+500)+500)+22)]       BSTR dataSrc();                                       [propput, id(((0x80010000+500)+500)+23)]  void dataFormatAs(BSTR v);                            [propget, id(((0x80010000+500)+500)+23)]  BSTR dataFormatAs();    [id((((0x80010000+500)+500)+200))]                      IHTMLDOMAttribute2 *ie8_getAttributeNode([in] BSTR bstrname);         [id((((0x80010000+500)+500)+200)+1)]                      IHTMLDOMAttribute2 *ie8_setAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+2)]                   IHTMLDOMAttribute2 *ie8_removeAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+3)]                              VARIANT_BOOL hasAttribute([in] BSTR name);                            [propput, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      void role(BSTR v);                                                    [propget, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      BSTR role();                                                          [propput, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  void ariaBusy(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  BSTR ariaBusy();                                                      [propput, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  void ariaChecked(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  BSTR ariaChecked();                                                   [propput, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  void ariaDisabled(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  BSTR ariaDisabled();                                                  [propput, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  void ariaExpanded(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  BSTR ariaExpanded();                                                  [propput, id((((0x80010000+500)+500)+200)+9), displaybind, bindable] void ariaHaspopup(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+9), displaybind, bindable]  BSTR ariaHaspopup();                                                  [propput, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  void ariaHidden(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  BSTR ariaHidden();                                                    [propput, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  void ariaInvalid(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  BSTR ariaInvalid();                                                   [propput, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  void ariaMultiselectable(BSTR v);                                     [propget, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  BSTR ariaMultiselectable();                                           [propput, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  void ariaPressed(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  BSTR ariaPressed();                                                   [propput, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  void ariaReadonly(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  BSTR ariaReadonly();                                                  [propput, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  void ariaRequired(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  BSTR ariaRequired();                                                  [propput, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  void ariaSecret(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  BSTR ariaSecret();                                                    [propput, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  void ariaSelected(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  BSTR ariaSelected();                                                  [id((((0x80010000+500)+500)+200)+18)]                          VARIANT ie8_getAttribute([in] BSTR strAttributeName);                 [id((((0x80010000+500)+500)+200)+19)]                          void ie8_setAttribute([in] BSTR strAttributeName,[in] VARIANT AttributeValue);   [id((((0x80010000+500)+500)+200)+20)]                       VARIANT_BOOL ie8_removeAttribute([in] BSTR strAttributeName);         [propget, id((((0x80010000+500)+500)+200)+21)]                   IHTMLAttributeCollection3 *ie8_attributes();                          [propput, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  void ariaValuenow(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  BSTR ariaValuenow();                                                  [propput, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  void ariaPosinset(short v);                                           [propget, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  short ariaPosinset();                                                 [propput, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  void ariaSetsize(short v);                                            [propget, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  short ariaSetsize();                                                  [propput, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] void ariaLevel(short v);                                              [propget, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] short ariaLevel();                                                    [propput, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  void ariaValuemin(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  BSTR ariaValuemin();                                                  [propput, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  void ariaValuemax(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  BSTR ariaValuemax();                                                  [propput, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  void ariaControls(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  BSTR ariaControls();                                                  [propput, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  void ariaDescribedby(BSTR v);                                         [propget, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  BSTR ariaDescribedby();                                               [propput, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  void ariaFlowto(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  BSTR ariaFlowto();                                                    [propput, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  void ariaLabelledby(BSTR v);                                          [propget, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  BSTR ariaLabelledby();                                                [propput, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  void ariaActivedescendant(BSTR v);                                    [propget, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  BSTR ariaActivedescendant();                                          [propput, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  void ariaOwns(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  BSTR ariaOwns();                                                      [id((((0x80010000+500)+500)+200)+34)]                             VARIANT_BOOL hasAttributes();                                         [propput, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  void ariaLive(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  BSTR ariaLive();                                                      [propput, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  void ariaRelevant(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  BSTR ariaRelevant();       [id(((0x80010000+500)+500)+114)]                  IHTMLElement *querySelector([in] BSTR v);                     [id(((0x80010000+500)+500)+115)]               IHTMLDOMChildrenCollection *querySelectorAll([in] BSTR v);    [propget, id((0x80010000+500)+9), hidden]        IDispatch *constructor();

    [propget, id((0x80010000+500)+9), hidden]
    IDispatch* constructor();

    [propput, id(1000+1)]
    void shape(BSTR v);

    [propget, id(1000+1)]
    BSTR shape();

    [propput, id(1000+2)]
    void coords(BSTR v);

    [propget, id(1000+2)]
    BSTR coords();

    [propput, id(DISPID_VALUE)]
    void href(BSTR v);

    [propget, id(DISPID_VALUE)]
    BSTR href();

    [propput, id(1000+4)]
    void target(BSTR v);

    [propget, id(1000+4)]
    BSTR target();

    [propput, id(1000+5)]
    void alt(BSTR v);

    [propget, id(1000+5)]
    BSTR alt();

    [propput, id(1000+6)]
    void noHref(VARIANT_BOOL v);

    [propget, id(1000+6)]
    VARIANT_BOOL noHref();

    [propput, id(1000+7)]
    void host(BSTR v);

    [propget, id(1000+7)]
    BSTR host();

    [propput, id(1000+8)]
    void hostname(BSTR v);

    [propget, id(1000+8)]
    BSTR hostname();

    [propput, id(1000+9)]
    void pathname(BSTR v);

    [propget, id(1000+9)]
    BSTR pathname();

    [propput, id(1000+10)]
    void port(BSTR v);

    [propget, id(1000+10)]
    BSTR port();

    [propput, id(1000+11)]
    void protocol(BSTR v);

    [propget, id(1000+11)]
    BSTR protocol();

    [propput, id(1000+12)]
    void search(BSTR v);

    [propget, id(1000+12)]
    BSTR search();

    [propput, id(1000+13)]
    void hash(BSTR v);

    [propget, id(1000+13)]
    BSTR hash();

    [propput, id((1000+150)+1)]
    void ie8_shape(BSTR v);

    [propget, id((1000+150)+1)]
    BSTR ie8_shape();

    [propput, id((1000+150)+2)]
    void ie8_coords(BSTR v);

    [propget, id((1000+150)+2)]
    BSTR ie8_coords();

    [propput, id((1000+150)+3)]
    void ie8_href(BSTR v);

    [propget, id((1000+150)+3)]
    BSTR ie8_href();
};




[
    odl,
    oleautomation,
    dual,
    uuid(3050f32a-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLLabelElement : IDispatch
{
    [propput, id(1000), displaybind, bindable]
    HRESULT htmlFor([in] BSTR v);

    [propget, id(1000), displaybind, bindable]
    HRESULT htmlFor([out, retval] BSTR *p);

    [propput, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable]
    HRESULT accessKey([in] BSTR v);

    [propget, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable]
    HRESULT accessKey([out, retval] BSTR *p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f832-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLLabelElement2 : IDispatch
{
    [propget, id(1000+2)]
    HRESULT form([out, retval] IHTMLFormElement **p);
}




[
    hidden,
    uuid(3050f522-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLLabelElement
{
properties:
methods:
    [id(((0x80010000+500)+1))]                               void setAttribute(                                                   [in] BSTR strAttributeName,                                      [in] VARIANT AttValue,                                           [defaultvalue(1), in] LONG lFlags);                               [id(((0x80010000+500)+2))]                               VARIANT getAttribute(                                                [in] BSTR strAttributeName,                                      [defaultvalue(0), in] LONG lFlags);                               [id(((0x80010000+500)+3))]                            VARIANT_BOOL removeAttribute(                                        [in] BSTR strAttributeName,                                      [defaultvalue(1), in] LONG lFlags);                               [propput, id((((0x80010000+500)+500)+1)), bindable]               void className(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1)), bindable]               BSTR className();                                                     [propput, id((((0x80010000+500)+500)+2)), bindable]                      void id(BSTR v);                                                      [propget, id((((0x80010000+500)+500)+2)), bindable]                      BSTR id();                                                            [propget, id((((0x80010000+500)+500)+4))]                           BSTR tagName();                                                       [propget, id((0x80010000+8))]                     IHTMLElement *parentElement();                                        [propget, id((0x80010000+74)), nonbrowsable]               IHTMLStyle *style();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     void onhelp(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     VARIANT onhelp();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    void onclick(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    VARIANT onclick();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] void ondblclick(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] VARIANT ondblclick();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  void onkeydown(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  VARIANT onkeydown();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    void onkeyup(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    VARIANT onkeyup();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] void onkeypress(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] VARIANT onkeypress();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] void onmouseout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] VARIANT onmouseout();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  void onmouseover(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  VARIANT onmouseover();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  void onmousemove(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  VARIANT onmousemove();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  void onmousedown(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  VARIANT onmousedown();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  void onmouseup(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  VARIANT onmouseup();                                                  [propget, id((((0x80010000+500)+500)+18))] IDispatch* document();    [propput, id((0x80010000+69)), displaybind, bindable]      void title(BSTR v);                                                   [propget, id((0x80010000+69)), displaybind, bindable]      BSTR title();                                                         [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   void language(BSTR v);                                                [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   BSTR language();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  void onselectstart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  VARIANT onselectstart();                                              [id((((0x80010000+500)+500)+19))]                             void scrollIntoView([optional, in] VARIANT varargStart);              [id((((0x80010000+500)+500)+20))]                                   VARIANT_BOOL contains([in] IHTMLElement* pChild);                     [propget, id((((0x80010000+500)+500)+24)), bindable]             LONG sourceIndex();                                                   [propget, id((((0x80010000+500)+500)+25))]                      VARIANT recordNumber();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              void lang(BSTR v);                                                    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              BSTR lang();                                                          [propget, id((((0x80010000+500)+500)+8))]                        LONG offsetLeft();                                                    [propget, id((((0x80010000+500)+500)+9))]                         LONG offsetTop();                                                     [propget, id((((0x80010000+500)+500)+10))]                       LONG offsetWidth();                                                   [propget, id((((0x80010000+500)+500)+11))]                      LONG offsetHeight();                                                  [propget, id((((0x80010000+500)+500)+12))]                      IHTMLElement* offsetParent();                                         [propput, id((((0x80010000+500)+500)+26))]                         void innerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+26))]                         BSTR innerHTML();                                                     [propput, id((((0x80010000+500)+500)+27))]                         void innerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+27))]                         BSTR innerText();                                                     [propput, id((((0x80010000+500)+500)+28))]                         void outerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+28))]                         BSTR outerHTML();                                                     [propput, id((((0x80010000+500)+500)+29))]                         void outerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+29))]                         BSTR outerText();                                                     [id((((0x80010000+500)+500)+30))]                         void insertAdjacentHTML(                                             [in] BSTR where,                                                 [in] BSTR html);                                                  [id((((0x80010000+500)+500)+31))]                         void insertAdjacentText(                                             [in] BSTR where,                                                 [in] BSTR text);                                                  [propget, id((((0x80010000+500)+500)+32))]                    IHTMLElement* parentTextEdit();                                       [propget, id((((0x80010000+500)+500)+34))]                        VARIANT_BOOL isTextEdit();                                            [id((((0x80010000+500)+500)+33))]                                      void click();                                                         [propget, id((((0x80010000+500)+500)+35))]                           IHTMLFiltersCollection* filters();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  void ondragstart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  VARIANT ondragstart();                                                [id((((0x80010000+500)+500)+36))]                                   BSTR toString();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  void onbeforeupdate(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  VARIANT onbeforeupdate();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  void onafterupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  VARIANT onafterupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  void onerrorupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  VARIANT onerrorupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  void onrowexit(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  VARIANT onrowexit();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  void onrowenter(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  VARIANT onrowenter();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  void ondatasetchanged(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  VARIANT ondatasetchanged();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  void ondataavailable(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  VARIANT ondataavailable();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  void ondatasetcomplete(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  VARIANT ondatasetcomplete();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  void onfilterchange(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  VARIANT onfilterchange();                                             [propget, id((((0x80010000+500)+500)+37))]                          IDispatch* children();                                                [propget, id((((0x80010000+500)+500)+38))]                               IDispatch* all();        [propget, id(((0x80010000+500)+500)+39)]                        BSTR scopeName();                                                     [id(((0x80010000+500)+500)+40)]                                void setCapture([defaultvalue(-1), in] VARIANT_BOOL containerCapture);   [id(((0x80010000+500)+500)+41)]                            void releaseCapture();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  void onlosecapture(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  VARIANT onlosecapture();                                              [id(((0x80010000+500)+500)+42)]                        BSTR componentFromPoint([in] LONG x,[in] LONG y);                     [id(((0x80010000+500)+500)+43)]                                  void doScroll([optional, in] VARIANT component);                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  void onscroll(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  VARIANT onscroll();                                                   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    void ondrag(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    VARIANT ondrag();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  void ondragend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  VARIANT ondragend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  void ondragenter(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  VARIANT ondragenter();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  void ondragover(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  VARIANT ondragover();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  void ondragleave(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  VARIANT ondragleave();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    void ondrop(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    VARIANT ondrop();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  void onbeforecut(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  VARIANT onbeforecut();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     void oncut(VARIANT v);                                                [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     VARIANT oncut();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  void onbeforecopy(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  VARIANT onbeforecopy();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    void oncopy(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    VARIANT oncopy();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  void onbeforepaste(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  VARIANT onbeforepaste();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   void onpaste(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   VARIANT onpaste();                                                    [propget, id(((0x80010000+500)+500)+7), nonbrowsable]       IHTMLCurrentStyle* currentStyle();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  void onpropertychange(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  VARIANT onpropertychange();                                           [id(((0x80010000+500)+500)+44)]                            IHTMLRectCollection* getClientRects();                                [id(((0x80010000+500)+500)+45)]                     IHTMLRect* getBoundingClientRect();                                   [id((0x80010000+500)+4)]                             void setExpression(                                                  [in] BSTR propname,                                              [in] BSTR expr,                                                  [defaultvalue(""), in] BSTR lang);                                [id((0x80010000+500)+5)]                             VARIANT getExpression([in] BSTR propname);                            [id((0x80010000+500)+6)]                          VARIANT_BOOL removeExpression([in] BSTR propname);                    [propput, id((0x80010000+15)), displaybind, bindable]  void tabIndex(short v);                                               [propget, id((0x80010000+15)), displaybind, bindable]  short tabIndex();                                                     [id((((0x80010000+500)+500)+1000))]                                     void focus();                                                         [propput, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] void accessKey(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] BSTR accessKey();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    void onblur(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    VARIANT onblur();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   void onfocus(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   VARIANT onfocus();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  void onresize(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  VARIANT onresize();                                                   [id((((0x80010000+500)+500)+1000)+2)]                                      void blur();                                                          [id((((0x80010000+500)+500)+1000)+17)]                                 void addFilter([in] IUnknown* pUnk);                                  [id((((0x80010000+500)+500)+1000)+18)]                              void removeFilter([in] IUnknown* pUnk);                               [propget, id((((0x80010000+500)+500)+1000)+19), displaybind, bindable]  LONG clientHeight();                                                  [propget, id((((0x80010000+500)+500)+1000)+20), displaybind, bindable]  LONG clientWidth();                                                   [propget, id((((0x80010000+500)+500)+1000)+21), displaybind, bindable]  LONG clientTop();                                                     [propget, id((((0x80010000+500)+500)+1000)+22), displaybind, bindable]  LONG clientLeft();                                                    [id((0x80010000+500)+7)]                               VARIANT_BOOL attachEvent(                                            [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [id((0x80010000+500)+8)]                               void detachEvent(                                                    [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+116))] VARIANT readyState();   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  void onreadystatechange(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  VARIANT onreadystatechange();                                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  void onrowsdelete(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  VARIANT onrowsdelete();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  void onrowsinserted(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  VARIANT onrowsinserted();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  void oncellchange(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  VARIANT oncellchange();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       void dir(BSTR v);                                                     [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       BSTR dir();                                                           [id(((0x80010000+500)+500)+56)]                        IDispatch* createControlRange();                                      [propget, id(((0x80010000+500)+500)+57), displaybind, bindable]  LONG scrollHeight();                                                  [propget, id(((0x80010000+500)+500)+58), displaybind, bindable]  LONG scrollWidth();                                                   [propput, id(((0x80010000+500)+500)+59), displaybind, bindable] void scrollTop(LONG v);                                               [propget, id(((0x80010000+500)+500)+59), displaybind, bindable] LONG scrollTop();                                                     [propput, id(((0x80010000+500)+500)+60), displaybind, bindable]  void scrollLeft(LONG v);                                              [propget, id(((0x80010000+500)+500)+60), displaybind, bindable]  LONG scrollLeft();                                                    [id(((0x80010000+500)+500)+62)]                           void clearAttributes();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  void oncontextmenu(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  VARIANT oncontextmenu();                                              [id(((0x80010000+500)+500)+69)]                     IHTMLElement* insertAdjacentElement(                                 [in] BSTR where,                                                 [in] IHTMLElement* insertedElement);                              [id(((0x80010000+500)+500)+65)]                              IHTMLElement* applyElement([in] IHTMLElement* apply,[in] BSTR where);   [id(((0x80010000+500)+500)+70)]                           BSTR getAdjacentText([in] BSTR where);                                [id(((0x80010000+500)+500)+71)]                       BSTR replaceAdjacentText([in] BSTR where,[in] BSTR newText);          [propget, id(((0x80010000+500)+500)+72)]                  VARIANT_BOOL canHaveChildren();                                       [id(((0x80010000+500)+500)+80)]                               LONG addBehavior([in] BSTR bstrUrl,[optional, in] VARIANT* pvarFactory);   [id(((0x80010000+500)+500)+81)]                            VARIANT_BOOL removeBehavior([in] LONG cookie);                        [propget, id(((0x80010000+500)+500)+64), nonbrowsable]       IHTMLStyle* runtimeStyle();                                           [propget, id(((0x80010000+500)+500)+82)]                     IDispatch* behaviorUrns();                                            [propput, id(((0x80010000+500)+500)+83)]                           void tagUrn(BSTR v);                                                  [propget, id(((0x80010000+500)+500)+83)]                           BSTR tagUrn();                                                        [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  void onbeforeeditfocus(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  VARIANT onbeforeeditfocus();                                          [propget, id(((0x80010000+500)+500)+84), hidden, restricted]  LONG readyStateValue();                                               [id(((0x80010000+500)+500)+85)]                      IHTMLElementCollection* getElementsByTagName([in] BSTR v);       [id(((0x80010000+500)+500)+96)]                           void mergeAttributes(                                                [in] IHTMLElement* mergeThis,                                [optional, in] VARIANT* pvarFlags);                           [propget, id(((0x80010000+500)+500)+97)]                      VARIANT_BOOL isMultiLine();                                           [propget, id(((0x80010000+500)+500)+98)]                      VARIANT_BOOL canHaveHTML();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  void onlayoutcomplete(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  VARIANT onlayoutcomplete();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    void onpage(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    VARIANT onpage();                                                     [propput, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  void inflateBlock(VARIANT_BOOL v);                                    [propget, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  VARIANT_BOOL inflateBlock();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  void onbeforedeactivate(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  VARIANT onbeforedeactivate();                                         [id(((0x80010000+500)+500)+101)]                                 void setActive();                                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  void contentEditable(BSTR v);                                         [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  BSTR contentEditable();                                               [propget, id(((0x80010000+500)+500)+102)]                VARIANT_BOOL isContentEditable();                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] void hideFocus(VARIANT_BOOL v);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] VARIANT_BOOL hideFocus();                                             [propput, id((0x80010000+76)), displaybind, bindable]  void disabled(VARIANT_BOOL v);                                        [propget, id((0x80010000+76)), displaybind, bindable]  VARIANT_BOOL disabled();                                              [propget, id(((0x80010000+500)+500)+105)]                       VARIANT_BOOL isDisabled();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    void onmove(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    VARIANT onmove();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  void oncontrolselect(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  VARIANT oncontrolselect();                                            [id(((0x80010000+500)+500)+106)]                                 VARIANT_BOOL fireEvent(                                              [in] BSTR bstrEventName,                                         [optional, in] VARIANT* pvarEventObject);                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  void onresizestart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  VARIANT onresizestart();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  void onresizeend(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  VARIANT onresizeend();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  void onmovestart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  VARIANT onmovestart();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] void onmoveend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] VARIANT onmoveend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  void onmouseenter(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  VARIANT onmouseenter();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  void onmouseleave(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  VARIANT onmouseleave();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  void onactivate(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  VARIANT onactivate();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  void ondeactivate(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  VARIANT ondeactivate();                                               [id(((0x80010000+500)+500)+107)]                                  VARIANT_BOOL dragDrop();                                              [propget, id(((0x80010000+500)+500)+108), hidden, restricted, nonbrowsable]  LONG glyphMode();       [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  void onmousewheel(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  VARIANT onmousewheel();                                               [id(((0x80010000+500)+500)+112)]                                 void normalize();                                                     [id(((0x80010000+500)+500)+109)]                          IHTMLDOMAttribute* getAttributeNode([in] BSTR bstrname);              [id(((0x80010000+500)+500)+110)]                          IHTMLDOMAttribute* setAttributeNode([in] IHTMLDOMAttribute* pattr);   [id(((0x80010000+500)+500)+111)]                       IHTMLDOMAttribute* removeAttributeNode([in] IHTMLDOMAttribute* pattr);   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  void onbeforeactivate(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  VARIANT onbeforeactivate();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] void onfocusin(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] VARIANT onfocusin();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  void onfocusout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  VARIANT onfocusout();       [propget, id(((0x80010000+500)+500)+54), hidden]   LONG uniqueNumber();                                          [propget, id(((0x80010000+500)+500)+55), hidden]       BSTR uniqueID();     [propget, id(((0x80010000+500)+500)+46)]                          LONG nodeType();                                                      [propget, id(((0x80010000+500)+500)+47)]                        IHTMLDOMNode* parentNode();                                           [id(((0x80010000+500)+500)+48)]                              VARIANT_BOOL hasChildNodes();                                         [propget, id(((0x80010000+500)+500)+49)]                        IDispatch* childNodes();                                              [propget, id(((0x80010000+500)+500)+50)]                        IDispatch* attributes();                                              [id(((0x80010000+500)+500)+51)]                               IHTMLDOMNode* insertBefore(                                          [in] IHTMLDOMNode* newChild,                                 [optional, in] VARIANT refChild);                             [id(((0x80010000+500)+500)+52)]                                IHTMLDOMNode* removeChild([in] IHTMLDOMNode* oldChild);               [id(((0x80010000+500)+500)+53)]                               IHTMLDOMNode* replaceChild(                                          [in] IHTMLDOMNode* newChild,                                     [in] IHTMLDOMNode* oldChild);                                     [id(((0x80010000+500)+500)+61)]                                  IHTMLDOMNode* cloneNode([in] VARIANT_BOOL fDeep);                     [id(((0x80010000+500)+500)+66)]                                 IHTMLDOMNode* removeNode([defaultvalue(0), in] VARIANT_BOOL fDeep);   [id(((0x80010000+500)+500)+68)]                                   IHTMLDOMNode* swapNode([in] IHTMLDOMNode* otherNode);                 [id(((0x80010000+500)+500)+67)]                                IHTMLDOMNode* replaceNode([in] IHTMLDOMNode* replacement);            [id(((0x80010000+500)+500)+73)]                                IHTMLDOMNode* appendChild([in] IHTMLDOMNode* newChild);               [propget, id(((0x80010000+500)+500)+74)]                          BSTR nodeName();                                                      [propput, id(((0x80010000+500)+500)+75)]                         void nodeValue(VARIANT v);                                            [propget, id(((0x80010000+500)+500)+75)]                         VARIANT nodeValue();                                                  [propget, id(((0x80010000+500)+500)+76)]                        IHTMLDOMNode* firstChild();                                           [propget, id(((0x80010000+500)+500)+77)]                         IHTMLDOMNode* lastChild();                                            [propget, id(((0x80010000+500)+500)+78)]                   IHTMLDOMNode* previousSibling();                                      [propget, id(((0x80010000+500)+500)+79)]                       IHTMLDOMNode* nextSibling();        [propget, id(((0x80010000+500)+500)+113)]    IDispatch *ownerDocument();         [propput, id(((0x80010000+500)+500)+21)]       void dataFld(BSTR v);                                 [propget, id(((0x80010000+500)+500)+21)]       BSTR dataFld();                                       [propput, id(((0x80010000+500)+500)+22)]       void dataSrc(BSTR v);                                 [propget, id(((0x80010000+500)+500)+22)]       BSTR dataSrc();                                       [propput, id(((0x80010000+500)+500)+23)]  void dataFormatAs(BSTR v);                            [propget, id(((0x80010000+500)+500)+23)]  BSTR dataFormatAs();    [id((((0x80010000+500)+500)+200))]                      IHTMLDOMAttribute2 *ie8_getAttributeNode([in] BSTR bstrname);         [id((((0x80010000+500)+500)+200)+1)]                      IHTMLDOMAttribute2 *ie8_setAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+2)]                   IHTMLDOMAttribute2 *ie8_removeAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+3)]                              VARIANT_BOOL hasAttribute([in] BSTR name);                            [propput, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      void role(BSTR v);                                                    [propget, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      BSTR role();                                                          [propput, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  void ariaBusy(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  BSTR ariaBusy();                                                      [propput, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  void ariaChecked(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  BSTR ariaChecked();                                                   [propput, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  void ariaDisabled(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  BSTR ariaDisabled();                                                  [propput, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  void ariaExpanded(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  BSTR ariaExpanded();                                                  [propput, id((((0x80010000+500)+500)+200)+9), displaybind, bindable] void ariaHaspopup(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+9), displaybind, bindable]  BSTR ariaHaspopup();                                                  [propput, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  void ariaHidden(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  BSTR ariaHidden();                                                    [propput, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  void ariaInvalid(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  BSTR ariaInvalid();                                                   [propput, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  void ariaMultiselectable(BSTR v);                                     [propget, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  BSTR ariaMultiselectable();                                           [propput, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  void ariaPressed(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  BSTR ariaPressed();                                                   [propput, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  void ariaReadonly(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  BSTR ariaReadonly();                                                  [propput, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  void ariaRequired(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  BSTR ariaRequired();                                                  [propput, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  void ariaSecret(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  BSTR ariaSecret();                                                    [propput, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  void ariaSelected(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  BSTR ariaSelected();                                                  [id((((0x80010000+500)+500)+200)+18)]                          VARIANT ie8_getAttribute([in] BSTR strAttributeName);                 [id((((0x80010000+500)+500)+200)+19)]                          void ie8_setAttribute([in] BSTR strAttributeName,[in] VARIANT AttributeValue);   [id((((0x80010000+500)+500)+200)+20)]                       VARIANT_BOOL ie8_removeAttribute([in] BSTR strAttributeName);         [propget, id((((0x80010000+500)+500)+200)+21)]                   IHTMLAttributeCollection3 *ie8_attributes();                          [propput, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  void ariaValuenow(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  BSTR ariaValuenow();                                                  [propput, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  void ariaPosinset(short v);                                           [propget, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  short ariaPosinset();                                                 [propput, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  void ariaSetsize(short v);                                            [propget, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  short ariaSetsize();                                                  [propput, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] void ariaLevel(short v);                                              [propget, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] short ariaLevel();                                                    [propput, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  void ariaValuemin(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  BSTR ariaValuemin();                                                  [propput, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  void ariaValuemax(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  BSTR ariaValuemax();                                                  [propput, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  void ariaControls(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  BSTR ariaControls();                                                  [propput, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  void ariaDescribedby(BSTR v);                                         [propget, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  BSTR ariaDescribedby();                                               [propput, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  void ariaFlowto(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  BSTR ariaFlowto();                                                    [propput, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  void ariaLabelledby(BSTR v);                                          [propget, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  BSTR ariaLabelledby();                                                [propput, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  void ariaActivedescendant(BSTR v);                                    [propget, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  BSTR ariaActivedescendant();                                          [propput, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  void ariaOwns(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  BSTR ariaOwns();                                                      [id((((0x80010000+500)+500)+200)+34)]                             VARIANT_BOOL hasAttributes();                                         [propput, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  void ariaLive(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  BSTR ariaLive();                                                      [propput, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  void ariaRelevant(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  BSTR ariaRelevant();       [id(((0x80010000+500)+500)+114)]                  IHTMLElement *querySelector([in] BSTR v);                     [id(((0x80010000+500)+500)+115)]               IHTMLDOMChildrenCollection *querySelectorAll([in] BSTR v);    [propget, id((0x80010000+500)+9), hidden]        IDispatch *constructor();

    [propput, id(1000), displaybind, bindable]
    void htmlFor(BSTR v);

    [propget, id(1000), displaybind, bindable]
    BSTR htmlFor();

    [propget, id(1000+2)]
    IHTMLFormElement *form();
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050F21F-98B5-11CF-BB82-00AA00BDCE0B)
]
interface IHTMLElementCollection : IDispatch
{
    [id(((1000+500)+1))]
    HRESULT toString([retval, out] BSTR *String);

    [propput, id((1000+500))]
    HRESULT length([in] LONG v);

    [propget, id((1000+500))]
    HRESULT length([retval, out] LONG *p);

    [propget, id(DISPID_NEWENUM)]
    HRESULT _newEnum([retval, out] IUnknown **p);

    [id(DISPID_VALUE)]
    HRESULT item(
        [optional, in] VARIANT name,
        [optional, in] VARIANT index,
        [retval,  out] IDispatch **pdisp);

    [id(((1000+500)+2))]
    HRESULT tags(
        [in] VARIANT tagName,
        [retval, out] IDispatch **pdisp);
}




[
    hidden,
    uuid(3050f56b-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLElementCollection
{
properties:
methods:
    [id(((1000+500)+1))]
    BSTR toString();

    [propput, id((1000+500))]
    void length(LONG v);

    [propget, id((1000+500))]
    LONG length();

    [propget, id(DISPID_NEWENUM), hidden, restricted]
    IUnknown *_newEnum();

    [id(DISPID_VALUE)]
    IDispatch *item(
            [in, optional] VARIANT name,
            [in, optional] VARIANT index);

    [id(((1000+500)+2))]
    IDispatch *tags(
            [in] VARIANT tagName);

    [id((1000+500)+5)]
    IDispatch *urns([in] VARIANT urn);

    [id((1000+500)+6)]
    IDispatch *namedItem([in] BSTR name);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f244-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLSelectElement : IDispatch
{
    [propput, id(1000+2), displaybind, bindable]
    HRESULT size([in] LONG v);

    [propget, id(1000+2), displaybind, bindable]
    HRESULT size([retval, out] LONG *p);

    [propput, id(1000+3), displaybind, bindable]
    HRESULT multiple([in] VARIANT_BOOL v);

    [propget, id(1000+3), displaybind, bindable]
    HRESULT multiple([retval, out] VARIANT_BOOL *p);

    [propput, id((0x80010000+0)), displaybind, bindable]
    HRESULT name([in] BSTR v);

    [propget, id((0x80010000+0)), displaybind, bindable]
    HRESULT name([retval, out] BSTR *p);

    [propget, id(1000+5)]
    HRESULT options([retval, out] IDispatch **p);

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+30)), displaybind, bindable]
    HRESULT onchange([in] VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+30)), displaybind, bindable]
    HRESULT onchange([retval, out] VARIANT *p);

    [propput, id(1000+10)]
    HRESULT selectedIndex([in] LONG v);

    [propget, id(1000+10)]
    HRESULT selectedIndex([retval, out] LONG *p);

    [propget, id(1000+12), displaybind, bindable]
    HRESULT type([retval, out] BSTR *p);

    [propput, id(1000+11), displaybind, bindable]
    HRESULT value([in] BSTR v);

    [propget, id(1000+11), displaybind, bindable]
    HRESULT value([retval, out] BSTR *p);

    [propput, id((0x80010000+76)), displaybind, bindable]
    HRESULT disabled([in] VARIANT_BOOL v);

    [propget, id((0x80010000+76)), displaybind, bindable]
    HRESULT disabled([retval, out] VARIANT_BOOL *p);

    [propget, id((((0x80010000+500)+500)+1000)+4)]
    HRESULT form([retval, out] IHTMLFormElement **p);

    [id((1000+500)+3)]
    HRESULT add(
        [in] IHTMLElement *element,
        [optional, in] VARIANT before);

    [id((1000+500)+4)]
    HRESULT remove([defaultvalue(-1), in] LONG index);

    [propput, id((1000+500))]
    HRESULT length([in] LONG v);

    [propget, id((1000+500))]
    HRESULT length([retval, out] LONG *p);

    [propget, id(DISPID_NEWENUM), hidden, restricted]
    HRESULT _newEnum([retval, out] IUnknown **p);

    [id(DISPID_VALUE)]
    HRESULT item(
        [optional, in] VARIANT name,
        [optional, in] VARIANT index,
        [retval, out] IDispatch **pdisp);

    [id((1000+500)+2)]
    HRESULT tags(
        [in] VARIANT tagName,
        [retval, out] IDispatch **pdisp);
}




[
    hidden,
    uuid(3050f531-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLSelectElement
{
properties:
methods:
    [id(((0x80010000+500)+1))]                               void setAttribute(                                                   [in] BSTR strAttributeName,                                      [in] VARIANT AttValue,                                           [defaultvalue(1), in] LONG lFlags);                               [id(((0x80010000+500)+2))]                               VARIANT getAttribute(                                                [in] BSTR strAttributeName,                                      [defaultvalue(0), in] LONG lFlags);                               [id(((0x80010000+500)+3))]                            VARIANT_BOOL removeAttribute(                                        [in] BSTR strAttributeName,                                      [defaultvalue(1), in] LONG lFlags);                               [propput, id((((0x80010000+500)+500)+1)), bindable]               void className(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1)), bindable]               BSTR className();                                                     [propput, id((((0x80010000+500)+500)+2)), bindable]                      void id(BSTR v);                                                      [propget, id((((0x80010000+500)+500)+2)), bindable]                      BSTR id();                                                            [propget, id((((0x80010000+500)+500)+4))]                           BSTR tagName();                                                       [propget, id((0x80010000+8))]                     IHTMLElement *parentElement();                                        [propget, id((0x80010000+74)), nonbrowsable]               IHTMLStyle *style();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     void onhelp(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     VARIANT onhelp();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    void onclick(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    VARIANT onclick();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] void ondblclick(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] VARIANT ondblclick();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  void onkeydown(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  VARIANT onkeydown();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    void onkeyup(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    VARIANT onkeyup();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] void onkeypress(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] VARIANT onkeypress();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] void onmouseout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] VARIANT onmouseout();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  void onmouseover(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  VARIANT onmouseover();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  void onmousemove(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  VARIANT onmousemove();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  void onmousedown(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  VARIANT onmousedown();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  void onmouseup(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  VARIANT onmouseup();                                                  [propget, id((((0x80010000+500)+500)+18))] IDispatch* document();    [propput, id((0x80010000+69)), displaybind, bindable]      void title(BSTR v);                                                   [propget, id((0x80010000+69)), displaybind, bindable]      BSTR title();                                                         [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   void language(BSTR v);                                                [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   BSTR language();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  void onselectstart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  VARIANT onselectstart();                                              [id((((0x80010000+500)+500)+19))]                             void scrollIntoView([optional, in] VARIANT varargStart);              [id((((0x80010000+500)+500)+20))]                                   VARIANT_BOOL contains([in] IHTMLElement* pChild);                     [propget, id((((0x80010000+500)+500)+24)), bindable]             LONG sourceIndex();                                                   [propget, id((((0x80010000+500)+500)+25))]                      VARIANT recordNumber();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              void lang(BSTR v);                                                    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              BSTR lang();                                                          [propget, id((((0x80010000+500)+500)+8))]                        LONG offsetLeft();                                                    [propget, id((((0x80010000+500)+500)+9))]                         LONG offsetTop();                                                     [propget, id((((0x80010000+500)+500)+10))]                       LONG offsetWidth();                                                   [propget, id((((0x80010000+500)+500)+11))]                      LONG offsetHeight();                                                  [propget, id((((0x80010000+500)+500)+12))]                      IHTMLElement* offsetParent();                                         [propput, id((((0x80010000+500)+500)+26))]                         void innerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+26))]                         BSTR innerHTML();                                                     [propput, id((((0x80010000+500)+500)+27))]                         void innerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+27))]                         BSTR innerText();                                                     [propput, id((((0x80010000+500)+500)+28))]                         void outerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+28))]                         BSTR outerHTML();                                                     [propput, id((((0x80010000+500)+500)+29))]                         void outerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+29))]                         BSTR outerText();                                                     [id((((0x80010000+500)+500)+30))]                         void insertAdjacentHTML(                                             [in] BSTR where,                                                 [in] BSTR html);                                                  [id((((0x80010000+500)+500)+31))]                         void insertAdjacentText(                                             [in] BSTR where,                                                 [in] BSTR text);                                                  [propget, id((((0x80010000+500)+500)+32))]                    IHTMLElement* parentTextEdit();                                       [propget, id((((0x80010000+500)+500)+34))]                        VARIANT_BOOL isTextEdit();                                            [id((((0x80010000+500)+500)+33))]                                      void click();                                                         [propget, id((((0x80010000+500)+500)+35))]                           IHTMLFiltersCollection* filters();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  void ondragstart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  VARIANT ondragstart();                                                [id((((0x80010000+500)+500)+36))]                                   BSTR toString();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  void onbeforeupdate(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  VARIANT onbeforeupdate();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  void onafterupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  VARIANT onafterupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  void onerrorupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  VARIANT onerrorupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  void onrowexit(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  VARIANT onrowexit();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  void onrowenter(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  VARIANT onrowenter();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  void ondatasetchanged(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  VARIANT ondatasetchanged();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  void ondataavailable(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  VARIANT ondataavailable();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  void ondatasetcomplete(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  VARIANT ondatasetcomplete();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  void onfilterchange(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  VARIANT onfilterchange();                                             [propget, id((((0x80010000+500)+500)+37))]                          IDispatch* children();                                                [propget, id((((0x80010000+500)+500)+38))]                               IDispatch* all();        [propget, id(((0x80010000+500)+500)+39)]                        BSTR scopeName();                                                     [id(((0x80010000+500)+500)+40)]                                void setCapture([defaultvalue(-1), in] VARIANT_BOOL containerCapture);   [id(((0x80010000+500)+500)+41)]                            void releaseCapture();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  void onlosecapture(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  VARIANT onlosecapture();                                              [id(((0x80010000+500)+500)+42)]                        BSTR componentFromPoint([in] LONG x,[in] LONG y);                     [id(((0x80010000+500)+500)+43)]                                  void doScroll([optional, in] VARIANT component);                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  void onscroll(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  VARIANT onscroll();                                                   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    void ondrag(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    VARIANT ondrag();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  void ondragend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  VARIANT ondragend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  void ondragenter(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  VARIANT ondragenter();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  void ondragover(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  VARIANT ondragover();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  void ondragleave(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  VARIANT ondragleave();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    void ondrop(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    VARIANT ondrop();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  void onbeforecut(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  VARIANT onbeforecut();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     void oncut(VARIANT v);                                                [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     VARIANT oncut();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  void onbeforecopy(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  VARIANT onbeforecopy();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    void oncopy(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+56)), displaybind, bindable]    VARIANT oncopy();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  void onbeforepaste(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+60)), displaybind, bindable]  VARIANT onbeforepaste();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   void onpaste(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+57)), displaybind, bindable]   VARIANT onpaste();                                                    [propget, id(((0x80010000+500)+500)+7), nonbrowsable]       IHTMLCurrentStyle* currentStyle();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  void onpropertychange(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+47)), displaybind, bindable]  VARIANT onpropertychange();                                           [id(((0x80010000+500)+500)+44)]                            IHTMLRectCollection* getClientRects();                                [id(((0x80010000+500)+500)+45)]                     IHTMLRect* getBoundingClientRect();                                   [id((0x80010000+500)+4)]                             void setExpression(                                                  [in] BSTR propname,                                              [in] BSTR expr,                                                  [defaultvalue(""), in] BSTR lang);                                [id((0x80010000+500)+5)]                             VARIANT getExpression([in] BSTR propname);                            [id((0x80010000+500)+6)]                          VARIANT_BOOL removeExpression([in] BSTR propname);                    [propput, id((0x80010000+15)), displaybind, bindable]  void tabIndex(short v);                                               [propget, id((0x80010000+15)), displaybind, bindable]  short tabIndex();                                                     [id((((0x80010000+500)+500)+1000))]                                     void focus();                                                         [propput, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] void accessKey(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1000)+5), displaybind, bindable] BSTR accessKey();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    void onblur(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+15)), displaybind, bindable]    VARIANT onblur();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   void onfocus(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+14)), displaybind, bindable]   VARIANT onfocus();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  void onresize(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+36)), displaybind, bindable]  VARIANT onresize();                                                   [id((((0x80010000+500)+500)+1000)+2)]                                      void blur();                                                          [id((((0x80010000+500)+500)+1000)+17)]                                 void addFilter([in] IUnknown* pUnk);                                  [id((((0x80010000+500)+500)+1000)+18)]                              void removeFilter([in] IUnknown* pUnk);                               [propget, id((((0x80010000+500)+500)+1000)+19), displaybind, bindable]  LONG clientHeight();                                                  [propget, id((((0x80010000+500)+500)+1000)+20), displaybind, bindable]  LONG clientWidth();                                                   [propget, id((((0x80010000+500)+500)+1000)+21), displaybind, bindable]  LONG clientTop();                                                     [propget, id((((0x80010000+500)+500)+1000)+22), displaybind, bindable]  LONG clientLeft();                                                    [id((0x80010000+500)+7)]                               VARIANT_BOOL attachEvent(                                            [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [id((0x80010000+500)+8)]                               void detachEvent(                                                    [in] BSTR event,                                             [in] IDispatch* pDisp);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+116))] VARIANT readyState();   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  void onreadystatechange(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+25)), displaybind, bindable]  VARIANT onreadystatechange();                                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  void onrowsdelete(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+62)), displaybind, bindable]  VARIANT onrowsdelete();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  void onrowsinserted(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+63)), displaybind, bindable]  VARIANT onrowsinserted();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  void oncellchange(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+64)), displaybind, bindable]  VARIANT oncellchange();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       void dir(BSTR v);                                                     [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+117)), displaybind, bindable]       BSTR dir();                                                           [id(((0x80010000+500)+500)+56)]                        IDispatch* createControlRange();                                      [propget, id(((0x80010000+500)+500)+57), displaybind, bindable]  LONG scrollHeight();                                                  [propget, id(((0x80010000+500)+500)+58), displaybind, bindable]  LONG scrollWidth();                                                   [propput, id(((0x80010000+500)+500)+59), displaybind, bindable] void scrollTop(LONG v);                                               [propget, id(((0x80010000+500)+500)+59), displaybind, bindable] LONG scrollTop();                                                     [propput, id(((0x80010000+500)+500)+60), displaybind, bindable]  void scrollLeft(LONG v);                                              [propget, id(((0x80010000+500)+500)+60), displaybind, bindable]  LONG scrollLeft();                                                    [id(((0x80010000+500)+500)+62)]                           void clearAttributes();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  void oncontextmenu(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+65)), displaybind, bindable]  VARIANT oncontextmenu();                                              [id(((0x80010000+500)+500)+69)]                     IHTMLElement* insertAdjacentElement(                                 [in] BSTR where,                                                 [in] IHTMLElement* insertedElement);                              [id(((0x80010000+500)+500)+65)]                              IHTMLElement* applyElement([in] IHTMLElement* apply,[in] BSTR where);   [id(((0x80010000+500)+500)+70)]                           BSTR getAdjacentText([in] BSTR where);                                [id(((0x80010000+500)+500)+71)]                       BSTR replaceAdjacentText([in] BSTR where,[in] BSTR newText);          [propget, id(((0x80010000+500)+500)+72)]                  VARIANT_BOOL canHaveChildren();                                       [id(((0x80010000+500)+500)+80)]                               LONG addBehavior([in] BSTR bstrUrl,[optional, in] VARIANT* pvarFactory);   [id(((0x80010000+500)+500)+81)]                            VARIANT_BOOL removeBehavior([in] LONG cookie);                        [propget, id(((0x80010000+500)+500)+64), nonbrowsable]       IHTMLStyle* runtimeStyle();                                           [propget, id(((0x80010000+500)+500)+82)]                     IDispatch* behaviorUrns();                                            [propput, id(((0x80010000+500)+500)+83)]                           void tagUrn(BSTR v);                                                  [propget, id(((0x80010000+500)+500)+83)]                           BSTR tagUrn();                                                        [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  void onbeforeeditfocus(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+69)), displaybind, bindable]  VARIANT onbeforeeditfocus();                                          [propget, id(((0x80010000+500)+500)+84), hidden, restricted]  LONG readyStateValue();                                               [id(((0x80010000+500)+500)+85)]                      IHTMLElementCollection* getElementsByTagName([in] BSTR v);       [id(((0x80010000+500)+500)+96)]                           void mergeAttributes(                                                [in] IHTMLElement* mergeThis,                                [optional, in] VARIANT* pvarFlags);                           [propget, id(((0x80010000+500)+500)+97)]                      VARIANT_BOOL isMultiLine();                                           [propget, id(((0x80010000+500)+500)+98)]                      VARIANT_BOOL canHaveHTML();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  void onlayoutcomplete(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+73)), displaybind, bindable]  VARIANT onlayoutcomplete();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    void onpage(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+74)), displaybind, bindable]    VARIANT onpage();                                                     [propput, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  void inflateBlock(VARIANT_BOOL v);                                    [propget, id(((0x80010000+500)+500)+100), hidden, restricted, nonbrowsable]  VARIANT_BOOL inflateBlock();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  void onbeforedeactivate(VARIANT v);                                   [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+77)), displaybind, bindable]  VARIANT onbeforedeactivate();                                         [id(((0x80010000+500)+500)+101)]                                 void setActive();                                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  void contentEditable(BSTR v);                                         [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+162)), displaybind, bindable]  BSTR contentEditable();                                               [propget, id(((0x80010000+500)+500)+102)]                VARIANT_BOOL isContentEditable();                                     [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] void hideFocus(VARIANT_BOOL v);                                       [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+163)), displaybind, bindable] VARIANT_BOOL hideFocus();                                             [propput, id((0x80010000+76)), displaybind, bindable]  void disabled(VARIANT_BOOL v);                                        [propget, id((0x80010000+76)), displaybind, bindable]  VARIANT_BOOL disabled();                                              [propget, id(((0x80010000+500)+500)+105)]                       VARIANT_BOOL isDisabled();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    void onmove(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+78)), displaybind, bindable]    VARIANT onmove();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  void oncontrolselect(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+79)), displaybind, bindable]  VARIANT oncontrolselect();                                            [id(((0x80010000+500)+500)+106)]                                 VARIANT_BOOL fireEvent(                                              [in] BSTR bstrEventName,                                         [optional, in] VARIANT* pvarEventObject);                         [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  void onresizestart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+83)), displaybind, bindable]  VARIANT onresizestart();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  void onresizeend(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+84)), displaybind, bindable]  VARIANT onresizeend();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  void onmovestart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+81)), displaybind, bindable]  VARIANT onmovestart();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] void onmoveend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+82)), displaybind, bindable] VARIANT onmoveend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  void onmouseenter(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+85)), displaybind, bindable]  VARIANT onmouseenter();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  void onmouseleave(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+86)), displaybind, bindable]  VARIANT onmouseleave();                                               [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  void onactivate(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+87)), displaybind, bindable]  VARIANT onactivate();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  void ondeactivate(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+88)), displaybind, bindable]  VARIANT ondeactivate();                                               [id(((0x80010000+500)+500)+107)]                                  VARIANT_BOOL dragDrop();                                              [propget, id(((0x80010000+500)+500)+108), hidden, restricted, nonbrowsable]  LONG glyphMode();       [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  void onmousewheel(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+76)), displaybind, bindable]  VARIANT onmousewheel();                                               [id(((0x80010000+500)+500)+112)]                                 void normalize();                                                     [id(((0x80010000+500)+500)+109)]                          IHTMLDOMAttribute* getAttributeNode([in] BSTR bstrname);              [id(((0x80010000+500)+500)+110)]                          IHTMLDOMAttribute* setAttributeNode([in] IHTMLDOMAttribute* pattr);   [id(((0x80010000+500)+500)+111)]                       IHTMLDOMAttribute* removeAttributeNode([in] IHTMLDOMAttribute* pattr);   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  void onbeforeactivate(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+90)), displaybind, bindable]  VARIANT onbeforeactivate();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] void onfocusin(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+91)), displaybind, bindable] VARIANT onfocusin();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  void onfocusout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+92)), displaybind, bindable]  VARIANT onfocusout();       [propget, id(((0x80010000+500)+500)+54), hidden]   LONG uniqueNumber();                                          [propget, id(((0x80010000+500)+500)+55), hidden]       BSTR uniqueID();     [propget, id(((0x80010000+500)+500)+46)]                          LONG nodeType();                                                      [propget, id(((0x80010000+500)+500)+47)]                        IHTMLDOMNode* parentNode();                                           [id(((0x80010000+500)+500)+48)]                              VARIANT_BOOL hasChildNodes();                                         [propget, id(((0x80010000+500)+500)+49)]                        IDispatch* childNodes();                                              [propget, id(((0x80010000+500)+500)+50)]                        IDispatch* attributes();                                              [id(((0x80010000+500)+500)+51)]                               IHTMLDOMNode* insertBefore(                                          [in] IHTMLDOMNode* newChild,                                 [optional, in] VARIANT refChild);                             [id(((0x80010000+500)+500)+52)]                                IHTMLDOMNode* removeChild([in] IHTMLDOMNode* oldChild);               [id(((0x80010000+500)+500)+53)]                               IHTMLDOMNode* replaceChild(                                          [in] IHTMLDOMNode* newChild,                                     [in] IHTMLDOMNode* oldChild);                                     [id(((0x80010000+500)+500)+61)]                                  IHTMLDOMNode* cloneNode([in] VARIANT_BOOL fDeep);                     [id(((0x80010000+500)+500)+66)]                                 IHTMLDOMNode* removeNode([defaultvalue(0), in] VARIANT_BOOL fDeep);   [id(((0x80010000+500)+500)+68)]                                   IHTMLDOMNode* swapNode([in] IHTMLDOMNode* otherNode);                 [id(((0x80010000+500)+500)+67)]                                IHTMLDOMNode* replaceNode([in] IHTMLDOMNode* replacement);            [id(((0x80010000+500)+500)+73)]                                IHTMLDOMNode* appendChild([in] IHTMLDOMNode* newChild);               [propget, id(((0x80010000+500)+500)+74)]                          BSTR nodeName();                                                      [propput, id(((0x80010000+500)+500)+75)]                         void nodeValue(VARIANT v);                                            [propget, id(((0x80010000+500)+500)+75)]                         VARIANT nodeValue();                                                  [propget, id(((0x80010000+500)+500)+76)]                        IHTMLDOMNode* firstChild();                                           [propget, id(((0x80010000+500)+500)+77)]                         IHTMLDOMNode* lastChild();                                            [propget, id(((0x80010000+500)+500)+78)]                   IHTMLDOMNode* previousSibling();                                      [propget, id(((0x80010000+500)+500)+79)]                       IHTMLDOMNode* nextSibling();        [propget, id(((0x80010000+500)+500)+113)]    IDispatch *ownerDocument();         [propput, id(((0x80010000+500)+500)+21)]       void dataFld(BSTR v);                                 [propget, id(((0x80010000+500)+500)+21)]       BSTR dataFld();                                       [propput, id(((0x80010000+500)+500)+22)]       void dataSrc(BSTR v);                                 [propget, id(((0x80010000+500)+500)+22)]       BSTR dataSrc();                                       [propput, id(((0x80010000+500)+500)+23)]  void dataFormatAs(BSTR v);                            [propget, id(((0x80010000+500)+500)+23)]  BSTR dataFormatAs();    [id((((0x80010000+500)+500)+200))]                      IHTMLDOMAttribute2 *ie8_getAttributeNode([in] BSTR bstrname);         [id((((0x80010000+500)+500)+200)+1)]                      IHTMLDOMAttribute2 *ie8_setAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+2)]                   IHTMLDOMAttribute2 *ie8_removeAttributeNode([in] IHTMLDOMAttribute2 *pattr);   [id((((0x80010000+500)+500)+200)+3)]                              VARIANT_BOOL hasAttribute([in] BSTR name);                            [propput, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      void role(BSTR v);                                                    [propget, id((((0x80010000+500)+500)+200)+4), displaybind, bindable]      BSTR role();                                                          [propput, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  void ariaBusy(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+5), displaybind, bindable]  BSTR ariaBusy();                                                      [propput, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  void ariaChecked(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+6), displaybind, bindable]  BSTR ariaChecked();                                                   [propput, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  void ariaDisabled(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+7), displaybind, bindable]  BSTR ariaDisabled();                                                  [propput, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  void ariaExpanded(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+8), displaybind, bindable]  BSTR ariaExpanded();                                                  [propput, id((((0x80010000+500)+500)+200)+9), displaybind, bindable] void ariaHaspopup(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+9), displaybind, bindable]  BSTR ariaHaspopup();                                                  [propput, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  void ariaHidden(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+10), displaybind, bindable]  BSTR ariaHidden();                                                    [propput, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  void ariaInvalid(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+11), displaybind, bindable]  BSTR ariaInvalid();                                                   [propput, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  void ariaMultiselectable(BSTR v);                                     [propget, id((((0x80010000+500)+500)+200)+12), displaybind, bindable]  BSTR ariaMultiselectable();                                           [propput, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  void ariaPressed(BSTR v);                                             [propget, id((((0x80010000+500)+500)+200)+13), displaybind, bindable]  BSTR ariaPressed();                                                   [propput, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  void ariaReadonly(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+14), displaybind, bindable]  BSTR ariaReadonly();                                                  [propput, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  void ariaRequired(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+15), displaybind, bindable]  BSTR ariaRequired();                                                  [propput, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  void ariaSecret(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+16), displaybind, bindable]  BSTR ariaSecret();                                                    [propput, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  void ariaSelected(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+17), displaybind, bindable]  BSTR ariaSelected();                                                  [id((((0x80010000+500)+500)+200)+18)]                          VARIANT ie8_getAttribute([in] BSTR strAttributeName);                 [id((((0x80010000+500)+500)+200)+19)]                          void ie8_setAttribute([in] BSTR strAttributeName,[in] VARIANT AttributeValue);   [id((((0x80010000+500)+500)+200)+20)]                       VARIANT_BOOL ie8_removeAttribute([in] BSTR strAttributeName);         [propget, id((((0x80010000+500)+500)+200)+21)]                   IHTMLAttributeCollection3 *ie8_attributes();                          [propput, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  void ariaValuenow(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+22), displaybind, bindable]  BSTR ariaValuenow();                                                  [propput, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  void ariaPosinset(short v);                                           [propget, id((((0x80010000+500)+500)+200)+23), displaybind, bindable]  short ariaPosinset();                                                 [propput, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  void ariaSetsize(short v);                                            [propget, id((((0x80010000+500)+500)+200)+24), displaybind, bindable]  short ariaSetsize();                                                  [propput, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] void ariaLevel(short v);                                              [propget, id((((0x80010000+500)+500)+200)+25), displaybind, bindable] short ariaLevel();                                                    [propput, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  void ariaValuemin(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+26), displaybind, bindable]  BSTR ariaValuemin();                                                  [propput, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  void ariaValuemax(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+27), displaybind, bindable]  BSTR ariaValuemax();                                                  [propput, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  void ariaControls(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+28), displaybind, bindable]  BSTR ariaControls();                                                  [propput, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  void ariaDescribedby(BSTR v);                                         [propget, id((((0x80010000+500)+500)+200)+29), displaybind, bindable]  BSTR ariaDescribedby();                                               [propput, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  void ariaFlowto(BSTR v);                                              [propget, id((((0x80010000+500)+500)+200)+30), displaybind, bindable]  BSTR ariaFlowto();                                                    [propput, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  void ariaLabelledby(BSTR v);                                          [propget, id((((0x80010000+500)+500)+200)+31), displaybind, bindable]  BSTR ariaLabelledby();                                                [propput, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  void ariaActivedescendant(BSTR v);                                    [propget, id((((0x80010000+500)+500)+200)+32), displaybind, bindable]  BSTR ariaActivedescendant();                                          [propput, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  void ariaOwns(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+33), displaybind, bindable]  BSTR ariaOwns();                                                      [id((((0x80010000+500)+500)+200)+34)]                             VARIANT_BOOL hasAttributes();                                         [propput, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  void ariaLive(BSTR v);                                                [propget, id((((0x80010000+500)+500)+200)+35), displaybind, bindable]  BSTR ariaLive();                                                      [propput, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  void ariaRelevant(BSTR v);                                            [propget, id((((0x80010000+500)+500)+200)+36), displaybind, bindable]  BSTR ariaRelevant();       [id(((0x80010000+500)+500)+114)]                  IHTMLElement *querySelector([in] BSTR v);                     [id(((0x80010000+500)+500)+115)]               IHTMLDOMChildrenCollection *querySelectorAll([in] BSTR v);    [propget, id((0x80010000+500)+9), hidden]        IDispatch *constructor();

    [propput, id(1000+2), displaybind, bindable]
    void size(LONG v);

    [propget, id(1000+2), displaybind, bindable]
    LONG size();

    [propput, id(1000+3), displaybind, bindable]
    void multiple(VARIANT_BOOL v);

    [propget, id(1000+3), displaybind, bindable]
    VARIANT_BOOL multiple();

    [propput, id((0x80010000+0)), displaybind, bindable]
    void name(BSTR v);

    [propget, id((0x80010000+0)), displaybind, bindable]
    BSTR name();

    [propget, id(1000+5)]
    IDispatch *options();

    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+30)), displaybind, bindable]
    void onchange(VARIANT v);

    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+30)), displaybind, bindable]
    VARIANT onchange();

    [propput, id(1000+10)]
    void selectedIndex(LONG v);

    [propget, id(1000+10)]
    LONG selectedIndex();

    [propget, id(1000+12), displaybind, bindable]
    BSTR type();

    [propput, id(1000+11), displaybind, bindable]
    void value(BSTR v);

    [propget, id(1000+11), displaybind, bindable]
    BSTR value();

    [propget, id((((0x80010000+500)+500)+1000)+4)]
    IHTMLFormElement *form();

    [id((1000+500)+3)]
    void add(
            [in] IHTMLElement *element,
            [in, optional] VARIANT before);

    [id((1000+500)+4)]
    void remove([in, defaultvalue(-1)] LONG index);

    [propput, id((1000+500))]
    void length(LONG v);

    [propget, id((1000+500))]
    LONG length();

    [propget, id(DISPID_NEWENUM), hidden, restricted]
    IUnknown *_newEnum();

    [id(DISPID_VALUE)]
    IDispatch *item(
            [in, optional] VARIANT name,
            [in, optional] VARIANT index);

    [id((1000+500)+2)]
    IDispatch *tags([in] VARIANT tagName);

    [id((1000+500)+5)]
    IDispatch *urns([in] VARIANT urn);

    [id((1000+500)+6)]
    IDispatch *namedItem([in] BSTR name);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050F25A-98B5-11CF-BB82-00AA00BDCE0B)
]
interface IHTMLSelectionObject : IDispatch
{
    [id((1000+1))]
    HRESULT createRange([retval, out] IDispatch **range);

    [id((1000+2))]
    HRESULT empty();

    [id((1000+3))]
    HRESULT clear();

    [propget, id((1000+4))]
    HRESULT type([retval, out] BSTR *p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050f7ec-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLSelectionObject2 : IDispatch
{
    [id(1000+5)]
    HRESULT createRangeCollection([out, retval] IDispatch **rangeCollection);

    [propget, id(1000+6)]
    HRESULT typeDetail([out, retval] BSTR *p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(305104b6-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLSelection : IDispatch
{
    [propget, id(1000+1)]
    HRESULT anchorNode([out, retval] IHTMLDOMNode **p);

    [propget, id(1000+2)]
    HRESULT anchorOffset([out, retval] long *p);

    [propget, id(1000+3)]
    HRESULT focusNode([out, retval] IHTMLDOMNode **p);

    [propget, id(1000+4)]
    HRESULT focusOffset([out, retval] long *p);

    [propget, id(1000+5)]
    HRESULT isCollapsed([out, retval] VARIANT_BOOL *p);

    [id(1000+6)]
    HRESULT collapse(
        [in] IDispatch *parentNode,
        [in] long offfset);

    [id(1000+7)]
    HRESULT collapseToStart();

    [id(1000+8)]
    HRESULT collapseToEnd();

    [id(1000+9)]
    HRESULT selectAllChildren([in] IDispatch *parentNode);

    [id(1000+10)]
    HRESULT deleteFromDocument();

    [propget, id(1000+11)]
    HRESULT rangeCount([out, retval] long *p);

    [id(1000+12)]
    HRESULT getRangeAt(
        [in] long index,
        [out, retval] IHTMLDOMRange **ppRange);

    [id(1000+13)]
    HRESULT addRange([in] IDispatch *range);

    [id(1000+14)]
    HRESULT removeRange([in] IDispatch *range);

    [id(1000+15)]
    HRESULT removeAllRanges();

    [id(1000+16)]
    HRESULT toString([out, retval] BSTR *pSelectionString);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050F211-98B5-11CF-BB82-00AA00BDCE0B)
]
interface IHTMLOptionElement : IDispatch
{
    [propput, id((1000+1))]
    HRESULT selected([in] VARIANT_BOOL v);

    [propget, id((1000+1))]
    HRESULT selected([retval, out] VARIANT_BOOL *p);

    [propput, id((1000+2))]
    HRESULT value([in] BSTR v);

    [propget, id((1000+2))]
    HRESULT value([retval, out] BSTR *p);

    [propput, id((1000+3))]
    HRESULT defaultSelected([in] VARIANT_BOOL v);

    [propget, id((1000+3))]
    HRESULT defaultSelected([retval, out] VARIANT_BOOL *p);

    [propput, id((1000+5))]
    HRESULT index([in] LONG v);

    [propget, id((1000+5))]
    HRESULT index([retval, out] LONG *p);

    [propput, id((1000+4))]
    HRESULT text([in] BSTR v);

    [propget, id((1000+4))]
    HRESULT text([retval, out] BSTR *p);

    [propget, id((1000+6))]
    HRESULT form([retval, out] IHTMLFormElement **p);
}

[
    odl,
    oleautomation,
    dual,
    uuid(3050f820-98b5-11cf-bb82-00aa00bdce0b)
]
interface IHTMLOptionElement3 : IDispatch
{
    [propput, id(1000+7), displaybind, bindable]
    HRESULT label([in] BSTR v);

    [propget, id(1000+7), displaybind, bindable]
    HRESULT label([retval, out] BSTR * p);
}




[
    odl,
    oleautomation,
    dual,
    uuid(3050F38C-98B5-11Cf-BB82-00AA00BDCE0B)
]
interface IHTMLOptionElementFactory : IDispatch
{
    [id(DISPID_VALUE)]
    HRESULT create(
        [optional, in] VARIANT text,
        [optional, in] VARIANT value,
        [optional, in] VARIANT defaultselected,
        [optional, in] VARIANT selected,
        [retval, out] IHTMLOptionElement **optelem);
}




[
    hidden,
    uuid(3050f52b-98b5-11cf-bb82-00aa00bdce0b)
]
dispinterface DispHTMLOptionElement
{
properties:
methods:
    [id(((0x80010000+500)+1))]                               void setAttribute(                                                   [in] BSTR strAttributeName,                                      [in] VARIANT AttValue,                                           [defaultvalue(1), in] LONG lFlags);                               [id(((0x80010000+500)+2))]                               VARIANT getAttribute(                                                [in] BSTR strAttributeName,                                      [defaultvalue(0), in] LONG lFlags);                               [id(((0x80010000+500)+3))]                            VARIANT_BOOL removeAttribute(                                        [in] BSTR strAttributeName,                                      [defaultvalue(1), in] LONG lFlags);                               [propput, id((((0x80010000+500)+500)+1)), bindable]               void className(BSTR v);                                               [propget, id((((0x80010000+500)+500)+1)), bindable]               BSTR className();                                                     [propput, id((((0x80010000+500)+500)+2)), bindable]                      void id(BSTR v);                                                      [propget, id((((0x80010000+500)+500)+2)), bindable]                      BSTR id();                                                            [propget, id((((0x80010000+500)+500)+4))]                           BSTR tagName();                                                       [propget, id((0x80010000+8))]                     IHTMLElement *parentElement();                                        [propget, id((0x80010000+74)), nonbrowsable]               IHTMLStyle *style();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     void onhelp(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+13)), displaybind, bindable]     VARIANT onhelp();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    void onclick(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+8)), displaybind, bindable]    VARIANT onclick();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] void ondblclick(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+9)), displaybind, bindable] VARIANT ondblclick();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  void onkeydown(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+5)), displaybind, bindable]  VARIANT onkeydown();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    void onkeyup(VARIANT v);                                              [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+6)), displaybind, bindable]    VARIANT onkeyup();                                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] void onkeypress(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+7)), displaybind, bindable] VARIANT onkeypress();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] void onmouseout(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+1)), displaybind, bindable] VARIANT onmouseout();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  void onmouseover(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+0)), displaybind, bindable]  VARIANT onmouseover();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  void onmousemove(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+4)), displaybind, bindable]  VARIANT onmousemove();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  void onmousedown(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+2)), displaybind, bindable]  VARIANT onmousedown();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  void onmouseup(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+3)), displaybind, bindable]  VARIANT onmouseup();                                                  [propget, id((((0x80010000+500)+500)+18))] IDispatch* document();    [propput, id((0x80010000+69)), displaybind, bindable]      void title(BSTR v);                                                   [propget, id((0x80010000+69)), displaybind, bindable]      BSTR title();                                                         [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   void language(BSTR v);                                                [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+100)), displaybind, bindable]   BSTR language();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  void onselectstart(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+37)), displaybind, bindable]  VARIANT onselectstart();                                              [id((((0x80010000+500)+500)+19))]                             void scrollIntoView([optional, in] VARIANT varargStart);              [id((((0x80010000+500)+500)+20))]                                   VARIANT_BOOL contains([in] IHTMLElement* pChild);                     [propget, id((((0x80010000+500)+500)+24)), bindable]             LONG sourceIndex();                                                   [propget, id((((0x80010000+500)+500)+25))]                      VARIANT recordNumber();                                               [propput, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              void lang(BSTR v);                                                    [propget, id((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+9))]                              BSTR lang();                                                          [propget, id((((0x80010000+500)+500)+8))]                        LONG offsetLeft();                                                    [propget, id((((0x80010000+500)+500)+9))]                         LONG offsetTop();                                                     [propget, id((((0x80010000+500)+500)+10))]                       LONG offsetWidth();                                                   [propget, id((((0x80010000+500)+500)+11))]                      LONG offsetHeight();                                                  [propget, id((((0x80010000+500)+500)+12))]                      IHTMLElement* offsetParent();                                         [propput, id((((0x80010000+500)+500)+26))]                         void innerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+26))]                         BSTR innerHTML();                                                     [propput, id((((0x80010000+500)+500)+27))]                         void innerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+27))]                         BSTR innerText();                                                     [propput, id((((0x80010000+500)+500)+28))]                         void outerHTML(BSTR v);                                               [propget, id((((0x80010000+500)+500)+28))]                         BSTR outerHTML();                                                     [propput, id((((0x80010000+500)+500)+29))]                         void outerText(BSTR v);                                               [propget, id((((0x80010000+500)+500)+29))]                         BSTR outerText();                                                     [id((((0x80010000+500)+500)+30))]                         void insertAdjacentHTML(                                             [in] BSTR where,                                                 [in] BSTR html);                                                  [id((((0x80010000+500)+500)+31))]                         void insertAdjacentText(                                             [in] BSTR where,                                                 [in] BSTR text);                                                  [propget, id((((0x80010000+500)+500)+32))]                    IHTMLElement* parentTextEdit();                                       [propget, id((((0x80010000+500)+500)+34))]                        VARIANT_BOOL isTextEdit();                                            [id((((0x80010000+500)+500)+33))]                                      void click();                                                         [propget, id((((0x80010000+500)+500)+35))]                           IHTMLFiltersCollection* filters();                                    [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  void ondragstart(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+35)), displaybind, bindable]  VARIANT ondragstart();                                                [id((((0x80010000+500)+500)+36))]                                   BSTR toString();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  void onbeforeupdate(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+21)), displaybind, bindable]  VARIANT onbeforeupdate();                                             [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  void onafterupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+22)), displaybind, bindable]  VARIANT onafterupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  void onerrorupdate(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+38)), displaybind, bindable]  VARIANT onerrorupdate();                                              [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  void onrowexit(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+18)), displaybind, bindable]  VARIANT onrowexit();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  void onrowenter(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+19)), displaybind, bindable]  VARIANT onrowenter();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  void ondatasetchanged(VARIANT v);                                     [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+40)), displaybind, bindable]  VARIANT ondatasetchanged();                                           [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  void ondataavailable(VARIANT v);                                      [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+41)), displaybind, bindable]  VARIANT ondataavailable();                                            [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  void ondatasetcomplete(VARIANT v);                                    [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+42)), displaybind, bindable]  VARIANT ondatasetcomplete();                                          [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  void onfilterchange(VARIANT v);                                       [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+43)), displaybind, bindable]  VARIANT onfilterchange();                                             [propget, id((((0x80010000+500)+500)+37))]                          IDispatch* children();                                                [propget, id((((0x80010000+500)+500)+38))]                               IDispatch* all();        [propget, id(((0x80010000+500)+500)+39)]                        BSTR scopeName();                                                     [id(((0x80010000+500)+500)+40)]                                void setCapture([defaultvalue(-1), in] VARIANT_BOOL containerCapture);   [id(((0x80010000+500)+500)+41)]                            void releaseCapture();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  void onlosecapture(VARIANT v);                                        [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+46)), displaybind, bindable]  VARIANT onlosecapture();                                              [id(((0x80010000+500)+500)+42)]                        BSTR componentFromPoint([in] LONG x,[in] LONG y);                     [id(((0x80010000+500)+500)+43)]                                  void doScroll([optional, in] VARIANT component);                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  void onscroll(VARIANT v);                                             [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+31)), displaybind, bindable]  VARIANT onscroll();                                                   [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    void ondrag(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+49)), displaybind, bindable]    VARIANT ondrag();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  void ondragend(VARIANT v);                                            [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+50)), displaybind, bindable]  VARIANT ondragend();                                                  [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  void ondragenter(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+51)), displaybind, bindable]  VARIANT ondragenter();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  void ondragover(VARIANT v);                                           [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+52)), displaybind, bindable]  VARIANT ondragover();                                                 [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  void ondragleave(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+53)), displaybind, bindable]  VARIANT ondragleave();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    void ondrop(VARIANT v);                                               [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+54)), displaybind, bindable]    VARIANT ondrop();                                                     [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  void onbeforecut(VARIANT v);                                          [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+58)), displaybind, bindable]  VARIANT onbeforecut();                                                [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     void oncut(VARIANT v);                                                [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+55)), displaybind, bindable]     VARIANT oncut();                                                      [propput, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  void onbeforecopy(VARIANT v);                                         [propget, id(((((((((0x80010000+500)+500)+1000)+1000)+1000)+1000)+1000)+59)), displaybind, bindable]  VARIANT onbeforecopy();                                               [propput, id((((((